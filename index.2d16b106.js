var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};function t(e,t,n,r){Object.defineProperty(e,t,{get:n,set:r,enumerable:!0,configurable:!0})}function n(e,t){return Object.keys(t).forEach((function(n){"default"===n||"__esModule"===n||e.hasOwnProperty(n)||Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[n]}})})),e}var r={},i={},a=e.parcelRequire050c;null==a&&((a=function(e){if(e in r)return r[e].exports;if(e in i){var t=i[e];delete i[e];var n={id:e,exports:{}};return r[e]=n,t.call(n.exports,n,n.exports),n.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,t){i[e]=t},e.parcelRequire050c=a),a.register("kjyEk",(function(e,t){})),a.register("cmoHh",(function(e,t){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function a(e,t){var n=new r(e),a=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,a&&("object"==typeof a&&i(a,n),s.state=function(){return i(n,{})}),s}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.alea=a}(0,e,"function"==typeof define&&define)})),a.register("euRi5",(function(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function a(e,t){var n=new r(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&i(a,n),s.state=function(){return i(n,{})}),s}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xor128=a}(0,e,"function"==typeof define&&define)})),a.register("hDsEw",(function(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function a(e,t){var n=new r(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&i(a,n),s.state=function(){return i(n,{})}),s}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xorwow=a}(0,e,"function"==typeof define&&define)})),a.register("3J2Zm",(function(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,i=t.i;return e=r[i],n=(e^=e>>>7)^e<<24,n^=(e=r[i+1&7])^e>>>10,n^=(e=r[i+3&7])^e>>>3,n^=(e=r[i+4&7])^e<<7,e=r[i+7&7],n^=(e^=e<<13)^e<<9,r[i]=n,t.i=i+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function a(e,t){null==e&&(e=+new Date);var n=new r(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},s.int32=n.next,s.quick=s,a&&(a.x&&i(a,n),s.state=function(){return i(n,{})}),s}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xorshift7=a}(0,e,"function"==typeof define&&define)})),a.register("6Px8M",(function(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,i=t.X,a=t.i;return t.w=r=r+1640531527|0,n=i[a+34&127],e=i[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=i[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,i,a,s,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),i=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(s=s+1640531527|0,i=0==(n=o[127&a]^=r+s)?i+1:0);for(i>=128&&(o[127&(t&&t.length||0)]=-1),i=127,a=512;a>0;--a)r=o[i+34&127],n=o[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[i]=r^n;e.w=s,e.X=o,e.i=i}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function a(e,t){null==e&&(e=+new Date);var n=new r(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},s.int32=n.next,s.quick=s,a&&(a.X&&i(a,n),s.state=function(){return i(n,{})}),s}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xor4096=a}(0,e,"function"==typeof define&&define)})),a.register("lDm0S",(function(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,i=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^i,i=i-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^i,t.a=i-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function a(e,t){var n=new r(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&i(a,n),s.state=function(){return i(n,{})}),s}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.tychei=a}(0,e,"function"==typeof define&&define)}));class s{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class o{refCount(e){return l("refCount")}incRef(e){return l("incRef")}timerAvailable(){return!0}time(e){return l("time")}read(e){return l("read")}readSync(e){return l("readSync")}readToGPU(e,t){return l("readToGPU")}numDataIds(){return l("numDataIds")}disposeData(e,t){return l("disposeData")}write(e,t,n){return l("write")}move(e,t,n,r,i){return l("move")}memory(){return l("memory")}floatPrecision(){return l("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return l("dispose")}}function l(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}var u={};function c(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,f(e,t,n)}function h(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,f(e,n,r),f(t,n,r)}function p(e,t,n){return Math.max(e,Math.min(t,n))}function d(e){return e%2==0?e:e+1}function f(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function m(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function g(e,t){const n=Math.random();return t*n+(1-n)*e}function y(e,t){let n=0;for(let r=0;r<e.length;r++){const i=Number(e[r])-Number(t[r]);n+=i*i}return n}function x(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function v(e,t,n=""){x(T(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function b(e){x(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function w(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||B(e)&&!n)for(let r=0;r<e.length;++r)w(e[r],t,n);else t.push(e);return t}function _(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function S(e){return 0===e.length}function T(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function E(e){return e%1==0}function M(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function C(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function I(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return c(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function A(e,t=(e=>0),n){return new Promise(((r,i)=>{let a=0;const s=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?i():setTimeout(s,o)};s()}))}function N(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const i=e.slice();return i[r]=t/n,i}function R(e,t){const n=t.length;return x((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),x(e.every((e=>E(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function L(e,t){const n=[],r=[],i=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||i?null:R(t,e).sort();let s=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[s]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[s]||a[s]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[s]<=t&&s++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function O(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function P(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function D(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function F(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function $(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function B(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function z(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function U(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function V(e){return"string"==typeof e||e instanceof String}function W(e){return"boolean"==typeof e}function H(e){return"number"==typeof e}function G(e){return Array.isArray(e)?G(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":H(e)?"float32":V(e)?"string":W(e)?"bool":"float32"}function j(e){return!!(e&&e.constructor&&e.call&&e.apply)}function q(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function X(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function K(e,t,n,r=!1){const i=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)i[t]=n[e+t]}else{const a=t[0],s=t.slice(1),o=s.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)i[t]=K(e+t*o,s,n,r)}return i}function Y(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return K(0,e,t,n)}function Z(e,t){const n=J(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function J(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Q(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Y(e,new Float32Array(n));if("int32"===t)return Y(e,new Int32Array(n));if("bool"===t)return Y(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function ee(e){e.forEach((t=>{x(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function te(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function ne(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function re(e){return e&&e.then&&"function"==typeof e.then}t(u,"shuffle",(()=>c)),t(u,"swap",(()=>f)),t(u,"shuffleCombo",(()=>h)),t(u,"clamp",(()=>p)),t(u,"nearestLargerEven",(()=>d)),t(u,"sum",(()=>m)),t(u,"randUniform",(()=>g)),t(u,"distSquared",(()=>y)),t(u,"assert",(()=>x)),t(u,"assertShapesMatch",(()=>v)),t(u,"arraysEqual",(()=>T)),t(u,"assertNonNull",(()=>b)),t(u,"flatten",(()=>w)),t(u,"isTypedArray",(()=>B)),t(u,"sizeFromShape",(()=>_)),t(u,"isScalarShape",(()=>S)),t(u,"isInt",(()=>E)),t(u,"tanh",(()=>M)),t(u,"sizeToSquarishShape",(()=>C)),t(u,"createShuffledIndices",(()=>I)),t(u,"rightPad",(()=>k)),t(u,"repeatedTry",(()=>A)),t(u,"inferFromImplicitShape",(()=>N)),t(u,"parseAxisParam",(()=>R)),t(u,"squeezeShape",(()=>L)),t(u,"getTypedArrayFromDType",(()=>O)),t(u,"getArrayFromDType",(()=>P)),t(u,"checkConversionForErrors",(()=>D)),t(u,"isValidDtype",(()=>F)),t(u,"hasEncodingLoss",(()=>$)),t(u,"bytesPerElement",(()=>z)),t(u,"bytesFromStringArray",(()=>U)),t(u,"isString",(()=>V)),t(u,"isBoolean",(()=>W)),t(u,"isNumber",(()=>H)),t(u,"inferDtype",(()=>G)),t(u,"isFunction",(()=>j)),t(u,"nearestDivisor",(()=>q)),t(u,"computeStrides",(()=>X)),t(u,"toNestedArray",(()=>Y)),t(u,"makeOnesTypedArray",(()=>Z)),t(u,"makeZerosTypedArray",(()=>J)),t(u,"makeZerosNestedTypedArray",(()=>Q)),t(u,"assertNonNegativeIntegerDimensions",(()=>ee)),t(u,"locToIndex",(()=>te)),t(u,"indexToLoc",(()=>ne)),t(u,"isPromise",(()=>re));class ie{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ae,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(se().getBool("IS_TEST")||se().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];se().getBool("IS_TEST")||se().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(re(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if("tfjsflags"in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function ae(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function se(){return oe}let oe=null;var le,ue,ce={},he=ce={};function pe(){throw new Error("setTimeout has not been defined")}function de(){throw new Error("clearTimeout has not been defined")}function fe(e){if(le===setTimeout)return setTimeout(e,0);if((le===pe||!le)&&setTimeout)return le=setTimeout,setTimeout(e,0);try{return le(e,0)}catch(t){try{return le.call(null,e,0)}catch(t){return le.call(this,e,0)}}}!function(){try{le="function"==typeof setTimeout?setTimeout:pe}catch(e){le=pe}try{ue="function"==typeof clearTimeout?clearTimeout:de}catch(e){ue=de}}();var me,ge=[],ye=!1,xe=-1;function ve(){ye&&me&&(ye=!1,me.length?ge=me.concat(ge):xe=-1,ge.length&&be())}function be(){if(!ye){var e=fe(ve);ye=!0;for(var t=ge.length;t;){for(me=ge,ge=[];++xe<t;)me&&me[xe].run();xe=-1,t=ge.length}me=null,ye=!1,function(e){if(ue===clearTimeout)return clearTimeout(e);if((ue===de||!ue)&&clearTimeout)return ue=clearTimeout,clearTimeout(e);try{ue(e)}catch(t){try{return ue.call(null,e)}catch(t){return ue.call(this,e)}}}(e)}}function we(e,t){this.fun=e,this.array=t}function _e(){}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Se;function Te(){if(null==Se){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e)t=e;else if(void 0!==ce)t=ce;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}Se=t}return Se}function Ee(e,t){const n=function(){const e=Te();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}he.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];ge.push(new we(e,t)),1!==ge.length||ye||fe(be)},we.prototype.run=function(){this.fun.apply(null,this.array)},he.title="browser",he.browser=!0,he.env={},he.argv=[],he.version="",he.versions={},he.on=_e,he.addListener=_e,he.once=_e,he.off=_e,he.removeListener=_e,he.removeAllListeners=_e,he.emit=_e,he.prependListener=_e,he.prependOnceListener=_e,he.listeners=function(e){return[]},he.binding=function(e){throw new Error("process.binding is not supported")},he.cwd=function(){return"/"},he.chdir=function(e){throw new Error("process.chdir is not supported")},he.umask=function(){return 0};var Me={};function Ce(...e){se().getBool("IS_TEST")||se().getBool("PROD")||console.warn(...e)}function Ie(...e){se().getBool("IS_TEST")||se().getBool("PROD")||console.log(...e)}t(Me,"warn",(()=>Ce)),t(Me,"log",(()=>Ie));const ke=Ee("kernelRegistry",(()=>new Map)),Ae=Ee("gradRegistry",(()=>new Map));function Ne(e,t){const n=Pe(e,t);return ke.get(n)}function Re(e){return Ae.get(e)}function Le(e){const t=ke.entries(),n=[];for(;;){const{done:r,value:i}=t.next();if(r)break;const[a,s]=i,[o]=a.split("_");o===e&&n.push(s)}return n}function Oe(e){const{kernelName:t,backendName:n}=e,r=Pe(t,n);ke.has(r)&&Ce(`The kernel '${t}' for backend '${n}' is already registered`),ke.set(r,e)}function Pe(e,t){return`${t}_${e}`}var De={};t(De,"createScalarValue",(()=>_t)),t(De,"encodeString",(()=>Mt)),t(De,"toTypedArray",(()=>St)),t(De,"now",(()=>Tt)),t(De,"fetch",(()=>Et)),t(De,"decodeString",(()=>Ct));var Fe={};t(Fe,"hexToLong",(()=>ct)),t(Fe,"fingerPrint64",(()=>wt));var $e;$e=ze;var Be=null;try{Be=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function ze(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function Ue(e){return!0===(e&&e.__isLong__)}ze.prototype.__isLong__,Object.defineProperty(ze.prototype,"__isLong__",{value:!0}),ze.isLong=Ue;var Ve={},We={};function He(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=We[e])?r:(n=je(e,(0|e)<0?-1:0,!0),i&&(We[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=Ve[e])?r:(n=je(e,e<0?-1:0,!1),i&&(Ve[e]=n),n)}function Ge(e,t){if(isNaN(e))return t?tt:et;if(t){if(e<0)return tt;if(e>=Ze)return st}else{if(e<=-Je)return ot;if(e+1>=Je)return at}return e<0?Ge(-e,t).neg():je(e%Ye|0,e/Ye|0,t)}function je(e,t,n){return new ze(e,t,n)}ze.fromInt=He,ze.fromNumber=Ge,ze.fromBits=je;var qe=Math.pow;function Xe(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return et;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return Xe(e.substring(1),t,n).neg();for(var i=Ge(qe(n,8)),a=et,s=0;s<e.length;s+=8){var o=Math.min(8,e.length-s),l=parseInt(e.substring(s,s+o),n);if(o<8){var u=Ge(qe(n,o));a=a.mul(u).add(Ge(l))}else a=(a=a.mul(i)).add(Ge(l))}return a.unsigned=t,a}function Ke(e,t){return"number"==typeof e?Ge(e,t):"string"==typeof e?Xe(e,t):je(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}ze.fromString=Xe,ze.fromValue=Ke;var Ye=4294967296,Ze=Ye*Ye,Je=Ze/2,Qe=He(16777216),et=He(0);ze.ZERO=et;var tt=He(0,!0);ze.UZERO=tt;var nt=He(1);ze.ONE=nt;var rt=He(1,!0);ze.UONE=rt;var it=He(-1);ze.NEG_ONE=it;var at=je(-1,2147483647,!1);ze.MAX_VALUE=at;var st=je(-1,-1,!0);ze.MAX_UNSIGNED_VALUE=st;var ot=je(0,-2147483648,!1);ze.MIN_VALUE=ot;var lt=ze.prototype;lt.toInt=function(){return this.unsigned?this.low>>>0:this.low},lt.toNumber=function(){return this.unsigned?(this.high>>>0)*Ye+(this.low>>>0):this.high*Ye+(this.low>>>0)},lt.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(ot)){var t=Ge(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var i=Ge(qe(e,6),this.unsigned),a=this,s="";;){var o=a.div(i),l=(a.sub(o.mul(i)).toInt()>>>0).toString(e);if((a=o).isZero())return l+s;for(;l.length<6;)l="0"+l;s=""+l+s}},lt.getHighBits=function(){return this.high},lt.getHighBitsUnsigned=function(){return this.high>>>0},lt.getLowBits=function(){return this.low},lt.getLowBitsUnsigned=function(){return this.low>>>0},lt.getNumBitsAbs=function(){if(this.isNegative())return this.eq(ot)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},lt.isZero=function(){return 0===this.high&&0===this.low},lt.eqz=lt.isZero,lt.isNegative=function(){return!this.unsigned&&this.high<0},lt.isPositive=function(){return this.unsigned||this.high>=0},lt.isOdd=function(){return 1==(1&this.low)},lt.isEven=function(){return 0==(1&this.low)},lt.equals=function(e){return Ue(e)||(e=Ke(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},lt.eq=lt.equals,lt.notEquals=function(e){return!this.eq(e)},lt.neq=lt.notEquals,lt.ne=lt.notEquals,lt.lessThan=function(e){return this.comp(e)<0},lt.lt=lt.lessThan,lt.lessThanOrEqual=function(e){return this.comp(e)<=0},lt.lte=lt.lessThanOrEqual,lt.le=lt.lessThanOrEqual,lt.greaterThan=function(e){return this.comp(e)>0},lt.gt=lt.greaterThan,lt.greaterThanOrEqual=function(e){return this.comp(e)>=0},lt.gte=lt.greaterThanOrEqual,lt.ge=lt.greaterThanOrEqual,lt.compare=function(e){if(Ue(e)||(e=Ke(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},lt.comp=lt.compare,lt.negate=function(){return!this.unsigned&&this.eq(ot)?ot:this.not().add(nt)},lt.neg=lt.negate,lt.add=function(e){Ue(e)||(e=Ke(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,i=65535&this.low,a=e.high>>>16,s=65535&e.high,o=e.low>>>16,l=0,u=0,c=0,h=0;return c+=(h+=i+(65535&e.low))>>>16,u+=(c+=r+o)>>>16,l+=(u+=n+s)>>>16,l+=t+a,je((c&=65535)<<16|(h&=65535),(l&=65535)<<16|(u&=65535),this.unsigned)},lt.subtract=function(e){return Ue(e)||(e=Ke(e)),this.add(e.neg())},lt.sub=lt.subtract,lt.multiply=function(e){if(this.isZero())return et;if(Ue(e)||(e=Ke(e)),Be)return je(Be.mul(this.low,this.high,e.low,e.high),Be.get_high(),this.unsigned);if(e.isZero())return et;if(this.eq(ot))return e.isOdd()?ot:et;if(e.eq(ot))return this.isOdd()?ot:et;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Qe)&&e.lt(Qe))return Ge(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,i=65535&this.low,a=e.high>>>16,s=65535&e.high,o=e.low>>>16,l=65535&e.low,u=0,c=0,h=0,p=0;return h+=(p+=i*l)>>>16,c+=(h+=r*l)>>>16,h&=65535,c+=(h+=i*o)>>>16,u+=(c+=n*l)>>>16,c&=65535,u+=(c+=r*o)>>>16,c&=65535,u+=(c+=i*s)>>>16,u+=t*l+n*o+r*s+i*a,je((h&=65535)<<16|(p&=65535),(u&=65535)<<16|(c&=65535),this.unsigned)},lt.mul=lt.multiply,lt.divide=function(e){if(Ue(e)||(e=Ke(e)),e.isZero())throw Error("division by zero");var t,n,r;if(Be)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?je((this.unsigned?Be.div_u:Be.div_s)(this.low,this.high,e.low,e.high),Be.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?tt:et;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return tt;if(e.gt(this.shru(1)))return rt;r=tt}else{if(this.eq(ot))return e.eq(nt)||e.eq(it)?ot:e.eq(ot)?nt:(t=this.shr(1).div(e).shl(1)).eq(et)?e.isNegative()?nt:it:(n=this.sub(e.mul(t)),r=t.add(n.div(e)));if(e.eq(ot))return this.unsigned?tt:et;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=et}for(n=this;n.gte(e);){t=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),a=i<=48?1:qe(2,i-48),s=Ge(t),o=s.mul(e);o.isNegative()||o.gt(n);)o=(s=Ge(t-=a,this.unsigned)).mul(e);s.isZero()&&(s=nt),r=r.add(s),n=n.sub(o)}return r},lt.div=lt.divide,lt.modulo=function(e){return Ue(e)||(e=Ke(e)),Be?je((this.unsigned?Be.rem_u:Be.rem_s)(this.low,this.high,e.low,e.high),Be.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},lt.mod=lt.modulo,lt.rem=lt.modulo,lt.not=function(){return je(~this.low,~this.high,this.unsigned)},lt.and=function(e){return Ue(e)||(e=Ke(e)),je(this.low&e.low,this.high&e.high,this.unsigned)},lt.or=function(e){return Ue(e)||(e=Ke(e)),je(this.low|e.low,this.high|e.high,this.unsigned)},lt.xor=function(e){return Ue(e)||(e=Ke(e)),je(this.low^e.low,this.high^e.high,this.unsigned)},lt.shiftLeft=function(e){return Ue(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?je(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):je(0,this.low<<e-32,this.unsigned)},lt.shl=lt.shiftLeft,lt.shiftRight=function(e){return Ue(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?je(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):je(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},lt.shr=lt.shiftRight,lt.shiftRightUnsigned=function(e){if(Ue(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?je(this.low>>>e|t<<32-e,t>>>e,this.unsigned):je(32===e?t:t>>>e-32,0,this.unsigned)},lt.shru=lt.shiftRightUnsigned,lt.shr_u=lt.shiftRightUnsigned,lt.toSigned=function(){return this.unsigned?je(this.low,this.high,!1):this},lt.toUnsigned=function(){return this.unsigned?this:je(this.low,this.high,!0)},lt.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},lt.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},lt.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},ze.fromBytes=function(e,t,n){return n?ze.fromBytesLE(e,t):ze.fromBytesBE(e,t)},ze.fromBytesLE=function(e,t){return new ze(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},ze.fromBytesBE=function(e,t){return new ze(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const ut=$e.default||$e;function ct(e){return ut.fromString(e,!0,16)}const ht=ct("c3a5c85c97cb3127"),pt=ct("b492b66fbe98f273"),dt=ct("9ae16a3b2f90404f");function ft(e){return e.xor(e.shru(47))}function mt(e,t,n){const r=e.slice(t,t+n);return ut.fromBytes(Array.from(r),!0,!0)}function gt(e,t){return mt(e,t,8)}function yt(e,t){return mt(e,t,4)}function xt(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function vt(e,t,n=ct("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let i=t.xor(r).mul(n);return i=i.xor(i.shru(47)),i=i.mul(n),i}function bt(e,t,n,r){return function(e,t,n,r,i,a){i=i.add(e),a=xt(a.add(i).add(r),21);const s=i;return i=(i=i.add(t)).add(n),a=a.add(xt(i,44)),[i.add(r),a.add(s)]}(gt(e,t),gt(e,t+8),gt(e,t+16),gt(e,t+24),n,r)}function wt(e,t=e.length){const n=ut.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=dt.add(2*t),r=gt(e,0).add(dt),i=gt(e,t-8);return vt(xt(i,37).mul(n).add(r),xt(r,25).add(i).mul(n),n)}if(t>=4){const n=dt.add(2*t);return vt(yt(e,0).shl(3).add(t),yt(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return ft(dt.mul(n).xor(ht.mul(r))).mul(dt)}return dt}(e,t):function(e,t=e.length){const n=dt.add(2*t),r=gt(e,0).mul(pt),i=gt(e,8),a=gt(e,t-8).mul(n),s=gt(e,t-16).mul(dt);return vt(xt(r.add(i),43).add(xt(a,30)).add(s),r.add(xt(i.add(dt),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=dt.add(2*t),r=gt(e,0).mul(dt),i=gt(e,8),a=gt(e,t-8).mul(n),s=gt(e,t-16).mul(dt),o=xt(r.add(i),43).add(xt(a,30)).add(s),l=vt(o,r.add(xt(i.add(dt),18)).add(a),n),u=gt(e,16).mul(n),c=gt(e,24),h=o.add(gt(e,t-32)).mul(n),p=l.add(gt(e,t-24)).mul(n);return vt(xt(u.add(c),43).add(xt(h,30)).add(p),u.add(xt(c.add(r),18)).add(h),n)}(e,t);let r=n,i=n.mul(pt).add(113),a=ft(i.mul(dt).add(113)).mul(dt),s=[ut.UZERO,ut.UZERO],o=[ut.UZERO,ut.UZERO];r=r.mul(dt).add(gt(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=xt(r.add(i).add(s[0]).add(gt(e,l+8)),37).mul(pt),i=xt(i.add(s[1]).add(gt(e,l+48)),42).mul(pt),r=r.xor(o[1]),i=i.add(s[0]).add(gt(e,l+40)),a=xt(a.add(o[0]),33).mul(pt),s=bt(e,l,s[1].mul(pt),r.add(o[0])),o=bt(e,l+32,a.add(o[1]),i.add(gt(e,l+16))),[a,r]=[r,a],l+=64}while(l!==u);const h=pt.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),s[0]=s[0].add(o[0]),o[0]=o[0].add(s[0]),r=xt(r.add(i).add(s[0]).add(gt(e,l+8)),37).mul(h),i=xt(i.add(s[1]).add(gt(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),i=i.add(s[0].mul(9).add(gt(e,l+40))),a=xt(a.add(o[0]),33).mul(h),s=bt(e,l,s[1].mul(h),r.add(o[0])),o=bt(e,l+32,a.add(o[1]),i.add(gt(e,l+16))),[a,r]=[r,a],vt(vt(s[0],o[0],h).add(ft(i).mul(ht)).add(a),vt(s[1],o[1],h).add(r),h)}function _t(e,t){return"string"===t?Mt(e):St([e],t)}function St(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=w(e)),se().getBool("DEBUG")&&D(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Tt(){return se().platform.now()}function Et(e,t){return se().platform.fetch(e,t)}function Mt(e,t="utf-8"){return t=t||"utf-8",se().platform.encode(e,t)}function Ct(e,t="utf-8"){return t=t||"utf-8",se().platform.decode(e,t)}n(De,u),n(De,Fe);class It{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new At)}profileKernel(e,t,n){let r;const i=()=>{r=n()};let a;const s=Tt();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(i);else{i();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Tt()-s})}if(se().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{kt(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:i,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],i,n[2])}))}))}}function kt(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class At{logKernelProfile(e,t,n,r,i,a){const s="number"==typeof r?k(`${r}ms`,9):r.error,o=k(e,25),l=t.rank,u=t.size,c=k(t.shape.toString(),14);let h="";for(const e in i){const n=i[e];if(null!=n){const r=n.shape||t.shape,i=r.length;h+=`${e}: ${i}D ${i>0?r:""} `}}console.log(`%c${o}\t%c${s}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Nt(e,t,n){const r={},i={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],s=a.inputs;for(const e in s){const n=s[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,i[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const s={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,s[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(i[n.id]&&s[n.id]){const e={};for(const t in n.inputs){const i=n.inputs[t];r[i.id]&&(e[t]=i)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}function Rt(e,t,n,r){for(let i=t.length-1;i>=0;i--){const a=t[i],s=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?s.push(n):s.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(s);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const i=n((()=>o[t]()));if("float32"!==i.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${i.dtype}'`);const s=a.inputs[t];if(!T(i.shape,s.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${i.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=i;else{const t=e[s.id];e[s.id]=r(t,i),t.dispose()}}}}function Lt(e,t,n,r){const i=X(t),a=function(e,t,n,r){const i=_(t),a=r[r.length-1],s=new Array(a).fill(0),o=t.length,l="complex64"===n?Ft(e):e;if(o>1)for(let e=0;e<i/a;e++){const t=e*a;for(let e=0;e<a;e++)s[e]=Math.max(s[e],Ot(l[t+e],0,n).length)}return s}(e,t,n,i),s=t.length,o=Dt(e,t,n,i,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${s}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Ot(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:V(e)?`'${e}'`:"bool"===n?Pt(e):parseFloat(e.toFixed(7)).toString(),k(r,t)}function Pt(e){return 0===e?"false":"true"}function Dt(e,t,n,r,i,a=!0){const s="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[Ot(Ft(e)[0],0,n)]}return"bool"===n?[Pt(e[0])]:[e[0].toString()]}if(1===l){if(o>20){const t=3*s;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*s,o*s));return"complex64"===n&&(r=Ft(r),a=Ft(a)),["["+r.map(((e,t)=>Ot(e,i[t],n))).join(", ")+", ..., "+a.map(((e,t)=>Ot(e,i[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Ft(e):Array.from(e)).map(((e,t)=>Ot(e,i[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*s,p=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;p.push(...Dt(e.slice(r,a),u,n,c,i,!1))}p.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;p.push(...Dt(e.slice(r,a),u,n,c,i,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;p.push(...Dt(e.slice(r,a),u,n,c,i,t===o-1))}const d=2===l?",":"";p[0]="["+p[0]+d;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+d;let f=",\n";for(let e=2;e<l;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Ft(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class $t{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=_(e),null!=n){const e=n.length;x(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||P(t,this.size),this.strides=X(e)}set(e,...t){0===t.length&&(t=[0]),x(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Bt().makeTensor(this.values,this.shape,this.dtype)}}let Bt=null,zt=null,Ut=null;class Vt{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=_(e),this.strides=X(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return zt.buffer(this.shape,this.dtype,e)}bufferSync(){return zt.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Y(this.shape,e,"complex64"===this.dtype)}arraySync(){return Y(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Bt().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Ct(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Bt().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Bt().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Ct(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Bt().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Bt().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return zt.print(this,e)}clone(){return this.throwIfDisposed(),zt.clone(this)}toString(e=!1){return Lt(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),zt.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Bt().makeVariable(this,e,t,n)}}Object.defineProperty(Vt,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ee("Tensor",(()=>Vt));class Wt extends Vt{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!T(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Bt().disposeTensor(this),this.dataId=e.dataId,Bt().incRef(this,null)}dispose(){Bt().disposeVariable(this),this.isDisposedInternal=!0}}var Ht,Gt,jt,qt,Xt,Kt,Yt,Zt,Jt,Qt;Object.defineProperty(Wt,Symbol.hasInstance,{value:e=>e instanceof Vt&&null!=e.assign&&e.assign instanceof Function}),(Gt=Ht||(Ht={})).R0="R0",Gt.R1="R1",Gt.R2="R2",Gt.R3="R3",Gt.R4="R4",Gt.R5="R5",Gt.R6="R6",(qt=jt||(jt={})).float32="float32",qt.int32="int32",qt.bool="int32",qt.complex64="complex64",(Kt=Xt||(Xt={})).float32="float32",Kt.int32="int32",Kt.bool="bool",Kt.complex64="complex64",(Zt=Yt||(Yt={})).float32="float32",Zt.int32="float32",Zt.bool="float32",Zt.complex64="complex64",(Qt=Jt||(Jt={})).float32="complex64",Qt.int32="complex64",Qt.bool="complex64",Qt.complex64="complex64";const en={float32:Yt,int32:jt,bool:Xt,complex64:Jt};function tn(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return en[e][t]}function nn(e){return tn(e,"int32")}function rn(e,t){if(e.dtype===t.dtype)return[e,t];const n=tn(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function an(e){const t=[];return sn(e,t,new Set),t}function sn(e,t,n){if(null==e)return;if(e instanceof Vt)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const i=e;for(const e in i){const r=i[e];n.has(r)||(n.add(r),sn(r,t,n))}}function on(e){return null!=e.kernelName}class ln{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class un{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ln}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Ce(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new It(this.backendInstance),!0}setupRegisteredKernels(){Le(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Le(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof o||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Ce(`Initialization of backend ${e} failed`),Ce(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return Ce(`Initialization of backend ${e} failed`),Ce(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:i}=this.initializeBackend(n);if(i||r)return{name:n,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,i=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,i,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return un.nextTensorId++}nextVariableId(){return un.nextVariableId++}clone(e){const t=hn.runKernel("Identity",{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return hn.runKernel("Cast",t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Ne(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let i=0;n.forEach((e=>{i+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=r-t-i-a;if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),i=this.state.numBytes,a=this.state.numTensors;let s,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=on(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(on(e)){const{kernelName:t,inputs:i,attrs:a}=e;null==this.backendName&&this.backend;const l=Ne(t,this.backendName);x(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),s=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:i,attrs:a,backend:this.backend});const s=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,s);const u=s.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,i,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,i=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};s=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,i)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=on(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>s())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=s()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Re(e);if(null!=r){const e=r.inputsToSave||[],i=r.outputsToSave||[];let a;r.saveAllInputs?(x(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const s=n.filter(((e,t)=>i[t]));return a.concat(s)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let i=e;"string"===n&&V(e[0])&&(i=e.map((e=>Mt(e))));const a=r.write(i,t,n),s=new Vt(t,n,a,this.nextTensorId());if(this.trackTensor(s,r),"string"===n){const e=this.state.tensorInfo.get(a),t=U(i);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,r){const i={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(i,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:i}=e,a=new Vt(r,i,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const i=new Wt(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[i.name])throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*z(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Wt||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*z(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,i,a){const s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:i},o=Re(e);null!=o&&(r=o.gradFunc),null!=r&&(s.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=J(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],i,a))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=an(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(x(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const i=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));x(i instanceof Vt,(()=>"The result y returned by f() must be a tensor."));const a=Nt(this.state.activeTape,t,i);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[i.id]=null==n?function(e){const t=Z(_(e),"float32");return hn.makeTensor(t,e,"float32")}(i.shape):n,Rt(e,a,(e=>this.tidy(e)),pn);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:i,grads:r}}))}customGrad(e){return x(j(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;x(t.every((e=>e instanceof Vt)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,i)=>(n=e(...t,i),x(n.value instanceof Vt,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),x(j(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const i=n.gradFunc(e,r),a=Array.isArray(i)?i:[i];x(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),x(a.every((e=>e instanceof Vt)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const s={};return a.forEach(((e,t)=>{s[t]=()=>e})),s},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Tt(),n=await this.backend.time(e);return n.wallMs=Tt()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ln;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function cn(){const e=Te();if(null==e._tfengine){const t=new ie(e);e._tfengine=new un(t)}var t;return t=e._tfengine.ENV,oe=t,Bt=()=>e._tfengine,e._tfengine}un.nextTensorId=0,un.nextVariableId=0;const hn=cn();function pn(e,t){const n={a:e,b:t};return hn.runKernel("Add",n)}var dn={};let fn;function mn(e){fn=e}function gn(e){if(void 0!==fn)return fn;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function yn(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}t(dn,"mockIsMobile",(()=>mn)),t(dn,"isMobile",(()=>gn)),t(dn,"isBrowser",(()=>yn));const xn=se();function vn(e,t){let n=e;if(B(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||B(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&se().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&bn(e,r,[]),r}function bn(e,t,n){if(n=n||[],!Array.isArray(e)&&!B(e))return void x(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));x(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),x(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)bn(e[t],r,n.concat(t))}function wn(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function _n(e,t,n,r="numeric"){if(e instanceof Vt)return wn(r,e.dtype,t,n),e;let i=G(e);if("string"!==i&&["bool","int32","float32"].indexOf(r)>=0&&(i=r),wn(r,i,t,n),null==e||!B(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=vn(e,i);B(e)||Array.isArray(e)||(e=[e]);const s="string"!==i?St(e,i):w(e,[],!0);return hn.makeTensor(s,a,i)}function Sn(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,i)=>_n(e,`${t}[${i}]`,n,r)))}xn.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),xn.registerFlag("IS_BROWSER",(()=>yn())),xn.registerFlag("IS_NODE",(()=>void 0!==ce&&void 0!==ce.versions&&void 0!==ce.versions.node)),xn.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),xn.registerFlag("PROD",(()=>!1)),xn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>xn.getBool("DEBUG"))),xn.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),xn.registerFlag("IS_TEST",(()=>!1)),xn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),xn.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),xn.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1)),xn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1));function Tn(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const i=(...e)=>{hn.startScope(n);try{const t=r(...e);return re(t)&&console.error("Cannot return a Promise inside of tidy."),hn.endScope(t),t}catch(e){throw hn.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}const En=Tn({complex_:function(e,t){const n=_n(e,"real","complex"),r=_n(t,"imag","complex");v(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const i={real:n,imag:r};return hn.runKernel("Complex",i)}});function Mn(e,t,n,r){if(null==r&&(r=G(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!B(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ee(t);const e=_(t),r=_(n);x(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],i=e!==n.length-1||r!==_(t.slice(e));x(n[e]===t[e]||!i,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return B(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?St(e,r):w(e,[],!0),hn.makeTensor(e,t,r)}function Cn(e,t,n){return Mn(e,t,vn(e,n),n)}const In={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var kn,An,Nn;An=function(e){var t,n,r=zn(e),i=r[0],a=r[1],s=new Dn(function(e,t,n){return 3*(t+n)/4-n}(0,i,a)),o=0,l=a>0?i-4:i;for(n=0;n<l;n+=4)t=Pn[e.charCodeAt(n)]<<18|Pn[e.charCodeAt(n+1)]<<12|Pn[e.charCodeAt(n+2)]<<6|Pn[e.charCodeAt(n+3)],s[o++]=t>>16&255,s[o++]=t>>8&255,s[o++]=255&t;2===a&&(t=Pn[e.charCodeAt(n)]<<2|Pn[e.charCodeAt(n+1)]>>4,s[o++]=255&t);1===a&&(t=Pn[e.charCodeAt(n)]<<10|Pn[e.charCodeAt(n+1)]<<4|Pn[e.charCodeAt(n+2)]>>2,s[o++]=t>>8&255,s[o++]=255&t);return s},Nn=function(e){for(var t,n=e.length,r=n%3,i=[],a=16383,s=0,o=n-r;s<o;s+=a)i.push(Un(e,s,s+a>o?o:s+a));1===r?(t=e[n-1],i.push(On[t>>2]+On[t<<4&63]+"==")):2===r&&(t=(e[n-2]<<8)+e[n-1],i.push(On[t>>10]+On[t>>4&63]+On[t<<2&63]+"="));return i.join("")}
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */;for(var Rn,Ln,On=[],Pn=[],Dn="undefined"!=typeof Uint8Array?Uint8Array:Array,Fn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",$n=0,Bn=Fn.length;$n<Bn;++$n)On[$n]=Fn[$n],Pn[Fn.charCodeAt($n)]=$n;function zn(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function Un(e,t,n){for(var r,i,a=[],s=t;s<n;s+=3)r=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),a.push(On[(i=r)>>18&63]+On[i>>12&63]+On[i>>6&63]+On[63&i]);return a.join("")}Pn["-".charCodeAt(0)]=62,Pn["_".charCodeAt(0)]=63,Rn=function(e,t,n,r,i){var a,s,o=8*i-r-1,l=(1<<o)-1,u=l>>1,c=-7,h=n?i-1:0,p=n?-1:1,d=e[t+h];for(h+=p,a=d&(1<<-c)-1,d>>=-c,c+=o;c>0;a=256*a+e[t+h],h+=p,c-=8);for(s=a&(1<<-c)-1,a>>=-c,c+=r;c>0;s=256*s+e[t+h],h+=p,c-=8);if(0===a)a=1-u;else{if(a===l)return s?NaN:1/0*(d?-1:1);s+=Math.pow(2,r),a-=u}return(d?-1:1)*s*Math.pow(2,a-r)},Ln=function(e,t,n,r,i,a){var s,o,l,u=8*a-i-1,c=(1<<u)-1,h=c>>1,p=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:a-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,s=c):(s=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-s))<1&&(s--,l*=2),(t+=s+h>=1?p/l:p*Math.pow(2,1-h))*l>=2&&(s++,l/=2),s+h>=c?(o=0,s=c):s+h>=1?(o=(t*l-1)*Math.pow(2,i),s+=h):(o=t*Math.pow(2,h-1)*Math.pow(2,i),s=0));i>=8;e[n+d]=255&o,d+=f,o/=256,i-=8);for(s=s<<i|o,u+=i;u>0;e[n+d]=255&s,d+=f,s/=256,u-=8);e[n+d-f]|=128*m};const Vn="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;kn=Hn;function Wn(e){if(e>2147483647)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,Hn.prototype),t}function Hn(e,t,n){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return qn(e)}return Gn(e,t,n)}function Gn(e,t,n){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!Hn.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const n=0|Zn(e,t);let r=Wn(n);const i=r.write(e,t);i!==n&&(r=r.slice(0,i));return r}(e,t);if(ArrayBuffer.isView(e))return function(e){if(Ar(e,Uint8Array)){const t=new Uint8Array(e);return Kn(t.buffer,t.byteOffset,t.byteLength)}return Xn(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(Ar(e,ArrayBuffer)||e&&Ar(e.buffer,ArrayBuffer))return Kn(e,t,n);if("undefined"!=typeof SharedArrayBuffer&&(Ar(e,SharedArrayBuffer)||e&&Ar(e.buffer,SharedArrayBuffer)))return Kn(e,t,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return Hn.from(r,t,n);const i=function(e){if(Hn.isBuffer(e)){const t=0|Yn(e.length),n=Wn(t);return 0===n.length||e.copy(n,0,0,t),n}if(void 0!==e.length)return"number"!=typeof e.length||Nr(e.length)?Wn(0):Xn(e);if("Buffer"===e.type&&Array.isArray(e.data))return Xn(e.data)}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return Hn.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function jn(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function qn(e){return jn(e),Wn(e<0?0:0|Yn(e))}function Xn(e){const t=e.length<0?0:0|Yn(e.length),n=Wn(t);for(let r=0;r<t;r+=1)n[r]=255&e[r];return n}function Kn(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');let r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(r,Hn.prototype),r}function Yn(e){if(e>=2147483647)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+2147483647..toString(16)+" bytes");return 0|e}function Zn(e,t){if(Hn.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||Ar(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const n=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;let i=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return Cr(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return Ir(e).length;default:if(i)return r?-1:Cr(e).length;t=(""+t).toLowerCase(),i=!0}}function Jn(e,t,n){let r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return hr(this,t,n);case"utf8":case"utf-8":return lr(this,t,n);case"ascii":return ur(this,t,n);case"latin1":case"binary":return cr(this,t,n);case"base64":return or(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return pr(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function Qn(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function er(e,t,n,r,i){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),Nr(n=+n)&&(n=i?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(i)return-1;n=e.length-1}else if(n<0){if(!i)return-1;n=0}if("string"==typeof t&&(t=Hn.from(t,r)),Hn.isBuffer(t))return 0===t.length?-1:tr(e,t,n,r,i);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):tr(e,[t],n,r,i);throw new TypeError("val must be string, number or Buffer")}function tr(e,t,n,r,i){let a,s=1,o=e.length,l=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;s=2,o/=2,l/=2,n/=2}function u(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(i){let r=-1;for(a=n;a<o;a++)if(u(e,a)===u(t,-1===r?0:a-r)){if(-1===r&&(r=a),a-r+1===l)return r*s}else-1!==r&&(a-=a-r),r=-1}else for(n+l>o&&(n=o-l),a=n;a>=0;a--){let n=!0;for(let r=0;r<l;r++)if(u(e,a+r)!==u(t,r)){n=!1;break}if(n)return a}return-1}function nr(e,t,n,r){n=Number(n)||0;const i=e.length-n;r?(r=Number(r))>i&&(r=i):r=i;const a=t.length;let s;for(r>a/2&&(r=a/2),s=0;s<r;++s){const r=parseInt(t.substr(2*s,2),16);if(Nr(r))return s;e[n+s]=r}return s}function rr(e,t,n,r){return kr(Cr(t,e.length-n),e,n,r)}function ir(e,t,n,r){return kr(function(e){const t=[];for(let n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function ar(e,t,n,r){return kr(Ir(t),e,n,r)}function sr(e,t,n,r){return kr(function(e,t){let n,r,i;const a=[];for(let s=0;s<e.length&&!((t-=2)<0);++s)n=e.charCodeAt(s),r=n>>8,i=n%256,a.push(i),a.push(r);return a}(t,e.length-n),e,n,r)}function or(e,t,n){return 0===t&&n===e.length?Nn(e):Nn(e.slice(t,n))}function lr(e,t,n){n=Math.min(e.length,n);const r=[];let i=t;for(;i<n;){const t=e[i];let a=null,s=t>239?4:t>223?3:t>191?2:1;if(i+s<=n){let n,r,o,l;switch(s){case 1:t<128&&(a=t);break;case 2:n=e[i+1],128==(192&n)&&(l=(31&t)<<6|63&n,l>127&&(a=l));break;case 3:n=e[i+1],r=e[i+2],128==(192&n)&&128==(192&r)&&(l=(15&t)<<12|(63&n)<<6|63&r,l>2047&&(l<55296||l>57343)&&(a=l));break;case 4:n=e[i+1],r=e[i+2],o=e[i+3],128==(192&n)&&128==(192&r)&&128==(192&o)&&(l=(15&t)<<18|(63&n)<<12|(63&r)<<6|63&o,l>65535&&l<1114112&&(a=l))}}null===a?(a=65533,s=1):a>65535&&(a-=65536,r.push(a>>>10&1023|55296),a=56320|1023&a),r.push(a),i+=s}return function(e){const t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);let n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=4096));return n}(r)}Hn.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),Hn.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(Hn.prototype,"parent",{enumerable:!0,get:function(){if(Hn.isBuffer(this))return this.buffer}}),Object.defineProperty(Hn.prototype,"offset",{enumerable:!0,get:function(){if(Hn.isBuffer(this))return this.byteOffset}}),Hn.poolSize=8192,Hn.from=function(e,t,n){return Gn(e,t,n)},Object.setPrototypeOf(Hn.prototype,Uint8Array.prototype),Object.setPrototypeOf(Hn,Uint8Array),Hn.alloc=function(e,t,n){return function(e,t,n){return jn(e),e<=0?Wn(e):void 0!==t?"string"==typeof n?Wn(e).fill(t,n):Wn(e).fill(t):Wn(e)}(e,t,n)},Hn.allocUnsafe=function(e){return qn(e)},Hn.allocUnsafeSlow=function(e){return qn(e)},Hn.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==Hn.prototype},Hn.compare=function(e,t){if(Ar(e,Uint8Array)&&(e=Hn.from(e,e.offset,e.byteLength)),Ar(t,Uint8Array)&&(t=Hn.from(t,t.offset,t.byteLength)),!Hn.isBuffer(e)||!Hn.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,r=t.length;for(let i=0,a=Math.min(n,r);i<a;++i)if(e[i]!==t[i]){n=e[i],r=t[i];break}return n<r?-1:r<n?1:0},Hn.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Hn.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return Hn.alloc(0);let n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;const r=Hn.allocUnsafe(t);let i=0;for(n=0;n<e.length;++n){let t=e[n];if(Ar(t,Uint8Array))i+t.length>r.length?(Hn.isBuffer(t)||(t=Hn.from(t)),t.copy(r,i)):Uint8Array.prototype.set.call(r,t,i);else{if(!Hn.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(r,i)}i+=t.length}return r},Hn.byteLength=Zn,Hn.prototype._isBuffer=!0,Hn.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)Qn(this,t,t+1);return this},Hn.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)Qn(this,t,t+3),Qn(this,t+1,t+2);return this},Hn.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)Qn(this,t,t+7),Qn(this,t+1,t+6),Qn(this,t+2,t+5),Qn(this,t+3,t+4);return this},Hn.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?lr(this,0,e):Jn.apply(this,arguments)},Hn.prototype.toLocaleString=Hn.prototype.toString,Hn.prototype.equals=function(e){if(!Hn.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===Hn.compare(this,e)},Hn.prototype.inspect=function(){let e="";return e=this.toString("hex",0,50).replace(/(.{2})/g,"$1 ").trim(),this.length>50&&(e+=" ... "),"<Buffer "+e+">"},Vn&&(Hn.prototype[Vn]=Hn.prototype.inspect),Hn.prototype.compare=function(e,t,n,r,i){if(Ar(e,Uint8Array)&&(e=Hn.from(e,e.offset,e.byteLength)),!Hn.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===i&&(i=this.length),t<0||n>e.length||r<0||i>this.length)throw new RangeError("out of range index");if(r>=i&&t>=n)return 0;if(r>=i)return-1;if(t>=n)return 1;if(this===e)return 0;let a=(i>>>=0)-(r>>>=0),s=(n>>>=0)-(t>>>=0);const o=Math.min(a,s),l=this.slice(r,i),u=e.slice(t,n);for(let e=0;e<o;++e)if(l[e]!==u[e]){a=l[e],s=u[e];break}return a<s?-1:s<a?1:0},Hn.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},Hn.prototype.indexOf=function(e,t,n){return er(this,e,t,n,!0)},Hn.prototype.lastIndexOf=function(e,t,n){return er(this,e,t,n,!1)},Hn.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}const i=this.length-t;if((void 0===n||n>i)&&(n=i),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");let a=!1;for(;;)switch(r){case"hex":return nr(this,e,t,n);case"utf8":case"utf-8":return rr(this,e,t,n);case"ascii":case"latin1":case"binary":return ir(this,e,t,n);case"base64":return ar(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return sr(this,e,t,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},Hn.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function ur(e,t,n){let r="";n=Math.min(e.length,n);for(let i=t;i<n;++i)r+=String.fromCharCode(127&e[i]);return r}function cr(e,t,n){let r="";n=Math.min(e.length,n);for(let i=t;i<n;++i)r+=String.fromCharCode(e[i]);return r}function hr(e,t,n){const r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);let i="";for(let r=t;r<n;++r)i+=Rr[e[r]];return i}function pr(e,t,n){const r=e.slice(t,n);let i="";for(let e=0;e<r.length-1;e+=2)i+=String.fromCharCode(r[e]+256*r[e+1]);return i}function dr(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function fr(e,t,n,r,i,a){if(!Hn.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<a)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function mr(e,t,n,r,i){Sr(t,r,i,e,n,7);let a=Number(t&BigInt(4294967295));e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[n++]=s,s>>=8,e[n++]=s,s>>=8,e[n++]=s,s>>=8,e[n++]=s,n}function gr(e,t,n,r,i){Sr(t,r,i,e,n,7);let a=Number(t&BigInt(4294967295));e[n+7]=a,a>>=8,e[n+6]=a,a>>=8,e[n+5]=a,a>>=8,e[n+4]=a;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[n+3]=s,s>>=8,e[n+2]=s,s>>=8,e[n+1]=s,s>>=8,e[n]=s,n+8}function yr(e,t,n,r,i,a){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function xr(e,t,n,r,i){return t=+t,n>>>=0,i||yr(e,0,n,4),Ln(e,t,n,r,23,4),n+4}function vr(e,t,n,r,i){return t=+t,n>>>=0,i||yr(e,0,n,8),Ln(e,t,n,r,52,8),n+8}Hn.prototype.slice=function(e,t){const n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);const r=this.subarray(e,t);return Object.setPrototypeOf(r,Hn.prototype),r},Hn.prototype.readUintLE=Hn.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||dr(e,t,this.length);let r=this[e],i=1,a=0;for(;++a<t&&(i*=256);)r+=this[e+a]*i;return r},Hn.prototype.readUintBE=Hn.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||dr(e,t,this.length);let r=this[e+--t],i=1;for(;t>0&&(i*=256);)r+=this[e+--t]*i;return r},Hn.prototype.readUint8=Hn.prototype.readUInt8=function(e,t){return e>>>=0,t||dr(e,1,this.length),this[e]},Hn.prototype.readUint16LE=Hn.prototype.readUInt16LE=function(e,t){return e>>>=0,t||dr(e,2,this.length),this[e]|this[e+1]<<8},Hn.prototype.readUint16BE=Hn.prototype.readUInt16BE=function(e,t){return e>>>=0,t||dr(e,2,this.length),this[e]<<8|this[e+1]},Hn.prototype.readUint32LE=Hn.prototype.readUInt32LE=function(e,t){return e>>>=0,t||dr(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},Hn.prototype.readUint32BE=Hn.prototype.readUInt32BE=function(e,t){return e>>>=0,t||dr(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},Hn.prototype.readBigUInt64LE=Lr((function(e){Tr(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||Er(e,this.length-8);const r=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,i=this[++e]+256*this[++e]+65536*this[++e]+n*2**24;return BigInt(r)+(BigInt(i)<<BigInt(32))})),Hn.prototype.readBigUInt64BE=Lr((function(e){Tr(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||Er(e,this.length-8);const r=t*2**24+65536*this[++e]+256*this[++e]+this[++e],i=this[++e]*2**24+65536*this[++e]+256*this[++e]+n;return(BigInt(r)<<BigInt(32))+BigInt(i)})),Hn.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||dr(e,t,this.length);let r=this[e],i=1,a=0;for(;++a<t&&(i*=256);)r+=this[e+a]*i;return i*=128,r>=i&&(r-=Math.pow(2,8*t)),r},Hn.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||dr(e,t,this.length);let r=t,i=1,a=this[e+--r];for(;r>0&&(i*=256);)a+=this[e+--r]*i;return i*=128,a>=i&&(a-=Math.pow(2,8*t)),a},Hn.prototype.readInt8=function(e,t){return e>>>=0,t||dr(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},Hn.prototype.readInt16LE=function(e,t){e>>>=0,t||dr(e,2,this.length);const n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},Hn.prototype.readInt16BE=function(e,t){e>>>=0,t||dr(e,2,this.length);const n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},Hn.prototype.readInt32LE=function(e,t){return e>>>=0,t||dr(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},Hn.prototype.readInt32BE=function(e,t){return e>>>=0,t||dr(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},Hn.prototype.readBigInt64LE=Lr((function(e){Tr(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||Er(e,this.length-8);const r=this[e+4]+256*this[e+5]+65536*this[e+6]+(n<<24);return(BigInt(r)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),Hn.prototype.readBigInt64BE=Lr((function(e){Tr(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||Er(e,this.length-8);const r=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(r)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+n)})),Hn.prototype.readFloatLE=function(e,t){return e>>>=0,t||dr(e,4,this.length),Rn(this,e,!0,23,4)},Hn.prototype.readFloatBE=function(e,t){return e>>>=0,t||dr(e,4,this.length),Rn(this,e,!1,23,4)},Hn.prototype.readDoubleLE=function(e,t){return e>>>=0,t||dr(e,8,this.length),Rn(this,e,!0,52,8)},Hn.prototype.readDoubleBE=function(e,t){return e>>>=0,t||dr(e,8,this.length),Rn(this,e,!1,52,8)},Hn.prototype.writeUintLE=Hn.prototype.writeUIntLE=function(e,t,n,r){if(e=+e,t>>>=0,n>>>=0,!r){fr(this,e,t,n,Math.pow(2,8*n)-1,0)}let i=1,a=0;for(this[t]=255&e;++a<n&&(i*=256);)this[t+a]=e/i&255;return t+n},Hn.prototype.writeUintBE=Hn.prototype.writeUIntBE=function(e,t,n,r){if(e=+e,t>>>=0,n>>>=0,!r){fr(this,e,t,n,Math.pow(2,8*n)-1,0)}let i=n-1,a=1;for(this[t+i]=255&e;--i>=0&&(a*=256);)this[t+i]=e/a&255;return t+n},Hn.prototype.writeUint8=Hn.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||fr(this,e,t,1,255,0),this[t]=255&e,t+1},Hn.prototype.writeUint16LE=Hn.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||fr(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},Hn.prototype.writeUint16BE=Hn.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||fr(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},Hn.prototype.writeUint32LE=Hn.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||fr(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},Hn.prototype.writeUint32BE=Hn.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||fr(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},Hn.prototype.writeBigUInt64LE=Lr((function(e,t=0){return mr(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),Hn.prototype.writeBigUInt64BE=Lr((function(e,t=0){return gr(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),Hn.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);fr(this,e,t,n,r-1,-r)}let i=0,a=1,s=0;for(this[t]=255&e;++i<n&&(a*=256);)e<0&&0===s&&0!==this[t+i-1]&&(s=1),this[t+i]=(e/a>>0)-s&255;return t+n},Hn.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);fr(this,e,t,n,r-1,-r)}let i=n-1,a=1,s=0;for(this[t+i]=255&e;--i>=0&&(a*=256);)e<0&&0===s&&0!==this[t+i+1]&&(s=1),this[t+i]=(e/a>>0)-s&255;return t+n},Hn.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||fr(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},Hn.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||fr(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},Hn.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||fr(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},Hn.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||fr(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},Hn.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||fr(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},Hn.prototype.writeBigInt64LE=Lr((function(e,t=0){return mr(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),Hn.prototype.writeBigInt64BE=Lr((function(e,t=0){return gr(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),Hn.prototype.writeFloatLE=function(e,t,n){return xr(this,e,t,!0,n)},Hn.prototype.writeFloatBE=function(e,t,n){return xr(this,e,t,!1,n)},Hn.prototype.writeDoubleLE=function(e,t,n){return vr(this,e,t,!0,n)},Hn.prototype.writeDoubleBE=function(e,t,n){return vr(this,e,t,!1,n)},Hn.prototype.copy=function(e,t,n,r){if(!Hn.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);const i=r-n;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,n,r):Uint8Array.prototype.set.call(e,this.subarray(n,r),t),i},Hn.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!Hn.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){const t=e.charCodeAt(0);("utf8"===r&&t<128||"latin1"===r)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;let i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else{const a=Hn.isBuffer(e)?e:Hn.from(e,r),s=a.length;if(0===s)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(i=0;i<n-t;++i)this[i+t]=a[i%s]}return this};const br={};function wr(e,t,n){br[e]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function _r(e){let t="",n=e.length;const r="-"===e[0]?1:0;for(;n>=r+4;n-=3)t=`_${e.slice(n-3,n)}${t}`;return`${e.slice(0,n)}${t}`}function Sr(e,t,n,r,i,a){if(e>n||e<t){const r="bigint"==typeof t?"n":"";let i;throw i=a>3?0===t||t===BigInt(0)?`>= 0${r} and < 2${r} ** ${8*(a+1)}${r}`:`>= -(2${r} ** ${8*(a+1)-1}${r}) and < 2 ** ${8*(a+1)-1}${r}`:`>= ${t}${r} and <= ${n}${r}`,new br.ERR_OUT_OF_RANGE("value",i,e)}!function(e,t,n){Tr(t,"offset"),void 0!==e[t]&&void 0!==e[t+n]||Er(t,e.length-(n+1))}(r,i,a)}function Tr(e,t){if("number"!=typeof e)throw new br.ERR_INVALID_ARG_TYPE(t,"number",e)}function Er(e,t,n){if(Math.floor(e)!==e)throw Tr(e,n),new br.ERR_OUT_OF_RANGE(n||"offset","an integer",e);if(t<0)throw new br.ERR_BUFFER_OUT_OF_BOUNDS;throw new br.ERR_OUT_OF_RANGE(n||"offset",`>= ${n?1:0} and <= ${t}`,e)}wr("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),wr("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),wr("ERR_OUT_OF_RANGE",(function(e,t,n){let r=`The value of "${e}" is out of range.`,i=n;return Number.isInteger(n)&&Math.abs(n)>2**32?i=_r(String(n)):"bigint"==typeof n&&(i=String(n),(n>BigInt(2)**BigInt(32)||n<-(BigInt(2)**BigInt(32)))&&(i=_r(i)),i+="n"),r+=` It must be ${t}. Received ${i}`,r}),RangeError);const Mr=/[^+/0-9A-Za-z-_]/g;function Cr(e,t){let n;t=t||1/0;const r=e.length;let i=null;const a=[];for(let s=0;s<r;++s){if(n=e.charCodeAt(s),n>55295&&n<57344){if(!i){if(n>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(s+1===r){(t-=3)>-1&&a.push(239,191,189);continue}i=n;continue}if(n<56320){(t-=3)>-1&&a.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(t-=3)>-1&&a.push(239,191,189);if(i=null,n<128){if((t-=1)<0)break;a.push(n)}else if(n<2048){if((t-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function Ir(e){return An(function(e){if((e=(e=e.split("=")[0]).trim().replace(Mr,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function kr(e,t,n,r){let i;for(i=0;i<r&&!(i+n>=t.length||i>=e.length);++i)t[i+n]=e[i];return i}function Ar(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Nr(e){return e!=e}const Rr=function(){const e="0123456789abcdef",t=new Array(256);for(let n=0;n<16;++n){const r=16*n;for(let i=0;i<16;++i)t[r+i]=e[n]+e[i]}return t}();function Lr(e){return"undefined"==typeof BigInt?Or:e}function Or(){throw new Error("BigInt not supported")}var Pr=kn;async function Dr(e,t){const n=[],r=[],i=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<i.length;++a){const s=i[a],o=Array.isArray(e)?e[a].tensor:e[s];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${o.dtype}`);const l={name:s,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let i=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,i),i+=4,r.set(n,i),i+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:$r(await Promise.all(r)),specs:n}}function Fr(e,t){const n={};let r,i=0;for(const a of t){const t=a.name,s=a.dtype,o=a.shape,l=_(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==s)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${s}.`)}const o=In[n.dtype],c=e.slice(i,i+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===s)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Xr()),u=r(h)}else{if("int32"!==s)throw new Error(`Unsupported dtype in weight '${t}': ${s}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}i+=l*o}else if("string"===s){const t=_(a.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(i,i+4))[0];i+=4;const n=new Uint8Array(e.slice(i,i+t));u.push(n),i+=t}}else{const r=In[s],a=e.slice(i,i+l*r);if("float32"===s)u=new Float32Array(a);else if("int32"===s)u=new Int32Array(a);else if("bool"===s)u=new Uint8Array(a);else{if("complex64"!==s)throw new Error(`Unsupported dtype in weight '${t}': ${s}`);{u=new Float32Array(a);const e=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],r[t]=u[2*t+1];const i=Cn(e,o,"float32"),s=Cn(r,o,"float32");n[t]=En(i,s),i.dispose(),s.dispose()}}i+=l*r}"complex64"!==s&&(n[t]=Cn(u,o,s))}return n}function $r(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let i=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),i),i+=e.byteLength})),r.buffer}const Br=void 0!==Pr&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function zr(e){return Br?Pr.byteLength(e):new Blob([e]).size}function Ur(e){if(Br)return Pr.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}function Vr(e){if(Br){const t=Pr.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}function Wr(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Hr(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Gr(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function jr(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,i]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=i}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function qr(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:zr(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:zr(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Xr(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const i=new ArrayBuffer(4*r.length),a=new Uint32Array(i);for(let i=0;i<r.length;i++){const s=r[i],o=e[n[s>>10]+(1023&s)]+t[s>>10];a[i]=o}return new Float32Array(i)}}class Kr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Kr.instance&&(Kr.instance=new Kr),Kr.instance}static registerSaveRouter(e){Kr.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Kr.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Kr.getHandlers(e,"save")}static getLoadHandlers(e,t){return Kr.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Kr.getInstance().loadRouters:Kr.getInstance().saveRouters).forEach((t=>{const i=t(e,n);null!==i&&r.push(i)})),r}}const Yr=e=>Kr.registerSaveRouter(e),Zr=e=>Kr.registerLoadRouter(e),Jr=e=>Kr.getSaveHandlers(e),Qr=(e,t)=>Kr.getLoadHandlers(e,t);function ei(){if(!se().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ti(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class ni{constructor(e){if(this.indexedDB=ei(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>ti(r),r.onsuccess=()=>{const i=r.result;if(null==t){const t=i.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return i.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(i.close(),n(r.error)),t.oncomplete=()=>i.close()}else{const r=qr(t),a=i.transaction("model_info_store","readwrite");let s=a.objectStore("model_info_store");const o=s.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=i.transaction("models_store","readwrite");const o=l.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{s=a.objectStore("model_info_store");const t=s.delete(this.modelPath);t.onsuccess=()=>(i.close(),n(o.error)),t.onerror=e=>(i.close(),n(o.error))}},o.onerror=e=>(i.close(),n(o.error)),a.oncomplete=()=>{null==l?i.close():l.oncomplete=()=>i.close()}}},r.onerror=e=>n(r.error)}))}}ni.URL_SCHEME="indexeddb://";const ri=e=>{return se().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ni.URL_SCHEME)?(t=e.slice(ni.URL_SCHEME.length),new ni(t)):null;var t};Kr.registerSaveRouter(ri),Kr.registerLoadRouter(ri);class ii{constructor(){this.indexedDB=ei()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>ti(n),n.onsuccess=()=>{const r=n.result,i=r.transaction("model_info_store","readonly"),a=i.objectStore("model_info_store").getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),i.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ni.URL_SCHEME)?t.slice(ni.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>ti(r),r.onsuccess=()=>{const i=r.result,a=i.transaction("model_info_store","readwrite"),s=a.objectStore("model_info_store"),o=s.get(e);let l;o.onsuccess=()=>{if(null==o.result)return i.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=s.delete(e),a=()=>{l=i.transaction("models_store","readwrite");const r=l.objectStore("models_store").delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),i.close(),n(o.error))}},o.onerror=e=>(i.close(),n(o.error)),a.oncomplete=()=>{null==l?i.close():l.oncomplete=()=>i.close()}},r.onerror=e=>n(r.error)}))}}const ai="tensorflowjs_models",si="info",oi="model_topology",li="weight_specs",ui="weight_data",ci="model_metadata";function hi(e){return{info:[ai,e,si].join("/"),topology:[ai,e,oi].join("/"),weightSpecs:[ai,e,li].join("/"),weightData:[ai,e,ui].join("/"),modelMetadata:[ai,e,ci].join("/")}}function pi(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function di(e){const t=e.split("/");if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join("/")}class fi{constructor(e){if(!se().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=hi(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=qr(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Ur(e.weightData));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch(e){throw pi(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const i=this.LS.getItem(this.keys.modelMetadata);if(null!=i){const e=JSON.parse(i);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Vr(a),t}}fi.URL_SCHEME="localstorage://";const mi=e=>{return se().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(fi.URL_SCHEME)?(t=e.slice(fi.URL_SCHEME.length),new fi(t)):null;var t};Kr.registerSaveRouter(mi),Kr.registerLoadRouter(mi);class gi{constructor(){x(se().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),x("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ai+"/",n="/"+si;for(let r=0;r<this.LS.length;++r){const i=this.LS.key(r);if(i.startsWith(t)&&i.endsWith(n)){e[di(i)]=JSON.parse(this.LS.getItem(i))}}return e}async removeModel(e){var t;const n=hi(e=(t=e).startsWith(fi.URL_SCHEME)?t.slice(fi.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return pi(n),r}}class yi{constructor(){this.managers={}}static getInstance(){return null==yi.instance&&(yi.instance=new yi),yi.instance}static registerManager(e,t){x(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),x(e.length>0,(()=>"scheme must not be an empty string."));const n=yi.getInstance();x(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=yi.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(yi.getInstance().managers)}}function xi(e){if(-1===e.indexOf("://"))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${yi.getSchemes().join(",")}`);return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function vi(e,t,n=!1){x(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Kr.getLoadHandlers(e);x(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),x(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const i=r[0],a=Kr.getSaveHandlers(t);x(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),x(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const s=a[0],o=xi(e).scheme,l=xi(e).path,u=o===xi(e).scheme,c=await i.load();n&&u&&await yi.getManager(o).removeModel(l);const h=await s.save(c);return n&&!u&&await yi.getManager(o).removeModel(l),h.modelArtifactsInfo}async function bi(){const e=yi.getSchemes(),t={};for(const n of e){const e=await yi.getManager(n).listModels();for(const r in e){t[n+"://"+r]=e[r]}}return t}async function wi(e){const t=xi(e);return yi.getManager(t.scheme).removeModel(t.path)}async function _i(e,t){return vi(e,t,!1)}async function Si(e,t){return vi(e,t,!0)}class Ti{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(se().get("IS_BROWSER")){se().setPlatform("browser",new Ti);try{yi.registerManager(fi.URL_SCHEME,new gi)}catch(e){}try{yi.registerManager(ni.URL_SCHEME,new ii)}catch(e){}}const Ei=()=>a("kjyEk");let Mi;function Ci(e,t="float32",n){return t=t||"float32",ee(e),new $t(e,t,n)}se().get("IS_NODE")&&!se().get("IS_BROWSER")&&se().setPlatform("node",new class{constructor(){this.util=a("kjyEk"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=se().global.fetch?se().global.fetch(e,t):(null==Mi&&(Mi=Ei()),Mi(e,t))}now(){const e=ce.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Ii=Tn({cast_:function(e,t){const n=_n(e,"x","cast");if(!F(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},i={dtype:t};return hn.runKernel("Cast",r,i)}});const ki=Tn({clone_:function(e){const t={x:_n(e,"x","clone","string_or_numeric")};return hn.runKernel("Identity",t)}});function Ai(e,t=!1){console.log(e.toString(t))}cn();zt={buffer:Ci,cast:Ii,clone:ki,print:Ai};var Ni={};t(Ni,"copyModel",(()=>_i)),t(Ni,"listModels",(()=>bi)),t(Ni,"moveModel",(()=>Si)),t(Ni,"removeModel",(()=>wi)),t(Ni,"browserFiles",(()=>Pi)),t(Ni,"browserHTTPRequest",(()=>Hi)),t(Ni,"concatenateArrayBuffers",(()=>Wr)),t(Ni,"decodeWeights",(()=>Fr)),t(Ni,"encodeWeights",(()=>Dr)),t(Ni,"fromMemory",(()=>Xi)),t(Ni,"fromMemorySync",(()=>Ki)),t(Ni,"getLoadHandlers",(()=>Qr)),t(Ni,"getModelArtifactsForJSON",(()=>jr)),t(Ni,"getModelArtifactsInfoForJSON",(()=>qr)),t(Ni,"getSaveHandlers",(()=>Jr)),t(Ni,"http",(()=>Wi)),t(Ni,"isHTTPScheme",(()=>Ui)),t(Ni,"loadWeights",(()=>$i)),t(Ni,"registerLoadRouter",(()=>Zr)),t(Ni,"registerSaveRouter",(()=>Yr)),t(Ni,"weightsLoaderFactory",(()=>Bi)),t(Ni,"withSaveHandler",(()=>Yi)),t(Ni,"withSaveHandlerSync",(()=>Zi));function Ri(e){return new Promise((e=>setTimeout(e))).then(e)}class Li{constructor(e){if(!se().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Li.URL_SCHEME)&&(e=e.slice(Li.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Gr(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),i=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=r,await Ri((()=>i.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ri((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:qr(e)}}}}Li.URL_SCHEME="downloads://";class Oi{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),i=r.modelTopology;if(null==i)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:i});const a=jr(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),i=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(i).then((e=>[t,Wr(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const i=new FileReader;i.onload=e=>{const t=e.target.result;n(t)},i.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),i.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Hr(e.name))),r={};for(const i of e)i.paths.forEach((e=>{const i=Hr(e);if(-1!==t.indexOf(i))throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),-1===n.indexOf(i))throw new Error(`Weight file with basename '${i}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(i)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Pi(e){return new Oi(e)}function Di(e,t,n,r){!function(e){x(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){x(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),x(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),x(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let i=0;return Promise.all(e.map((a=>(a.then((a=>{const s=n+ ++i/e.length*(r-n);return t(s),a})),a))))}async function Fi(e,t){null==t&&(t={});const n=null==t.fetchFunc?se().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),i=(null==t.onProgress?await Promise.all(r):await Di(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(i):await Di(i,t.onProgress,.5,1)}async function $i(e,t="",n,r){return Bi((e=>Fi(e,{requestInit:r})))(e,t,n)}function Bi(e){return async(t,n="",r)=>{const i=t.map((()=>!1)),a={},s=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=In[l]*_(e.shape),c=()=>{i[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),s[n]=!0)})):c(),o.push(e.name),n+=u}))})),!s.every((e=>e))){const e=r.filter(((e,t)=>!s[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=i.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let p=0;return l.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[p+e].byteLength;const i=new ArrayBuffer(r),s=new Uint8Array(i);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);s.set(t,o),o+=t.byteLength}a[e].forEach((e=>{const t=Fr(i.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}Kr.registerSaveRouter((e=>se().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Li.URL_SCHEME)?function(e="model"){return new Li(e)}(e.slice(Li.URL_SCHEME.length)):null));class zi{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(x("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=se().platform.fetch,x(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&x(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Gr(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:qr(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return jr(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),i=n>t?e.substring(n):"";return[r+"/",i]}(t),i=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const s=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(i+e+r);this.weightUrlConverter&&s.push(...await Promise.all(o));return[a,Wr(await Fi(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ui(e){return null!=e.match(zi.URL_SCHEME_REGEX)}zi.URL_SCHEME_REGEX=/^https?:\/\//;const Vi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ui(e))):Ui(e),n)return Wi(e,t)}return null};function Wi(e,t){return new zi(e,t)}function Hi(e,t){return Wi(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Kr.registerSaveRouter(Vi),Kr.registerLoadRouter(Vi);class Gi{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class ji{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class qi{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Xi(e,t,n,r){const i=arguments;return new qi(Ki(...i))}function Ki(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new Gi(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Gi({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Gi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function Yi(e){return new ji(e)}function Zi(e){return new ji(e)}var Ji={};function Qi(e,t){const n=e.length,r=[];for(let i=0;i<n;i++){const a=n-1-i,s=e[a]||1;(t[t.length-1-i]||1)>1&&1===s&&r.unshift(a)}return r}function ea(e,t){const n=[];for(let r=0;r<t.length;r++){const i=e[e.length-r-1],a=t.length-r-1,s=t[a];(null==i||1===i&&s>1)&&n.unshift(a)}return n}function ta(e,t){const n=[],r=Math.max(e.length,t.length);for(let i=0;i<r;i++){let r=e[e.length-i-1];null==r&&(r=1);let a=t[t.length-i-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}t(Ji,"getBroadcastDims",(()=>Qi)),t(Ji,"getReductionAxes",(()=>ea)),t(Ji,"assertAndGetBroadcastShape",(()=>ta));var na={};function ra(e,t,n){if(b(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=vn(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Mn(e,t,r,n)}let ia;function aa(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,i=!1,a=!1,s=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)i=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)s=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=Ne("FromPixels",hn.backendName)){const n={pixels:e},r={numChannels:t};return hn.runKernel("FromPixels",n,r)}const[l,u]=i?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(s)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(a||i||o){if(null==ia)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");ia=new OffscreenCanvas(1,1).getContext("2d")}else ia=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ia.canvas.width=l,ia.canvas.height=u,ia.drawImage(e,0,0,l,u),c=ia.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return ra(h,[u,l,t],"int32")}function sa(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function oa(e,t=3){let n=null;if(se().getBool("WRAP_TO_IMAGEBITMAP")&&sa(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return aa(n,t)}async function la(e,t){let n=_n(e,"img","toPixels");if(!(e instanceof Vt)){const e=n;n=Ii(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,i]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const s=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(i*r*4);for(let e=0;e<r*i;++e){const t=[0,0,0,255];for(let r=0;r<a;r++){const i=s[e*a+r];if("float32"===n.dtype){if(i<0||i>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${i}.`)}else if("int32"===n.dtype&&(i<0||i>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${i}.`);1===a?(t[0]=i*o,t[1]=i*o,t[2]=i*o):t[r]=i*o}const r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){t.width=i,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,i,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}t(na,"fromPixelsAsync",(()=>oa)),t(na,"toPixels",(()=>la)),t(na,"fromPixels",(()=>ua));const ua=Tn({fromPixels_:aa});var ca={};function ha(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===_(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const i=t.shape,a=i[i.length-1];let s=1;for(let e=0;e<i.length-1;++e)s*=i[e];const o=e.shape,l=i.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...X(e.shape).map((e=>e/u)),1].slice(0,a);return[l,s,u,c]}t(ca,"prepareAndValidate",(()=>ha));var pa={};function da(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,i=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${i}.`;if(n.rank<i)throw new Error(a+` update.rank < ${i}. `);if(e.length<r+(n.rank-i))throw new Error(a+` Output shape length < ${r+(n.rank-i)}`);if(n.rank!==i+e.length-r)throw new Error(a+" update.rank != "+(i+e.length-r));for(let e=0;e<i;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-i;++t)if(n.shape[t+i]!==e[t+r])throw new Error(a+` updates.shape[${t+i}] (${n.shape[t+i]}) != shape[${t+i}] (${e[t+i]})`)}function fa(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}da(n,t,e)}function ma(e,t,n){const r=t.shape.length,i=r>1?t.shape[r-1]:1,a=n.length;let s=1;for(let e=i;e<a;++e)s*=n[e];const o=i<1?1:i;return{sliceRank:i,numUpdates:_(t.shape)/o,sliceSize:s,strides:[...X(n.slice(0,i)),1],outputSize:_(n)}}t(pa,"validateUpdateShape",(()=>da)),t(pa,"validateInput",(()=>fa)),t(pa,"calculateShapes",(()=>ma));var ga={};t(ga,"assertParamsValid",(()=>ya)),t(ga,"maskToAxes",(()=>xa)),t(ga,"computeOutShape",(()=>va)),t(ga,"stridesWithElidedDims",(()=>ba)),t(ga,"getNormalizedAxes",(()=>Sa)),t(ga,"startIndicesWithElidedDims",(()=>Ta)),t(ga,"stopIndicesWithElidedDims",(()=>Ea)),t(ga,"startForAxis",(()=>Ca)),t(ga,"stopForAxis",(()=>Ia)),t(ga,"stridesForAxis",(()=>Ma)),t(ga,"isSliceContinous",(()=>ka)),t(ga,"computeFlatOffset",(()=>Aa)),t(ga,"parseSliceParams",(()=>Na)),t(ga,"sliceInfo",(()=>Ra));function ya(e,t,n){const r=e.shape.length;x(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),x(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let i=0;i<r;++i)x(t[i]+n[i]<=e.shape[i],(()=>`Error in slice${r}D: begin[${i}] + size[${i}] (${t[i]+n[i]}) would overflow input.shape[${i}] (${e.shape[i]})`))}function xa(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function va(e,t,n){const r=[];for(let i=0;i<e.length;i++)r[i]=Math.ceil((t[i]-e[i])/n[i]);return r}function ba(e,t,n,r){const i=[...e];for(let e=i.length;e<r.length;e++)i.push(1);for(let e=0;e<n;e++)0===e?i[t]=1:(i.splice(t,0,1),i.pop());return i}function wa(e,t,n){return n<=e?n:n-(t-1)}function _a(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Sa(e,t,n,r,i,a,s,o,l){const u=e.length;let c=new Array(u),h=new Array(u),p=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Ta(s,l,u,r,e),h=Ea(o,l,u,i,e),p=ba(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=Ca(s,r,a,e,t,l),h[t]=Ia(o,i,a,e,t,l),p[t]=Ma(a,t,l);return{begin:c,end:h,strides:p}}function Ta(e,t,n,r,i){const a=[...i],s=_a(n,t);for(let i=0;i<a.length;i++)if(s.indexOf(i)>-1)a[i]=0;else{const s=wa(t,n,i);let o=r[s];e&1<<s&&(o=0),a[i]=o}return a}function Ea(e,t,n,r,i){const a=[...i],s=_a(n,t);for(let i=0;i<a.length;i++)if(s.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{const s=wa(t,n,i);let o=r[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),a[i]=o}for(let e=0;e<a.length;e++){const t=i[e];a[e]<0&&(a[e]+=t),a[e]=p(0,a[e],i[e])}return a}function Ma(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Ca(e,t,n,r,i,a){let s=t[i];const o=n[i]||1;(e&1<<i||a&1<<i||null==s)&&(s=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[i];return s<0&&(s+=l),s=p(0,s,l-1),s}function Ia(e,t,n,r,i,a){let s=t[i];const o=n[i]||1;(e&1<<i||a&1<<i||null==s)&&(s=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[i];return s<0&&(s+=l),s=o>0?p(0,s,l):p(-1,s,l-1),s}function ka(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let i=r+1;i<n.length;i++)if(t[i]>0||n[i]!==e[i])return!1;return!0}function Aa(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Na(e,t,n){let r;const i=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(i-1).fill(0)]:t.length<i?t.concat(new Array(i-t.length).fill(0)):t.slice(),r.forEach((e=>{x(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(i).fill(-1):"number"==typeof n?[n,...new Array(i-1).fill(-1)]:n.length<i?n.concat(new Array(i-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(x(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Ra(e,t,n,r,i,a,s,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=s&&0!=(s&s-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:i,endMask:a,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&s&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const i=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<i;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const i=[p.beginMask&1<<t,p.endMask&1<<t],a=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const s=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=La(p.begin[t],0,p.strides[t],r,i,a),p.end[t]=La(p.end[t],1,p.strides[t],r,i,a);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;d=d&&e,f=f&&(0===t&&1===p.strides[t]||e)}else d=d&&1===p.strides[t]&&s,f=f&&(0===t&&1===p.strides[t]||s);let o,l=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],l=!0):n?(o=1,l=!0):s&&r>=0&&(o=p.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function La(e,t,n,r,i,a){if(i[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}var Oa={};t(Oa,"fromUint8ToStringArray",(()=>Do)),t(Oa,"fromStringArrayToUint8",(()=>Fo)),t(Oa,"slice_util",(()=>ga)),t(Oa,"upcastType",(()=>tn)),t(Oa,"segment_util",(()=>Pa));var Pa={};t(Pa,"segOpComputeOptimalWindowSize",(()=>Ba)),t(Pa,"computeOutShape",(()=>za)),t(Pa,"collectGatherOpShapeInfo",(()=>Ua));var Da={};t(Da,"PARALLELIZE_THRESHOLD",(()=>Fa)),t(Da,"computeOptimalWindowSize",(()=>$a));const Fa=30;function $a(e){return e<=Fa?e:q(e,Math.floor(Math.sqrt(e)))}function Ba(e,t){let n,r=!1;for(e<=Fa?(n=e,r=!0):n=q(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=q(e,n+1);return n}function za(e,t,n){const r=[],i=e.length;for(let a=0;a<i;a++)a!==t?r.push(e[a]):r.push(n);return r}function Ua(e,t,n,r){const i=t.shape.length,a=e.shape.length;if(0!==r&&(r<-i||r>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${r}`);if(r<0&&(r+=i),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const s=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<i;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:s,outputShape:o}}var Va={};function Wa(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Ha(e,t,n){const r=e.length+t.length,i=[];let a=0,s=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?i.push(e[a++]):i.push(t[s++]);return i}function Ga(e,t){const n=[],r=e.length;for(let i=0;i<r;i++)-1===t.indexOf(i)&&n.push(e[i]);return[n,t.map((t=>e[t]))]}function ja(e,t){return Ha(e,t.map((e=>1)),t)}function qa(e,t,n){x(Wa(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Xa(e,t){if(Wa(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Ka(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Ya(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}t(Va,"axesAreInnerMostDims",(()=>Wa)),t(Va,"combineLocations",(()=>Ha)),t(Va,"computeOutAndReduceShapes",(()=>Ga)),t(Va,"expandShapeToKeepDim",(()=>ja)),t(Va,"assertAxesAreInnerMostDims",(()=>qa)),t(Va,"getAxesPermutation",(()=>Xa)),t(Va,"getUndoAxesPermutation",(()=>Ka)),t(Va,"getInnerMostAxes",(()=>Ya));var Za={};function Ja(e,t){const n=e[0].length;e.forEach(((e,t)=>{x(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),x(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,i)=>{for(let a=0;a<n;a++)x(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${i}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${i}.`))}))}function Qa(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}t(Za,"assertParamsConsistent",(()=>Ja)),t(Za,"computeOutShape",(()=>Qa));var es={};function ts(e,t,n,r,i="NHWC",a){return is(e,[...t,e[3]],n,a,r,null,null,ds(i))}function ns(e,t,n,r,i,a,s="channelsLast"){const[o,l]=os(t);let u;if("channelsLast"===s)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);u=[o,l,e[1],e[1]]}return is(e,u,n,r,i,a,!1,s)}function rs(e,t,n,r,i,a,s="NDHWC"){const[o,l,u]=ls(t);let c,h;if("NDHWC"===s)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==s)throw new Error(`Unknown dataFormat ${s}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return as(e,c,n,r,i,!1,h,a)}function is(e,t,n,r,i,a,s=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[p,d,,f]=t,[m,g]=os(n),[y,x]=os(r),v=us(p,y),b=us(d,x),{padInfo:w,outHeight:_,outWidth:S}=function(e,t,n,r,i,a,s,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const i=function(e,t,n,r,i){null==r&&(r=ss(e,t,n));const a=e[0],s=e[1],o=cs((a-t+2*r)/n+1,i),l=cs((s-t+2*r)/n+1,i);return[o,l]}([t,n],a,r,e,o);c=i[0],h=i[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/i);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*i+s-n),l=Math.floor(e/2),p=e-l,d=Math.floor(o/2);u={top:l,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-s+1)/i);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===l?e[1][0]:e[2][0],d="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=cs((t-a+p+d)/r+1,o),h=cs((n-s+f+m)/i+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(i,u,c,m,g,v,b,a,o),T=s?f*h:f;let E;return"channelsFirst"===o?E=[l,T,_,S]:"channelsLast"===o&&(E=[l,_,S,T]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:_,outWidth:S,outChannels:T,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:v,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:x,inShape:e,outShape:E,filterShape:t}}function as(e,t,n,r,i,a=!1,s="channelsLast",o){let[l,u,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[l,u,c,h,p]=e;else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);[l,p,u,c,h]=e}const[d,f,m,,g]=t,[y,x,v]=ls(n),[b,w,_]=ls(r),S=us(d,b),T=us(f,w),E=us(m,_),{padInfo:M,outDepth:C,outHeight:I,outWidth:k}=function(e,t,n,r,i,a,s,o,l,u,c){let h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,i,a){null==i&&(i=ss(e,t,r));const s=e[0],o=e[1],l=e[2],u=cs((s-t+2*i)/r+1,a),c=cs((o-t+2*i)/r+1,a),h=cs((l-t+2*i)/r+1,a);return[u,c,h,n]}([t,n,r,1],o,1,i,e,c);p=a[0],d=a[1],f=a[2]}else if("same"===e){p=Math.ceil(t/i),d=Math.ceil(n/a),f=Math.ceil(r/s);const e=(p-1)*i+o-t,c=(d-1)*a+l-n,m=(f-1)*s+u-r,g=Math.floor(e/2),y=e-g,x=Math.floor(c/2),v=c-x,b=Math.floor(m/2);h={top:x,bottom:v,left:b,right:m-b,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/i),d=Math.ceil((n-l+1)/a),f=Math.ceil((r-u+1)/s)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(i,u,c,h,y,x,v,S,T,E,o),A=a?g*p:g;let N;return"channelsFirst"===s?N=[l,A,C,I,k]:"channelsLast"===s&&(N=[l,C,I,k,A]),{batchSize:l,dataFormat:s,inDepth:u,inHeight:c,inWidth:h,inChannels:p,outDepth:C,outHeight:I,outWidth:k,outChannels:A,padInfo:M,strideDepth:y,strideHeight:x,strideWidth:v,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:T,effectiveFilterWidth:E,dilationDepth:b,dilationHeight:w,dilationWidth:_,inShape:e,outShape:N,filterShape:t}}function ss(e,t,n,r=1){const i=us(t,r);return Math.floor((e[0]*(n-1)-n+i)/2)}function os(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function ls(e){return"number"==typeof e?[e,e,e]:e}function us(e,t){return t<=1?e:e+(e-1)*(t-1)}function cs(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function hs(e){const[t,n,r]=os(e);return 1===t&&1===n&&1===r}function ps(e,t){return hs(e)||hs(t)}function ds(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function fs(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)x(E(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{x(E(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}t(es,"computeDilation2DInfo",(()=>ts)),t(es,"convertConv2DDataFormat",(()=>ds)),t(es,"computeConv2DInfo",(()=>is)),t(es,"computePool2DInfo",(()=>ns)),t(es,"computePool3DInfo",(()=>rs)),t(es,"computeConv3DInfo",(()=>as)),t(es,"computeDefaultPad",(()=>ss)),t(es,"tupleValuesAreOne",(()=>hs)),t(es,"eitherStridesOrDilationsAreOne",(()=>ps)),t(es,"checkPadOnDimRoundingMode",(()=>fs));var ms={};t(ms,"getFusedDyActivation",(()=>Ms)),t(ms,"getFusedBiasGradient",(()=>Cs)),t(ms,"applyActivation",(()=>Is)),t(ms,"shouldFuse",(()=>ks));const gs=Tn({elu_:function(e){const t={x:_n(e,"x","elu","float32")};return hn.runKernel("Elu",t)}});const ys=Tn({leakyRelu_:function(e,t=.2){const n={x:_n(e,"x","leakyRelu")},r={alpha:t};return hn.runKernel("LeakyRelu",n,r)}});const xs=Tn({mul_:function(e,t){let n=_n(e,"a","mul"),r=_n(t,"b","mul");[n,r]=rn(n,r);const i={a:n,b:r};return hn.runKernel("Multiply",i)}});const vs=Tn({prelu_:function(e,t){const n={x:_n(e,"x","prelu"),alpha:_n(t,"alpha","prelu")};return hn.runKernel("Prelu",n)}});const bs=Tn({relu_:function(e){const t={x:_n(e,"x","relu")};return hn.runKernel("Relu",t)}});const ws=Tn({relu6_:function(e){const t={x:_n(e,"x","relu6")};return hn.runKernel("Relu6",t)}});const _s=Tn({reshape_:function(e,t){const n={x:_n(e,"x","reshape","string_or_numeric")},r={shape:t};return hn.runKernel("Reshape",n,r)}});const Ss=Tn({sigmoid_:function(e){const t={x:_n(e,"x","sigmoid","float32")};return hn.runKernel("Sigmoid",t)}});const Ts=Tn({step_:function(e,t=0){const n={x:_n(e,"x","step")},r={alpha:t};return hn.runKernel("Step",n,r)}});const Es=Tn({sum_:function(e,t=null,n=!1){let r=_n(e,"x","sum");"bool"===r.dtype&&(r=Ii(r,"int32"));const i={x:r},a={axis:t,keepDims:n};return hn.runKernel("Sum",i,a)}});function Ms(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return xs(e,Ts(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Cs(e,t){let n=t;const r=ea(e.shape,t.shape);return r.length>0&&(n=Es(n,r)),_s(n,e.shape)}function Is(e,t,n,r){if("linear"===t)return e;if("relu"===t)return bs(e);if("elu"===t)return gs(e);if("relu6"===t)return ws(e);if("prelu"===t)return vs(e,n);if("leakyrelu"===t)return ys(e,r);if("sigmoid"===t)return Ss(e);throw new Error(`Unknown fused activation ${t}.`)}const ks=(e,t)=>!(e>0)||"linear"===t;var As,Ns,Rs={};function Ls(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let i=1;i<n.length;++i){const a=n[i],s=r[r.length-n.length+i],o=r[s];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${i+e}] = ${a} but shape[${i+e}] = ${o}`)}else r[s]=a}return r}function Os(e){const t={FIRST_DIM_SIZE:As.FIRST_DIM_SIZE,VALUE_ROWIDS:As.VALUE_ROWIDS,ROW_LENGTHS:As.ROW_LENGTHS,ROW_SPLITS:As.ROW_SPLITS,ROW_LIMITS:As.ROW_LIMITS,ROW_STARTS:As.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Ps(e){return 0===e.length?0:e[0]===As.FIRST_DIM_SIZE?e.length-1:e.length}function Ds(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let i=0;i<Math.min(n,r-1);++i){const n=e[i],r=t[i+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${i-e.length}] = ${n} but ragged tensor input.flatValues.shape[${i-e.length}] = ${r}`)}}t(Rs,"RowPartitionType",(()=>As)),t(Rs,"combineRaggedTensorToTensorShapes",(()=>Ls)),t(Rs,"getRowPartitionTypesHelper",(()=>Os)),t(Rs,"getRaggedRank",(()=>Ps)),t(Rs,"validateDefaultValueShape",(()=>Ds)),(Ns=As||(As={}))[Ns.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",Ns[Ns.VALUE_ROWIDS=1]="VALUE_ROWIDS",Ns[Ns.ROW_LENGTHS=2]="ROW_LENGTHS",Ns[Ns.ROW_SPLITS=3]="ROW_SPLITS",Ns[Ns.ROW_LIMITS=4]="ROW_LIMITS",Ns[Ns.ROW_STARTS=5]="ROW_STARTS";var Fs={};function $s(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}t(Fs,"getImageCenter",(()=>$s));var Bs={};function zs(e,t,n,r=!0){let i=[];if(r)i=i.concat(t.slice(0)),i.push(e[0]/n),i=i.concat(e.slice(1));else{i=i.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)i=i.concat([e[r+1]/t[r],t[r]]);i=i.concat(e.slice(n+1))}return i}function Us(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],i=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?i.push(r):n.push(r);r.push(...n),r.push(0),r.push(...i)}return r}function Vs(e,t,n,r=!0){const i=[];r?i.push(e[0]/n):i.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?i.push(t[n-1]*e[n]):i.push(e[n]/t[n-1]):i.push(e[n]);return i}function Ws(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Hs(e,t,n){const r=e.slice(0,1);for(let i=0;i<n;++i)r.push(e[i+1]-t[i][0]-t[i][1]);return r}t(Bs,"getReshaped",(()=>zs)),t(Bs,"getPermuted",(()=>Us)),t(Bs,"getReshapedPermuted",(()=>Vs)),t(Bs,"getSliceBeginCoords",(()=>Ws)),t(Bs,"getSliceSize",(()=>Hs));var Gs={};t(Gs,"SELU_SCALEALPHA",(()=>js)),t(Gs,"SELU_SCALE",(()=>qs));const js=1.7580993408473768,qs=1.0507009873554805;var Xs={};t(Xs,"ERF_P",(()=>Ks)),t(Xs,"ERF_A1",(()=>Ys)),t(Xs,"ERF_A2",(()=>Zs)),t(Xs,"ERF_A3",(()=>Js)),t(Xs,"ERF_A4",(()=>Qs)),t(Xs,"ERF_A5",(()=>eo));const Ks=.3275911,Ys=.254829592,Zs=-.284496736,Js=1.421413741,Qs=-1.453152027,eo=1.061405429;var to={};function no(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function ro(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function io(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function ao(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function so(e,t){return{real:e[2*t],imag:e[2*t+1]}}function oo(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function lo(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let i=0;i<Math.ceil(e/2);i++){const a=(t?2:-2)*Math.PI*(i/e);n[i]=Math.cos(a),r[i]=Math.sin(a)}return{real:n,imag:r}}function uo(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}t(to,"mergeRealAndImagArrays",(()=>no)),t(to,"splitRealAndImagArrays",(()=>ro)),t(to,"complexWithEvenIndex",(()=>io)),t(to,"complexWithOddIndex",(()=>ao)),t(to,"getComplexWithIndex",(()=>so)),t(to,"assignToTypedArray",(()=>oo)),t(to,"exponents",(()=>lo)),t(to,"exponent",(()=>uo));var co={};t(co,"decodeEinsumEquation",(()=>po)),t(co,"getEinsumPermutation",(()=>fo)),t(co,"checkEinsumDimSizes",(()=>mo)),t(co,"getEinsumComputePath",(()=>go)),t(co,"isIdentityPermutation",(()=>yo));const ho=/->/g;function po(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(ho,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,i]=e.split("->");x(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=r.split(","),s=a.length;if(t!==s)throw new Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<i.length;++e){const t=i[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(a.length);for(let e=0;e<s;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=i.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function fo(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function mo(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const i=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=i[n]:x(r[t[e][n]]===i[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(i)}, but got dimension ${i[n]}`))}}function go(e,t){const n=e,r=[];let i=0;0===e.length&&n.push(-1),i=e.length+1;for(let e=0;e<i;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const i=xo(t,n[e]);for(const t of i)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function yo(e){return e.every(((e,t)=>e===t))}function xo(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}var vo={};function bo(e,t,n=0){let r=[];if("number"==typeof t)x(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{x(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const r=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-r}x(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}t(vo,"prepareSplitSize",(()=>bo));var wo={};function _o(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function So(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function To(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}t(wo,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",(()=>_o)),t(wo,"getSparseFillEmptyRowsNegativeIndexErrorMessage",(()=>So)),t(wo,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",(()=>To));var Eo={};function Mo(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Co(e,t){return`size ${e} must be non-negative, not ${t}`}function Io(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ko(e,t){return`Input to reshape is a SparseTensor with ${_(e)}\n  dense values, but the requested shape requires a multiple of ${_(t)}. inputShape=${e} outputShape= ${t}`}function Ao(e,t){return`Input to reshape is a tensor with ${_(e)} dense values, but the requested shape has ${_(t)}. inputShape=${e} outputShape=${t}`}t(Eo,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",(()=>Mo)),t(Eo,"getSparseReshapeNegativeOutputDimErrorMessage",(()=>Co)),t(Eo,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",(()=>Io)),t(Eo,"getSparseReshapeInputOutputMultipleErrorMessage",(()=>ko)),t(Eo,"getSparseReshapeInputOutputMismatchErrorMessage",(()=>Ao));var No={};function Ro(){return"segment ids must be >= 0"}function Lo(){return"segment ids are not increasing"}function Oo(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Po(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Do(e){try{return e.map((e=>Ct(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Fo(e){return e.map((e=>Mt(e)))}t(No,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",(()=>Ro)),t(No,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",(()=>Lo)),t(No,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",(()=>Oo)),t(No,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",(()=>Po)),n(Oa,Va),n(Oa,Ji),n(Oa,Za),n(Oa,es),n(Oa,ms),n(Oa,Rs),n(Oa,Da),n(Oa,Fs),n(Oa,Bs),n(Oa,ca),n(Oa,pa),n(Oa,Gs),n(Oa,Xs),n(Oa,Me),n(Oa,to),n(Oa,co),n(Oa,vo),n(Oa,wo),n(Oa,Eo),n(Oa,No);var $o={};function Bo(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,i=e.length,a=0,s=!1;for(;r<i;){a=r+(i-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(i=a,s=!o)}return s?r:-r-1}(e,t,n||zo)}(e,t,n),i=r<0?-(r+1):r;e.splice(i,0,t)}function zo(e,t){return e>t?1:e<t?-1:0}function Uo(e,t,n,r,i){return Ho(e,t,n,r,i,0)}function Vo(e,t,n,r,i,a){return Ho(e,t,n,r,i,0,!1,a,!0)}function Wo(e,t,n,r,i,a){return Ho(e,t,n,r,i,a,!0)}function Ho(e,t,n,r,i,a,s=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>i&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(qo);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:s}=t;if(n<i)break;let o=!1;for(let n=h.length-1;n>=s;--n){const s=Go(e,a,h[n]);if(s>=r){o=!0;break}if(t.score=t.score*jo(r,c,s),t.score<=i)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),p.push(t.score)):t.score>i&&Bo(u,t,qo))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return s&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function Go(e,t,n){const r=e.subarray(4*t,4*t+4),i=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(i[0],i[2]),c=Math.min(i[1],i[3]),h=Math.max(i[0],i[2]),p=Math.max(i[1],i[3]),d=(o-a)*(l-s),f=(h-u)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(s,c),y=Math.min(o,h),x=Math.min(l,p),v=Math.max(y-m,0)*Math.max(x-g,0);return v/(d+f-v)}function jo(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function qo(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}function Xo(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Ci(e,"int32"),i=Ci([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),s=t*e.length;i.values.set(a,s)}return i.toTensor()}t($o,"nonMaxSuppressionV3Impl",(()=>Uo)),t($o,"nonMaxSuppressionV4Impl",(()=>Vo)),t($o,"nonMaxSuppressionV5Impl",(()=>Wo)),t($o,"whereImpl",(()=>Xo));var Ko={};t(Ko,"spectral",(()=>qp)),t(Ko,"signal",(()=>Xp)),t(Ko,"image",(()=>Kp)),t(Ko,"linalg",(()=>Yp)),t(Ko,"losses",(()=>Zp)),t(Ko,"sparse",(()=>Jp)),t(Ko,"string",(()=>Qp)),t(Ko,"abs",(()=>cu)),t(Ko,"acos",(()=>oc)),t(Ko,"acosh",(()=>lc)),t(Ko,"add",(()=>hl)),t(Ko,"addN",(()=>uc)),t(Ko,"all",(()=>cc)),t(Ko,"any",(()=>hc)),t(Ko,"argMax",(()=>pc)),t(Ko,"argMin",(()=>dc)),t(Ko,"asin",(()=>fc)),t(Ko,"asinh",(()=>mc)),t(Ko,"atan",(()=>gc)),t(Ko,"atan2",(()=>yc)),t(Ko,"atanh",(()=>xc)),t(Ko,"avgPool",(()=>vc)),t(Ko,"avgPool3d",(()=>bc)),t(Ko,"basicLSTMCell",(()=>_c)),t(Ko,"batchToSpaceND",(()=>Sc)),t(Ko,"batchNorm",(()=>Ec)),t(Ko,"batchNorm2d",(()=>Mc)),t(Ko,"batchNorm3d",(()=>Cc)),t(Ko,"batchNorm4d",(()=>Ic)),t(Ko,"bincount",(()=>jl)),t(Ko,"broadcastArgs",(()=>kc)),t(Ko,"broadcastTo",(()=>Ql)),t(Ko,"buffer",(()=>Ci)),t(Ko,"cast",(()=>Ii)),t(Ko,"ceil",(()=>Ac)),t(Ko,"clipByValue",(()=>Nc)),t(Ko,"clone",(()=>ki)),t(Ko,"complex",(()=>En)),t(Ko,"concat",(()=>Yo)),t(Ko,"concat1d",(()=>Rc)),t(Ko,"concat2d",(()=>Lc)),t(Ko,"concat3d",(()=>Oc)),t(Ko,"concat4d",(()=>Pc)),t(Ko,"conv1d",(()=>Dc)),t(Ko,"conv2d",(()=>pl)),t(Ko,"conv2dTranspose",(()=>Fc)),t(Ko,"conv3d",(()=>$c)),t(Ko,"conv3dTranspose",(()=>zc)),t(Ko,"cos",(()=>Uc)),t(Ko,"cosh",(()=>Vc)),t(Ko,"cumprod",(()=>Wc)),t(Ko,"cumsum",(()=>Hc)),t(Ko,"denseBincount",(()=>Gc)),t(Ko,"depthToSpace",(()=>jc)),t(Ko,"depthwiseConv2d",(()=>gl)),t(Ko,"diag",(()=>qc)),t(Ko,"dilation2d",(()=>Xc)),t(Ko,"div",(()=>Yl)),t(Ko,"divNoNan",(()=>Yc)),t(Ko,"dot",(()=>Zc)),t(Ko,"einsum",(()=>Jc)),t(Ko,"elu",(()=>gs)),t(Ko,"equal",(()=>Kc)),t(Ko,"erf",(()=>Qc)),t(Ko,"euclideanNorm",(()=>eh)),t(Ko,"exp",(()=>Ku)),t(Ko,"expandDims",(()=>Cu)),t(Ko,"expm1",(()=>th)),t(Ko,"eye",(()=>Iu)),t(Ko,"fill",(()=>Il)),t(Ko,"floor",(()=>nh)),t(Ko,"floorDiv",(()=>Kl)),t(Ko,"gather",(()=>rh)),t(Ko,"greater",(()=>Xl)),t(Ko,"greaterEqual",(()=>iu)),t(Ko,"imag",(()=>Zo)),t(Ko,"isFinite",(()=>ih)),t(Ko,"isInf",(()=>ah)),t(Ko,"isNaN",(()=>sh)),t(Ko,"leakyRelu",(()=>ys)),t(Ko,"less",(()=>oh)),t(Ko,"lessEqual",(()=>ql)),t(Ko,"linspace",(()=>lh)),t(Ko,"localResponseNormalization",(()=>uh)),t(Ko,"log",(()=>Gu)),t(Ko,"log1p",(()=>Yu)),t(Ko,"logSigmoid",(()=>hh)),t(Ko,"logSoftmax",(()=>ph)),t(Ko,"logSumExp",(()=>Ju)),t(Ko,"logicalAnd",(()=>au)),t(Ko,"logicalNot",(()=>dh)),t(Ko,"logicalOr",(()=>fh)),t(Ko,"logicalXor",(()=>mh)),t(Ko,"lowerBound",(()=>xh)),t(Ko,"matMul",(()=>bl)),t(Ko,"max",(()=>hu)),t(Ko,"maxPool",(()=>vh)),t(Ko,"maxPool3d",(()=>bh)),t(Ko,"maxPoolWithArgmax",(()=>wh)),t(Ko,"maximum",(()=>_h)),t(Ko,"mean",(()=>Du)),t(Ko,"meshgrid",(()=>Sh)),t(Ko,"min",(()=>pu)),t(Ko,"minimum",(()=>Wu)),t(Ko,"mirrorPad",(()=>Th)),t(Ko,"mod",(()=>Eh)),t(Ko,"moments",(()=>Mh)),t(Ko,"mul",(()=>xs)),t(Ko,"multiRNNCell",(()=>Ch)),t(Ko,"multinomial",(()=>Ih)),t(Ko,"neg",(()=>ku)),t(Ko,"notEqual",(()=>Fu)),t(Ko,"oneHot",(()=>kh)),t(Ko,"ones",(()=>$u)),t(Ko,"onesLike",(()=>Ah)),t(Ko,"outerProduct",(()=>Nh)),t(Ko,"pad",(()=>Rh)),t(Ko,"pad1d",(()=>Lh)),t(Ko,"pad2d",(()=>Oh)),t(Ko,"pad3d",(()=>Ph)),t(Ko,"pad4d",(()=>Dh)),t(Ko,"pool",(()=>$h)),t(Ko,"pow",(()=>du)),t(Ko,"prelu",(()=>vs)),t(Ko,"print",(()=>Ai)),t(Ko,"prod",(()=>Bh)),t(Ko,"raggedTensorToTensor",(()=>zh)),t(Ko,"rand",(()=>Uh)),t(Ko,"randomGamma",(()=>Qh)),t(Ko,"randomNormal",(()=>ep)),t(Ko,"randomStandardNormal",(()=>tp)),t(Ko,"randomUniform",(()=>np)),t(Ko,"range",(()=>tu)),t(Ko,"real",(()=>Jo)),t(Ko,"reciprocal",(()=>rp)),t(Ko,"relu",(()=>bs)),t(Ko,"relu6",(()=>ws)),t(Ko,"reshape",(()=>_s)),t(Ko,"reverse",(()=>sl)),t(Ko,"reverse1d",(()=>ip)),t(Ko,"reverse2d",(()=>ap)),t(Ko,"reverse3d",(()=>sp)),t(Ko,"reverse4d",(()=>op)),t(Ko,"round",(()=>Jl)),t(Ko,"rsqrt",(()=>lp)),t(Ko,"scalar",(()=>ol)),t(Ko,"selu",(()=>up)),t(Ko,"separableConv2d",(()=>cp)),t(Ko,"setdiff1dAsync",(()=>hp)),t(Ko,"sigmoid",(()=>Ss)),t(Ko,"sign",(()=>pp)),t(Ko,"sin",(()=>dp)),t(Ko,"sinh",(()=>fp)),t(Ko,"slice",(()=>Qo)),t(Ko,"slice1d",(()=>mp)),t(Ko,"slice2d",(()=>gp)),t(Ko,"slice3d",(()=>yp)),t(Ko,"slice4d",(()=>xp)),t(Ko,"softmax",(()=>vp)),t(Ko,"softplus",(()=>ch)),t(Ko,"spaceToBatchND",(()=>Fh)),t(Ko,"fft",(()=>rl)),t(Ko,"ifft",(()=>al)),t(Ko,"irfft",(()=>ll)),t(Ko,"rfft",(()=>il)),t(Ko,"split",(()=>el)),t(Ko,"sqrt",(()=>fu)),t(Ko,"square",(()=>mu)),t(Ko,"squaredDifference",(()=>qu)),t(Ko,"squeeze",(()=>xu)),t(Ko,"stack",(()=>su)),t(Ko,"step",(()=>Ts)),t(Ko,"stridedSlice",(()=>bp)),t(Ko,"sub",(()=>Zl)),t(Ko,"sum",(()=>Es)),t(Ko,"tan",(()=>wp)),t(Ko,"tanh",(()=>wc)),t(Ko,"tensor",(()=>Cn)),t(Ko,"tensor1d",(()=>Sl)),t(Ko,"tensor2d",(()=>kl)),t(Ko,"tensor3d",(()=>ra)),t(Ko,"tensor4d",(()=>_p)),t(Ko,"tensor5d",(()=>Sp)),t(Ko,"tensor6d",(()=>Tp)),t(Ko,"tile",(()=>Ol)),t(Ko,"topk",(()=>Ep)),t(Ko,"truncatedNormal",(()=>Mp)),t(Ko,"unique",(()=>Cp)),t(Ko,"unsortedSegmentSum",(()=>Ip)),t(Ko,"unstack",(()=>ou)),t(Ko,"upperBound",(()=>kp)),t(Ko,"variable",(()=>Ap)),t(Ko,"where",(()=>eu)),t(Ko,"whereAsync",(()=>Np)),t(Ko,"zeros",(()=>tl)),t(Ko,"zerosLike",(()=>nl)),t(Ko,"op",(()=>Tn)),t(Ko,"OP_SCOPE_SUFFIX",(()=>"__op")),t(Ko,"fused",(()=>ul));const Yo=Tn({concat_:function(e,t=0){x(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Sn(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return ki(n[0]);const r=n,i={axis:t};return hn.runKernel("Concat",r,i)}});const Zo=Tn({imag_:function(e){const t={input:_n(e,"input","imag")};return hn.runKernel("Imag",t)}});const Jo=Tn({real_:function(e){const t={input:_n(e,"input","real")};return hn.runKernel("Real",t)}});const Qo=Tn({slice_:function(e,t,n){const r=_n(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const i={x:r},a={begin:t,size:n};return hn.runKernel("Slice",i,a)}});const el=Tn({split_:function(e,t,n=0){const r={x:_n(e,"x","split")},i={numOrSizeSplits:t,axis:n};return hn.runKernel("SplitV",r,i)}});function tl(e,t="float32"){if("complex64"===t){const t=tl(e,"float32"),n=tl(e,"float32");return En(t,n)}const n=J(_(e),t);return hn.makeTensor(n,e,t)}const nl=Tn({zerosLike_:function(e){const t={x:_n(e,"x","zerosLike")};return hn.runKernel("ZerosLike",t)}});const rl=Tn({fft_:function(e){x("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return hn.runKernel("FFT",t)}});const il=Tn({rfft_:function(e,t){x("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let i;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,i=Qo(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,i=Yo([e,tl(r)],e.shape.length-1),n=t}else i=e;const a=nl(i),s=_s(En(i,a),[r,n]),o=rl(s),l=Math.floor(n/2)+1,u=Jo(o),c=Zo(o),h=el(u,[l,n-l],u.shape.length-1),p=el(c,[l,n-l],c.shape.length-1),d=i.shape.slice();return d[i.shape.length-1]=l,_s(En(h[0],p[0]),d)}});const al=Tn({ifft_:function(e){x("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return hn.runKernel("IFFT",t)}});const sl=Tn({reverse_:function(e,t){const n={x:_n(e,"x","reverse")},r={dims:t};return hn.runKernel("Reverse",n,r)}});function ol(e,t){if((B(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&B(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Mn(e,[],[],t)}const ll=Tn({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const i=_s(e,[n,t]);r=al(i)}else{const i=[n,2*(t-1)],a=_s(Jo(e),[n,t]),s=_s(Zo(e),[n,t]),o=sl(Qo(a,[0,1],[n,t-2]),1),l=xs(sl(Qo(s,[0,1],[n,t-2]),1),ol(-1)),u=Yo([a,o],1),c=Yo([s,l],1),h=_s(En(u,c),[i[0],i[1]]);r=al(h)}if(r=Jo(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=_s(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});var ul={};function cl(e){return hn.customGrad(e)}t(ul,"conv2d",(()=>ml)),t(ul,"depthwiseConv2d",(()=>vl)),t(ul,"matMul",(()=>wl));const hl=Tn({add_:function(e,t){let n=_n(e,"a","add"),r=_n(t,"b","add");[n,r]=rn(n,r);const i={a:n,b:r};return hn.runKernel("Add",i)}});const pl=Tn({conv2d_:function(e,t,n,r,i="NHWC",a=[1,1],s){const o=_n(e,"x","conv2d","float32"),l=_n(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=_s(o,[1,o.shape[0],o.shape[1],o.shape[2]])),x(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),x(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),fs("conv2d",r,s);const h="NHWC"===i?u.shape[3]:u.shape[1];x(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),x(ps(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const p={x:u,filter:l},d={strides:n,pad:r,dataFormat:i,dilations:a,dimRoundingMode:s},f=hn.runKernel("Conv2D",p,d);return c?_s(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const dl=Tn({conv2DBackpropFilter_:function(e,t,n,r,i,a="NHWC",s){let o=e;3===e.rank&&(o=_s(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=_s(t,[1,t.shape[0],t.shape[1],t.shape[2]])),x(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),x(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),x(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];x(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),x(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),fs("conv2dDerFilter",i,s);const h={x:o,dy:l},p={strides:r,pad:i,dataFormat:a,dimRoundingMode:s,filterShape:n};return hn.runKernel("Conv2DBackpropFilter",h,p)}});const fl=Tn({conv2DBackpropInput_:function(e,t,n,r,i,a="NHWC",s){x(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=_s(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),x(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),x(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),x(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];x(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),x(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),fs("conv2dDerInput",i,s);const p={dy:l,filter:n},d={strides:r,pad:i,dataFormat:a,dimRoundingMode:s,inputShape:o},f=hn.runKernel("Conv2DBackpropInput",p,d);return u?_s(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const ml=Tn({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:i="NHWC",dilations:a=[1,1],dimRoundingMode:s,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===ks(hn.state.gradientDepth,l)){x("NHWC"===i,(()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=pl(e,t,n,r,i,a,s);return null!=o&&(h=hl(h,o)),Is(h,l,u,c)}const h=_n(e,"x","conv2d","float32"),p=_n(t,"filter","conv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=_s(h,[1,h.shape[0],h.shape[1],h.shape[2]])),x(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),x(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),fs("fused conv2d",r,s);const m="NHWC"===i?d.shape[3]:d.shape[1];x(p.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`)),x(ps(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const g=is(d.shape,p.shape,n,a,r,s);let y,v;if(null!=o&&(y=_n(o,"bias","fused conv2d"),[y]=rn(y,h),"NHWC"===i?ta(g.outShape,y.shape):(x(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),x(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=u){const e=u.shape;if(x(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)x(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{ta(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}v=_n(u,"prelu weights","fused conv2d")}const b=(e,t)=>{x("NHWC"===i,(()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`));const[s,o,u,c]=t,h=Ms(e,u,l);x(hs(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const p=[fl(o.shape,h,s,n,r),dl(o,h,s.shape,n,r)];if(null!=c){const e=Cs(c,h);p.push(e)}return p},w={x:d,filter:p,bias:y,preluActivationWeights:v},_={strides:n,pad:r,dataFormat:i,dilations:a,dimRoundingMode:s,activation:l,leakyreluAlpha:c};if(null==o){const e=cl(((e,t,n)=>{let r=hn.runKernel("FusedConv2D",w,_);return n([t,e,r]),f&&(r=_s(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p)}{const e=cl(((e,t,n,r)=>{let i=hn.runKernel("FusedConv2D",w,_);return r([t,e,i,n]),f&&(i=_s(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:b}}));return e(d,p,y)}}});const gl=Tn({depthwiseConv2d_:function(e,t,n,r,i="NHWC",a=[1,1],s){const o=_n(e,"x","depthwiseConv2d","float32"),l=_n(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=_s(o,[1,o.shape[0],o.shape[1],o.shape[2]])),x(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),x(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===i?u.shape[3]:u.shape[1];x(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),fs("depthwiseConv2d",r,s);const p={x:u,filter:l},d={strides:n,pad:r,dataFormat:i,dilations:a,dimRoundingMode:s},f=hn.runKernel("DepthwiseConv2dNative",p,d);return c?_s(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const yl=Tn({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,i,a=[1,1],s){let o=e;3===e.rank&&(o=_s(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=_s(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:i,dimRoundingMode:s,dilations:a,filterShape:n};return hn.runKernel("DepthwiseConv2dNativeBackpropFilter",u,c)}});const xl=Tn({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,i,a=[1,1],s){let o=t,l=!1;3===t.rank&&(l=!0,o=_s(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:i,dimRoundingMode:s,dilations:a,inputShape:e},h=hn.runKernel("DepthwiseConv2dNativeBackpropInput",u,c);return l?_s(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const vl=Tn({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:i="NHWC",dilations:a=[1,1],dimRoundingMode:s,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===ks(hn.state.gradientDepth,l)){let h=gl(e,t,n,r,i,a,s);return null!=o&&(h=hl(h,o)),Is(h,l,u,c)}const h=_n(e,"x","depthwiseConv2d","float32"),p=_n(t,"filter","depthwiseConv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=_s(h,[1,h.shape[0],h.shape[1],h.shape[2]])),x(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),x(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),x(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),x(ps(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),fs("fused depthwiseConv2d",r,s);const m=is(d.shape,p.shape,n,a,r,s,!0);let g,y;null!=o&&(g=_n(o,"bias","fused conv2d"),[g]=rn(g,h),ta(m.outShape,g.shape)),null!=u&&(y=_n(u,"prelu weights","fused depthwiseConv2d"));const v=(e,t)=>{x(hs(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[i,o,u,c]=t,h=Ms(e,u,l),p=xl(o.shape,h,i,n,r,a,s),d=yl(o,h,i.shape,n,r,a,s);if(null!=c){return[p,d,Cs(g,h)]}return[p,d]},b={x:d,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:i,dilations:a,dimRoundingMode:s,activation:l,leakyreluAlpha:c};if(null==o){const e=cl(((e,t,n)=>{let r=hn.runKernel("FusedDepthwiseConv2D",b,w);return n([t,e,r]),f&&(r=_s(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(d,p)}{const e=cl(((e,t,n,r)=>{let i=hn.runKernel("FusedDepthwiseConv2D",b,w);return r([t,e,i,n]),f&&(i=_s(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:v}}));return e(d,p,g)}}});const bl=Tn({matMul_:function(e,t,n=!1,r=!1){let i=_n(e,"a","matMul"),a=_n(t,"b","matMul");[i,a]=rn(i,a);const s={a:i,b:a},o={transposeA:n,transposeB:r};return hn.runKernel("BatchMatMul",s,o)}});const wl=Tn({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:i,activation:a="linear",preluActivationWeights:s,leakyreluAlpha:o=.2}){if(!1===ks(hn.state.gradientDepth,a)){let l=bl(e,t,n,r);return null!=i&&(l=hl(l,i)),Is(l,a,s,o)}let l=_n(e,"a","fused matMul"),u=_n(t,"b","fused matMul");[l,u]=rn(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],d=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=_(f),y=_(m);x(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=ta(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,d]),b=_s(l,n?[g,c,p]:[g,p,c]),w=_s(u,r?[y,d,h]:[y,h,d]);let S,T;null!=i&&(S=_n(i,"bias","fused matMul"),[S]=rn(S,l),ta(v,S.shape)),null!=s&&(T=_n(s,"prelu weights","fused matMul"));const E=(e,t)=>{const[s,o,l,u]=t,c=Ms(_s(e,l.shape),l,a);let h,p;if(n||r?!n&&r?(h=bl(c,o,!1,!1),p=bl(c,s,!0,!1)):n&&!r?(h=bl(o,c,!1,!0),p=bl(s,c,!1,!1)):(h=bl(o,c,!0,!0),p=bl(c,s,!0,!0)):(h=bl(c,o,!1,!0),p=bl(s,c,!0,!1)),null!=i){return[h,p,Cs(u,c)]}return[h,p]},M={a:b,b:w,bias:S,preluActivationWeights:T},C={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==i){const e=cl(((e,t,n)=>{const r=hn.runKernel("_FusedMatMul",M,C);return n([e,t,r]),{value:_s(r,v),gradFunc:E}}));return e(b,w)}{const e=cl(((e,t,n,r)=>{const i=hn.runKernel("_FusedMatMul",M,C);return r([e,t,i,n]),{value:_s(i,v),gradFunc:E}}));return e(b,w,S)}}});var _l={};function Sl(e,t){b(e);const n=vn(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Mn(e,null,n,t)}function Tl(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function El(e,t,n){const r=1-e%2,i=new Float32Array(e);for(let a=0;a<e;++a){const s=2*Math.PI*a/(e+r-1);i[a]=t-n*Math.cos(s)}return Sl(i,"float32")}t(_l,"enclosingPowerOfTwo",(()=>Tl)),t(_l,"cosineWindow",(()=>El));const Ml=Tn({hammingWindow_:function(e){return El(e,.54,.46)}});const Cl=Tn({hannWindow_:function(e){return El(e,.5,.5)}});function Il(e,t,n){const r={shape:e,value:t,dtype:n};return hn.runKernel("Fill",{},r)}function kl(e,t,n){if(b(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=vn(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Mn(e,t,r,n)}const Al=Tn({frame_:function(e,t,n,r=!1,i=0){let a=0;const s=[];for(;a+t<=e.size;)s.push(Qo(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=Yo([Qo(e,a,t-r),Il([r],i)]);s.push(o),a+=n}return 0===s.length?kl([],[0,t]):_s(Yo(s),[s.length,t])}});const Nl=Tn({stft_:function(e,t,n,r,i=Cl){null==r&&(r=Tl(t));const a=Al(e,t,n),s=xs(a,i(t));return il(s,r)}});const Rl=Tn({cropAndResize_:function(e,t,n,r,i="bilinear",a=0){const s=_n(e,"image","cropAndResize"),o=_n(t,"boxes","cropAndResize","float32"),l=_n(n,"boxInd","cropAndResize","int32"),u=o.shape[0];x(4===s.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`)),x(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),x(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),x(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),x(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),x("bilinear"===i||"nearest"===i,(()=>`method must be bilinear or nearest, but was ${i}`));const c={image:s,boxes:o,boxInd:l},h={method:i,extrapolationValue:a,cropSize:r};return hn.runKernel("CropAndResize",c,h)}});const Ll=Tn({flipLeftRight_:function(e){const t=_n(e,"image","flipLeftRight","float32");x(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return hn.runKernel("FlipLeftRight",n,{})}});const Ol=Tn({tile_:function(e,t){const n=_n(e,"x","tile","string_or_numeric");x(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},i={reps:t};return hn.runKernel("Tile",r,i)}});const Pl=Tn({grayscaleToRGB_:function(e){const t=_n(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];x(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),x(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const i=new Array(t.rank);return i.fill(1,0,n),i[n]=3,Ol(t,i)}});const Dl=Tn({rotateWithOffset_:function(e,t,n=0,r=.5){const i=_n(e,"image","rotateWithOffset","float32");x(4===i.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`));const a={image:i},s={radians:t,fillValue:n,center:r};return hn.runKernel("RotateWithOffset",a,s)}});function Fl(e,t,n,r,i,a){null==r&&(r=.5),null==i&&(i=Number.NEGATIVE_INFINITY),null==a&&(a=0);const s=e.shape[0];return n=Math.min(n,s),x(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),x(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),x(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),x(1===t.rank,(()=>"scores must be a 1D tensor")),x(t.shape[0]===s,(()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`)),x(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:i,softNmsSigma:a}}const $l=Tn({nonMaxSuppression_:function(e,t,n,r=.5,i=Number.NEGATIVE_INFINITY){const a=_n(e,"boxes","nonMaxSuppression","float32"),s=_n(t,"scores","nonMaxSuppression","float32"),o=Fl(a,s,n,r,i),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:i=o.scoreThreshold};return hn.runKernel("NonMaxSuppressionV3",{boxes:a,scores:s},l)}});const Bl=async function(e,t,n,r=.5,i=Number.NEGATIVE_INFINITY){const a=_n(e,"boxes","nonMaxSuppressionAsync"),s=_n(t,"scores","nonMaxSuppressionAsync"),o=Fl(a,s,n,r,i);n=o.maxOutputSize,r=o.iouThreshold,i=o.scoreThreshold;const l=await Promise.all([a.data(),s.data()]),u=l[0],c=l[1],{selectedIndices:h}=Uo(u,c,n,r,i);return a!==e&&a.dispose(),s!==t&&s.dispose(),Sl(h,"int32")};const zl=Tn({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,i=Number.NEGATIVE_INFINITY,a=0){const s=_n(e,"boxes","nonMaxSuppression"),o=_n(t,"scores","nonMaxSuppression"),l=Fl(s,o,n,r,i,a),u={boxes:s,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:i=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=hn.runKernel("NonMaxSuppressionV5",u,c);return{selectedIndices:h[0],selectedScores:h[1]}}});const Ul=async function(e,t,n,r=.5,i=Number.NEGATIVE_INFINITY,a=0){const s=_n(e,"boxes","nonMaxSuppressionAsync"),o=_n(t,"scores","nonMaxSuppressionAsync"),l=Fl(s,o,n,r,i,a);n=l.maxOutputSize,r=l.iouThreshold,i=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([s.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:p,selectedScores:d}=Wo(c,h,n,r,i,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:Sl(p,"int32"),selectedScores:Sl(d)}};const Vl=Tn({nonMaxSuppressionPadded_:function(e,t,n,r=.5,i=Number.NEGATIVE_INFINITY,a=!1){const s=_n(e,"boxes","nonMaxSuppression"),o=_n(t,"scores","nonMaxSuppression"),l=Fl(s,o,n,r,i,null),u={boxes:s,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=hn.runKernel("NonMaxSuppressionV4",u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const Wl=async function(e,t,n,r=.5,i=Number.NEGATIVE_INFINITY,a=!1){const s=_n(e,"boxes","nonMaxSuppressionAsync"),o=_n(t,"scores","nonMaxSuppressionAsync"),l=Fl(s,o,n,r,i,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[p,d]=await Promise.all([s.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Vo(p,d,u,c,h,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:Sl(f,"int32"),validOutputs:ol(m,"int32")}};const Hl=Tn({resizeBilinear_:function(e,t,n=!1,r=!1){const i=_n(e,"images","resizeBilinear");x(3===i.rank||4===i.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`)),x(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),x(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=i,s=!1;3===i.rank&&(s=!0,a=_s(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=hn.runKernel("ResizeBilinear",o,l);return s?_s(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Gl=Tn({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const i=_n(e,"images","resizeNearestNeighbor");x(3===i.rank||4===i.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`)),x(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),x("float32"===i.dtype||"int32"===i.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),x(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=i,s=!1;3===i.rank&&(s=!0,a=_s(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=hn.runKernel("ResizeNearestNeighbor",o,l);return s?_s(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const jl=Tn({bincount_:function(e,t,n){const r=_n(e,"x","bincount"),i=_n(t,"weights","bincount");x("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),x(n>=0,(()=>`size must be non-negative, but got ${n}.`)),x(i.size===r.size||0===i.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${i.shape}.`));const a={x:r,weights:i},s={size:n};return hn.runKernel("Bincount",a,s)}});const ql=Tn({lessEqual_:function(e,t){let n=_n(e,"a","lessEqual","string_or_numeric"),r=_n(t,"b","lessEqual","string_or_numeric");[n,r]=rn(n,r),ta(n.shape,r.shape);const i={a:n,b:r};return hn.runKernel("LessEqual",i)}});const Xl=Tn({greater_:function(e,t){let n=_n(e,"a","greater","string_or_numeric"),r=_n(t,"b","greater","string_or_numeric");[n,r]=rn(n,r),ta(n.shape,r.shape);const i={a:n,b:r};return hn.runKernel("Greater",i)}});const Kl=Tn({floorDiv_:function(e,t){let n=_n(e,"a","floorDiv"),r=_n(t,"b","floorDiv");[n,r]=rn(n,r);const i={a:n,b:r};return hn.runKernel("FloorDiv",i)}});const Yl=Tn({div_:function(e,t){let n=_n(e,"a","div"),r=_n(t,"b","div");if([n,r]=rn(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Kl(n,r);const i={a:n,b:r};return hn.runKernel("RealDiv",i,{})}});const Zl=Tn({sub_:function(e,t){let n=_n(e,"a","sub"),r=_n(t,"b","sub");[n,r]=rn(n,r);const i={a:n,b:r};return hn.runKernel("Sub",i)}});const Jl=Tn({round_:function(e){const t={x:_n(e,"x","round")};return hn.runKernel("Round",t)}});const Ql=Tn({broadcastTo_:function(e,t){let n=_n(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=_s(n,e)}const i=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(i[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return ki(n);const s={x:n},o={reps:a};return hn.runKernel("Tile",s,o)}});const eu=Tn({where_:function(e,t,n){const r=_n(t,"a","where"),i=_n(n,"b","where"),a=_n(e,"condition","where","bool"),s=ta(ta(a.shape,r.shape),i.shape),o={condition:Ql(a,s),t:Ql(r,s),e:Ql(i,s)};return hn.runKernel("Select",o)}});function tu(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:e,stop:t,step:n,dtype:r};return hn.runKernel("Range",{},i)}const nu=Tn({threshold_:function(e,t="binary",n=!1,r=.5){const i=_n(e,"image","threshold"),a=i.shape[0]*i.shape[1];let s,o,l,u,c=xs(Sl([r]),255);if(x(3===i.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`)),x(3===i.shape[2]||1===i.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`)),x("int32"===i.dtype||"float32"===i.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`)),x("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===i.shape[2]){[s,o,l]=el(i,[1,1,1],-1);const e=xs(s,.2989),t=xs(o,.587),n=xs(l,.114);u=hl(hl(e,t),n)}else u=e;if("otsu"===t){c=function(e,t){let n,r,i,a,s,o,l=Sl([-1]),u=Sl([0]),c=Sl([0]);for(let h=0;h<e.size-1;h++){n=Qo(e,0,h+1),r=Qo(e,h+1),s=Yl(Es(n),t),o=Yl(Es(r),t);const p=Es(xs(n,tu(0,n.size)));i=Yl(p,Es(n));const d=Il(r.shape,n.size),f=hl(tu(0,r.size),d),m=xs(r,f);a=Yl(Es(m),Es(r));const g=Zl(i,a),y=Zl(i,a),x=xs(s,o);c=xs(xs(x,g),y);const v=Xl(c,u);u=eu(v,c,u),l=eu(v,Sl([h]),l)}return l}(jl(Ii(Jl(u),"int32"),Cn([]),256),a)}const h=n?ql(u,c):Xl(u,c);return Ii(xs(h,255),"int32")}});const ru=Tn({transform_:function(e,t,n="nearest",r="constant",i=0,a){const s=_n(e,"image","transform","float32"),o=_n(t,"transforms","transform","float32");x(4===s.rank,(()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`)),x(2===o.rank&&(o.shape[0]===s.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),x(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:s,transforms:o},u={interpolation:n,fillMode:r,fillValue:i,outputShape:a};return hn.runKernel("Transform",l,u)}});const iu=Tn({greaterEqual_:function(e,t){let n=_n(e,"a","greaterEqual","string_or_numeric"),r=_n(t,"b","greaterEqual","string_or_numeric");[n,r]=rn(n,r),ta(n.shape,r.shape);const i={a:n,b:r};return hn.runKernel("GreaterEqual",i)}});const au=Tn({logicalAnd_:function(e,t){const n=_n(e,"a","logicalAnd","bool"),r=_n(t,"b","logicalAnd","bool");ta(n.shape,r.shape);const i={a:n,b:r};return hn.runKernel("LogicalAnd",i)}});const su=Tn({stack_:function(e,t=0){const n=Sn(e,"tensors","stack","string_or_numeric");x(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&x(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,i={axis:t};return hn.runKernel("Pack",r,i)}});const ou=Tn({unstack_:function(e,t=0){const n=_n(e,"x","unstack","string_or_numeric");x(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},i={axis:t};return hn.runKernel("Unpack",r,i)}});const lu=Tn({bandPart_:function(e,t,n){x(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),x(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=_n(e,"a","bandPart");x(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const i=r.shape,[a,s]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=s))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${s}).`);t<0&&(t=a),n<0&&(n=s);const o=_s(tu(0,a,1,"int32"),[-1,1]),l=tu(0,s,1,"int32"),u=Zl(o,l),c=au(ql(u,ol(+t,"int32")),iu(u,ol(-n,"int32"))),h=tl([a,s],r.dtype);return _s(su(ou(_s(r,[-1,a,s])).map((e=>eu(c,e,h)))),i)}});var uu={};t(uu,"norm",(()=>yu));const cu=Tn({abs_:function(e){const t=_n(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return hn.runKernel("ComplexAbs",e)}{const e={x:t};return hn.runKernel("Abs",e)}}});const hu=Tn({max_:function(e,t=null,n=!1){const r={x:_n(e,"x","max")},i={reductionIndices:t,keepDims:n};return hn.runKernel("Max",r,i)}});const pu=Tn({min_:function(e,t=null,n=!1){const r={x:_n(e,"x","min")},i={axis:t,keepDims:n};return hn.runKernel("Min",r,i)}});const du=Tn({pow_:function(e,t){let n=_n(e,"base","pow"),r=_n(t,"exp","pow");[n,r]=rn(n,r);const i={a:n,b:r};return hn.runKernel("Pow",i)}});const fu=Tn({sqrt_:function(e){const t={x:_n(e,"x","sqrt","float32")};return hn.runKernel("Sqrt",t)}});const mu=Tn({square_:function(e){const t=_n(e,"x","square");return hn.runKernel("Square",{x:t},{})}});function gu(e,t,n=null){if(0===e.rank)return cu(e);if(1!==e.rank&&null===n)return gu(_s(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Es(cu(e),n);if(t===1/0)return hu(cu(e),n);if(t===-1/0)return pu(cu(e),n);if("euclidean"===t||2===t)return fu(Es(du(cu(e),ol(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return hu(Es(cu(e),n[0]),n[1]-1);if(t===1/0)return hu(Es(cu(e),n[1]),n[0]);if(t===-1/0)return pu(Es(cu(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return fu(Es(mu(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const yu=Tn({norm_:function(e,t="euclidean",n=null,r=!1){const i=gu(e=_n(e,"x","norm"),t,n);let a=i.shape;if(r){const t=R(n,e.shape);a=ja(i.shape,t)}return _s(i,a)}});const xu=Tn({squeeze_:function(e,t){const n=_n(e,"x","squeeze","string_or_numeric");return _s(n,L(n.shape,t).newShape)}});const vu=Tn({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,x(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)x(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=el(e,e.shape[0],0).map((e=>xu(e,[0])));x(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(hn.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=xs(Es(xs(n[r],e)),n[r]);e=Zl(e,t)}return Yl(e,yu(e,"euclidean"))})));return t?su(n,0):n}});function bu(e){se().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function wu(){return hn}function _u(e,t){return hn.tidy(e,t)}function Su(e){an(e).forEach((e=>e.dispose()))}function Tu(e){return hn.keep(e)}function Eu(){return hn.backendName}function Mu(e,t,n=1){return hn.registerBackend(e,t,n)}Ut=bu;const Cu=Tn({expandDims_:function(e,t=0){const n=_n(e,"x","expandDims","string_or_numeric");x(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},i={dim:t};return hn.runKernel("ExpandDims",r,i)}});const Iu=Tn({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const i=Ci([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)i.set(1,e,e);const s=_s(i.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return Ol(Cu(s,0),[n[0],1,1]);if(2===n.length)return Ol(Cu(Cu(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ol(Cu(Cu(Cu(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const ku=Tn({neg_:function(e){const t={x:_n(e,"x","neg")};return hn.runKernel("Neg",t)}});var Au={};t(Au,"transpose",(()=>Nu));const Nu=Tn({transpose_:function(e,t,n){const r=_n(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),x(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{x(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const i={x:r},a={perm:t};return"complex64"===r.dtype?_u((()=>{let e=Jo(r),t=Zo(r);return e=hn.runKernel("Transpose",{x:e},a),t=hn.runKernel("Transpose",{x:t},a),n&&(t=ku(t)),En(e,t)})):hn.runKernel("Transpose",i,a)}});function Ru(e,t=!1){return hn.tidy((()=>{x(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let i=Iu(n),a=ki(e);const s=kl([[1]],[1,1]);let o=ki(s);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=i;[o,a,i]=hn.tidy((()=>{const t=Qo(a,[e,e],[n-e,1]),l=yu(t),u=Qo(a,[e,e],[1,1]),c=eu(Xl(u,0),kl([[-1]]),kl([[1]])),h=Zl(u,xs(c,l)),p=Yl(t,h);o=1===p.shape[0]?ki(s):Yo([s,Qo(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=ku(Yl(bl(c,h),l)),f=Qo(a,[e,0],[n-e,r]),m=xs(d,o),g=Nu(o);if(0===e)a=Zl(f,bl(m,bl(g,f)));else{const t=Zl(f,bl(m,bl(g,f)));a=Yo([Qo(a,[0,0],[e,r]),t],0)}const y=Nu(m),x=Qo(i,[0,e],[n,i.shape[1]-e]);if(0===e)i=Zl(x,bl(bl(x,o),y));else{const t=Zl(x,bl(bl(x,o),y));i=Yo([Qo(i,[0,0],[n,e]),t],1)}return[o,a,i]})),Su([t,l,u])}return!t&&n>r&&(i=Qo(i,[0,0],[n,r]),a=Qo(a,[0,0],[r,r])),[i,a]}))}const Lu=Tn({qr_:function(e,t=!1){if(x(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Ru(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=ou(_s(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),i=[],a=[];r.forEach((e=>{const[n,r]=Ru(e,t);i.push(n),a.push(r)}));return[_s(su(i,0),e.shape),_s(su(a,0),e.shape)]}}});var Ou,Pu;(Pu=Ou||(Ou={}))[Pu.NONE=0]="NONE",Pu[Pu.MEAN=1]="MEAN",Pu[Pu.SUM=2]="SUM",Pu[Pu.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const Du=Tn({mean_:function(e,t=null,n=!1){const r={x:_n(e,"x","mean")},i={axis:t,keepDims:n};return hn.runKernel("Mean",r,i)}});const Fu=Tn({notEqual_:function(e,t){let n=_n(e,"a","notEqual","string_or_numeric"),r=_n(t,"b","notEqual","string_or_numeric");[n,r]=rn(n,r),ta(n.shape,r.shape);const i={a:n,b:r};return hn.runKernel("NotEqual",i)}});function $u(e,t="float32"){if("complex64"===t){const t=$u(e,"float32"),n=tl(e,"float32");return En(t,n)}const n=Z(_(e),t);return hn.makeTensor(n,e,t)}const Bu=Tn({computeWeightedLoss_:function(e,t,n=Ou.SUM_BY_NONZERO_WEIGHTS){const r=_n(e,"losses","computeWeightedLoss");let i=null;null!=t&&(i=_n(t,"weights","computeWeightedLoss"));const a=null==i?r:xs(r,i);if(n===Ou.NONE)return a;if(n===Ou.SUM)return Es(a);if(n===Ou.MEAN){if(null==i)return Du(a);{const e=r.size/i.size,t=Yl(Es(a),Es(i));return e>1?Yl(t,ol(e)):t}}if(n===Ou.SUM_BY_NONZERO_WEIGHTS){if(null==i)return Yl(Es(a),ol(r.size));{const e=xs(i,$u(r.shape)),t=Ii(Es(Fu(e,ol(0))),"float32");return Yl(Es(a),t)}}throw Error(`Unknown reduction: ${n}`)}});const zu=Tn({absoluteDifference_:function(e,t,n,r=Ou.SUM_BY_NONZERO_WEIGHTS){const i=_n(e,"labels","absoluteDifference"),a=_n(t,"predictions","absoluteDifference");let s=null;null!=n&&(s=_n(n,"weights","absoluteDifference")),v(i.shape,a.shape,"Error in absoluteDifference: ");const o=cu(Zl(i,a));return Bu(o,s,r)}});const Uu=Tn({cosineDistance_:function(e,t,n,r,i=Ou.SUM_BY_NONZERO_WEIGHTS){const a=_n(e,"labels","cosineDistance"),s=_n(t,"predictions","cosineDistance");let o=null;null!=r&&(o=_n(r,"weights","cosineDistance")),v(a.shape,s.shape,"Error in cosineDistance: ");const l=ol(1),u=Zl(l,Es(xs(a,s),n,!0));return Bu(u,o,i)}});const Vu=Tn({hingeLoss_:function(e,t,n,r=Ou.SUM_BY_NONZERO_WEIGHTS){let i=_n(e,"labels","hingeLoss");const a=_n(t,"predictions","hingeLoss");let s=null;null!=n&&(s=_n(n,"weights","hingeLoss")),v(i.shape,a.shape,"Error in hingeLoss: ");const o=ol(1);i=Zl(xs(ol(2),i),o);const l=bs(Zl(o,xs(i,a)));return Bu(l,s,r)}});const Wu=Tn({minimum_:function(e,t){let n=_n(e,"a","minimum"),r=_n(t,"b","minimum");[n,r]=rn(n,r),"bool"===n.dtype&&(n=Ii(n,"int32"),r=Ii(r,"int32")),ta(n.shape,r.shape);const i={a:n,b:r};return hn.runKernel("Minimum",i)}});const Hu=Tn({huberLoss_:function(e,t,n,r=1,i=Ou.SUM_BY_NONZERO_WEIGHTS){const a=_n(e,"labels","huberLoss"),s=_n(t,"predictions","huberLoss");let o=null;null!=n&&(o=_n(n,"weights","huberLoss")),v(a.shape,s.shape,"Error in huberLoss: ");const l=ol(r),u=cu(Zl(s,a)),c=Wu(u,l),h=Zl(u,c),p=hl(xs(ol(.5),mu(c)),xs(l,h));return Bu(p,o,i)}});const Gu=Tn({log_:function(e){const t={x:_n(e,"x","log","float32")};return hn.runKernel("Log",t)}});const ju=Tn({logLoss_:function(e,t,n,r=1e-7,i=Ou.SUM_BY_NONZERO_WEIGHTS){const a=_n(e,"labels","logLoss"),s=_n(t,"predictions","logLoss");let o=null;null!=n&&(o=_n(n,"weights","logLoss")),v(a.shape,s.shape,"Error in logLoss: ");const l=ol(1),u=ol(r),c=ku(xs(a,Gu(hl(s,u)))),h=xs(Zl(l,a),Gu(hl(Zl(l,s),u))),p=Zl(c,h);return Bu(p,o,i)}});const qu=Tn({squaredDifference_:function(e,t){let n=_n(e,"a","squaredDifference"),r=_n(t,"b","squaredDifference");[n,r]=rn(n,r),ta(n.shape,r.shape);const i={a:n,b:r};return hn.runKernel("SquaredDifference",i,{})}});const Xu=Tn({meanSquaredError_:function(e,t,n,r=Ou.SUM_BY_NONZERO_WEIGHTS){const i=_n(e,"labels","meanSquaredError"),a=_n(t,"predictions","meanSquaredError");let s=null;null!=n&&(s=_n(n,"weights","meanSquaredError")),v(i.shape,a.shape,"Error in meanSquaredError: ");const o=qu(i,a);return Bu(o,s,r)}});const Ku=Tn({exp_:function(e){const t={x:_n(e,"x","exp")};return hn.runKernel("Exp",t)}});const Yu=Tn({log1p_:function(e){const t={x:_n(e,"x","log1p")};return hn.runKernel("Log1p",t)}});const Zu=Tn({sigmoidCrossEntropy_:function(e,t,n,r=0,i=Ou.SUM_BY_NONZERO_WEIGHTS){let a=_n(e,"multiClassLabels","sigmoidCrossEntropy");const s=_n(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=_n(n,"weights","sigmoidCrossEntropy")),v(a.shape,s.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=ol(r),t=ol(1),n=ol(.5);a=hl(xs(a,Zl(t,e)),xs(n,e))}const l=function(e,t){const n=_n(e,"labels","sigmoidCrossEntropyWithLogits"),r=_n(t,"logits","sigmoidCrossEntropyWithLogits");v(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const i=bs(r),a=xs(r,n),s=Yu(Ku(ku(cu(r))));return hl(Zl(i,a),s)}(a,s);return Bu(l,o,i)}});const Ju=Tn({logSumExp_:function(e,t=null,n=!1){const r=_n(e,"x","logSumExp"),i=R(t,r.shape),a=hu(r,i,!0),s=Zl(r,a),o=Ku(s),l=Es(o,i),u=Gu(l),c=hl(_s(a,u.shape),u);if(n){const e=ja(c.shape,i);return _s(c,e)}return c}});const Qu=Tn({softmaxCrossEntropy_:function(e,t,n,r=0,i=Ou.SUM_BY_NONZERO_WEIGHTS){let a=_n(e,"onehotLabels","softmaxCrossEntropy");const s=_n(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=_n(n,"weights","softmaxCrossEntropy")),v(a.shape,s.shape,"Error in softmaxCrossEntropy: "),r>0){const e=ol(r),t=ol(1),n=ol(a.shape[1]);a=hl(xs(a,Zl(t,e)),Yl(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=cl(((e,t,r)=>{const i=Ju(t,[n],!0),a=Zl(Ii(t,"float32"),i);r([e,a]);const s=ku(xs(a,e));return{value:Es(s,[n]),gradFunc:(e,t)=>{const[r,i]=t,a=ja(e.shape,[n]);return[xs(_s(e,a),Zl(Ii(r,"float32"),Ku(i))),xs(_s(e,a),Zl(Ku(i),Ii(r,"float32")))]}}}));return r(e,t)}(a,s);return Bu(l,o,i)}});const ec=Tn({sparseFillEmptyRows_:function(e,t,n,r){const i=_n(e,"indices","sparseFillEmptyRows","int32"),a=_n(t,"values","sparseFillEmptyRows"),s=_n(n,"denseShape","sparseFillEmptyRows","int32"),o=_n(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==i.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${i.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${s.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:i,values:a,denseShape:s,defaultValue:o},u=hn.runKernel("SparseFillEmptyRows",l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});const tc=Tn({sparseReshape_:function(e,t,n){const r=_n(e,"inputIndices","sparseReshape","int32"),i=_n(t,"inputShape","sparseReshape","int32"),a=_n(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==i.rank)throw new Error(`Input shape should be Tensor1D but received shape ${i.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const s={inputIndices:r,inputShape:i,newShape:a},o=hn.runKernel("SparseReshape",s);return{outputIndices:o[0],outputShape:o[1]}}});const nc=Tn({sparseSegmentMean_:function(e,t,n){const r=_n(e,"data","sparseSegmentMean"),i=_n(t,"indices","sparseSegmentMean","int32"),a=_n(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${i.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const s={data:r,indices:i,segmentIds:a};return hn.runKernel("SparseSegmentMean",s)}});const rc=Tn({sparseSegmentSum_:function(e,t,n){const r=_n(e,"data","sparseSegmentSum"),i=_n(t,"indices","sparseSegmentSum","int32"),a=_n(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${i.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const s={data:r,indices:i,segmentIds:a};return hn.runKernel("SparseSegmentSum",s)}});const ic=Tn({stringNGrams_:function(e,t,n,r,i,a,s,o){const l=_n(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=_n(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:i,rightPad:a,padWidth:s,preserveShortSequences:o},h={data:l,dataSplits:u},p=hn.runKernel("StringNGrams",h,c);return{nGrams:p[0],nGramsSplits:p[1]}}});const ac=Tn({stringSplit_:function(e,t,n=!0){const r=_n(e,"input","stringSplit","string"),i=_n(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==i.rank)throw new Error(`Delimiter should be a scalar but received shape ${i.shape}`);const a={skipEmpty:n},s={input:r,delimiter:i},o=hn.runKernel("StringSplit",s,a);return{indices:o[0],values:o[1],shape:o[2]}}});const sc=Tn({stringToHashBucketFast_:function(e,t){const n=_n(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const i={input:n};return hn.runKernel("StringToHashBucketFast",i,r)}});const oc=Tn({acos_:function(e){const t={x:_n(e,"x","acos")};return hn.runKernel("Acos",t)}});const lc=Tn({acosh_:function(e){const t={x:_n(e,"x","acosh")};return hn.runKernel("Acosh",t)}});const uc=Tn({addN_:function(e){x(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),x(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>_n(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!T(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return hn.runKernel("AddN",r)}});const cc=Tn({all_:function(e,t=null,n=!1){const r={x:_n(e,"x","all","bool")},i={axis:t,keepDims:n};return hn.runKernel("All",r,i)}});const hc=Tn({any_:function(e,t=null,n=!1){const r={x:_n(e,"x","any","bool")},i={axis:t,keepDims:n};return hn.runKernel("Any",r,i)}});const pc=Tn({argMax_:function(e,t=0){const n={x:_n(e,"x","argMax")},r={axis:t};return hn.runKernel("ArgMax",n,r)}});const dc=Tn({argMin_:function(e,t=0){const n={x:_n(e,"x","argMin")},r={axis:t};return hn.runKernel("ArgMin",n,r)}});const fc=Tn({asin_:function(e){const t={x:_n(e,"x","asin")};return hn.runKernel("Asin",t)}});const mc=Tn({asinh_:function(e){const t={x:_n(e,"x","asinh")};return hn.runKernel("Asinh",t)}});const gc=Tn({atan_:function(e){const t={x:_n(e,"x","atan")};return hn.runKernel("Atan",t)}});const yc=Tn({atan2_:function(e,t){let n=_n(e,"a","atan2"),r=_n(t,"b","atan2");[n,r]=rn(n,r);const i={a:n,b:r};return hn.runKernel("Atan2",i)}});const xc=Tn({atanh_:function(e){const t={x:_n(e,"x","atanh")};return hn.runKernel("Atanh",t)}});const vc=Tn({avgPool_:function(e,t,n,r,i){const a=_n(e,"x","avgPool","float32");x(ps(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let s=a,o=!1;3===a.rank&&(o=!0,s=_s(a,[1,a.shape[0],a.shape[1],a.shape[2]])),x(4===s.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${s.rank}.`)),fs("avgPool",r,i);const l={x:s},u={filterSize:t,strides:n,pad:r,dimRoundingMode:i};let c=hn.runKernel("AvgPool",l,u);return c=Ii(c,a.dtype),o?_s(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const bc=Tn({avgPool3d_:function(e,t,n,r,i,a="NDHWC"){const s=_n(e,"x","avgPool3d","float32");let o=s,l=!1;4===s.rank&&(l=!0,o=_s(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),x(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),x("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),fs("avgPool3d",r,i);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:i,dataFormat:a};let h=hn.runKernel("AvgPool3D",u,c);return h=Ii(h,o.dtype),l?_s(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const wc=Tn({tanh_:function(e){const t={x:_n(e,"x","tanh","float32")};return hn.runKernel("Tanh",t)}});const _c=Tn({basicLSTMCell_:function(e,t,n,r,i,a){const s=_n(e,"forgetBias","basicLSTMCell"),o=_n(t,"lstmKernel","basicLSTMCell"),l=_n(n,"lstmBias","basicLSTMCell"),u=_n(r,"data","basicLSTMCell"),c=_n(i,"c","basicLSTMCell"),h=_n(a,"h","basicLSTMCell"),p=Yo([u,h],1),d=bl(p,o),f=hl(d,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],x=Qo(f,[0,0],y),v=Qo(f,[0,g],y),b=Qo(f,[0,2*g],y),w=Qo(f,[0,3*g],y),_=hl(xs(Ss(x),wc(v)),xs(c,Ss(hl(s,b))));return[_,xs(wc(_),Ss(w))]}});const Sc=Tn({batchToSpaceND_:function(e,t,n){const r=_n(e,"x","batchToSpaceND"),i=t.reduce(((e,t)=>e*t));x(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),x(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),x(r.shape[0]%i==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${i}`));const a={x:r},s={blockShape:t,crops:n};return hn.runKernel("BatchToSpaceND",a,s)}});function Tc(e){let t;return t=0===e.rank||1===e.rank?_s(e,[1,1,1,e.size]):2===e.rank?_s(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?_s(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}const Ec=Tn({batchNorm_:function(e,t,n,r,i,a){null==a&&(a=.001);const s=_n(e,"x","batchNorm"),o=_n(t,"mean","batchNorm"),l=_n(n,"variance","batchNorm");let u,c;null!=i&&(u=_n(i,"scale","batchNorm")),null!=r&&(c=_n(r,"offset","batchNorm")),x(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),x(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),x(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:Tc(s),scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:a},d=hn.runKernel("FusedBatchNorm",h,p);return _s(d,s.shape)}});const Mc=Tn({batchNorm2d_:function(e,t,n,r,i,a){const s=_n(e,"x","batchNorm"),o=_n(t,"mean","batchNorm"),l=_n(n,"variance","batchNorm");let u,c;return null!=i&&(u=_n(i,"scale","batchNorm")),null!=r&&(c=_n(r,"offset","batchNorm")),x(2===s.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${s.rank}.`)),x(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),x(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&x(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&x(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Ec(s,o,l,c,u,a)}});const Cc=Tn({batchNorm3d_:function(e,t,n,r,i,a){const s=_n(e,"x","batchNorm"),o=_n(t,"mean","batchNorm"),l=_n(n,"variance","batchNorm");let u,c;return null!=i&&(u=_n(i,"scale","batchNorm")),null!=r&&(c=_n(r,"offset","batchNorm")),x(3===s.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${s.rank}.`)),x(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),x(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&x(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&x(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Ec(s,o,l,c,u,a)}});const Ic=Tn({batchNorm4d_:function(e,t,n,r,i,a){const s=_n(e,"x","batchNorm"),o=_n(t,"mean","batchNorm"),l=_n(n,"variance","batchNorm");let u,c;return null!=i&&(u=_n(i,"scale","batchNorm")),null!=r&&(c=_n(r,"offset","batchNorm")),x(4===s.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${s.rank}.`)),x(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),x(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&x(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&x(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Ec(s,o,l,c,u,a)}});const kc=Tn({broadcastArgs_:function(e,t){const n=_n(e,"s0","broadcastArgs","int32"),r=_n(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const i={s0:n,s1:r};return hn.runKernel("BroadcastArgs",i)}});const Ac=Tn({ceil_:function(e){const t={x:_n(e,"x","ceil","float32")};return hn.runKernel("Ceil",t)}});const Nc=Tn({clipByValue_:function(e,t,n){const r=_n(e,"x","clipByValue");x(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const i={x:r},a={clipValueMin:t,clipValueMax:n};return hn.runKernel("ClipByValue",i,a)}});const Rc=Tn({concat1d_:function(e){return Yo(e,0)}});const Lc=Tn({concat2d_:function(e,t){return Yo(e,t)}});const Oc=Tn({concat3d_:function(e,t){return Yo(e,t)}});const Pc=Tn({concat4d_:function(e,t){return Yo(e,t)}});const Dc=Tn({conv1d_:function(e,t,n,r,i="NWC",a=1,s){const o=_n(e,"x","conv1d"),l=_n(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=_s(o,[1,o.shape[0],o.shape[1]])),x(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),x(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),fs("conv1d",r,s),x(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),x(ps(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),x("NWC"===i,(()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`));const h=_s(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=_s(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=pl(p,h,[1,n],r,"NHWC",[1,a],s);return _s(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}});const Fc=Tn({conv2dTranspose_:function(e,t,n,r,i,a){const s=_n(e,"x","conv2dTranspose"),o=_n(t,"filter","conv2dTranspose");return fl(n,s,o,r,i,"NHWC",a)}});const $c=Tn({conv3d_:function(e,t,n,r,i="NDHWC",a=[1,1,1]){const s=_n(e,"x","conv3d"),o=_n(t,"filter","conv3d");let l=s,u=!1;4===s.rank&&(u=!0,l=_s(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),x(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),x(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),x(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),x(ps(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),x("NDHWC"===i,(()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:i,dilations:a},p=hn.runKernel("Conv3D",c,h);return u?_s(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const Bc=Tn({conv3DBackpropInput_:function(e,t,n,r,i){x(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,s=t,o=!1;4===t.rank&&(o=!0,s=_s(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=s.shape[4];x(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),x(5===s.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`)),x(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),x(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),x(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:s,filter:n},h={pad:i,strides:r,inputShape:a},p=hn.runKernel("Conv3DBackpropInputV2",c,h);return o?_s(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const zc=Tn({conv3dTranspose_:function(e,t,n,r,i){const a=_n(e,"x","conv3dTranspose"),s=_n(t,"filter","conv3dTranspose");return Bc(n,a,s,r,i)}});const Uc=Tn({cos_:function(e){const t={x:_n(e,"x","cos","float32")};return hn.runKernel("Cos",t)}});const Vc=Tn({cosh_:function(e){const t={x:_n(e,"x","cosh","float32")};return hn.runKernel("Cosh",t)}});const Wc=Tn({cumprod_:function(e,t=0,n=!1,r=!1){const i={x:_n(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:r};return hn.runKernel("Cumprod",i,a)}});const Hc=Tn({cumsum_:function(e,t=0,n=!1,r=!1){const i={x:_n(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return hn.runKernel("Cumsum",i,a)}});const Gc=Tn({denseBincount_:function(e,t,n,r=!1){const i=_n(e,"x","denseBincount"),a=_n(t,"weights","denseBincount");x("int32"===i.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${i.dtype}`)),x(i.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${i.rank}.`)),x(n>=0,(()=>`size must be non-negative, but got ${n}.`)),x(a.size===i.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${i.shape}, weights shape: ${a.shape}.`));const s={x:i,weights:a},o={size:n,binaryOutput:r};return hn.runKernel("DenseBincount",s,o)}});const jc=Tn({depthToSpace_:function(e,t,n="NHWC"){const r=_n(e,"x","depthToSpace","float32"),i="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],s="NHWC"===n?r.shape[3]:r.shape[1];x(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),x(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),x(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),x(s%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return hn.runKernel("DepthToSpace",o,l)}});const qc=Tn({diag_:function(e){const t={x:_n(e,"x","diag")};return hn.runKernel("Diag",t)}});const Xc=Tn({dilation2d_:function(e,t,n,r,i=[1,1],a="NHWC"){const s=_n(e,"x","dilation2d"),o=_n(t,"filter","dilation2d");x(3===s.rank||4===s.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`)),x(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),x("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=s,u=!1;3===s.rank&&(l=_s(s,[1,s.shape[0],s.shape[1],s.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:i},p=hn.runKernel("Dilation2D",c,h);return u?_s(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const Kc=Tn({equal_:function(e,t){let n=_n(e,"a","equal","string_or_numeric"),r=_n(t,"b","equal","string_or_numeric");[n,r]=rn(n,r),ta(n.shape,r.shape);const i={a:n,b:r};return hn.runKernel("Equal",i)}});const Yc=Tn({divNoNan_:function(e,t){let n=_n(e,"a","div"),r=_n(t,"b","div");[n,r]=rn(n,r);const i=Yl(n,r),a=nl(i),s=Kc(r,a);return eu(s,a,i)}});const Zc=Tn({dot_:function(e,t){const n=_n(e,"t1","dot"),r=_n(t,"t2","dot");x(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const i=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(x(i===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${a}.`)),1===n.rank&&1===r.rank){const e=_s(n,[1,-1]),t=_s(r,[-1,1]),i=bl(e,t);return _s(i,[])}if(1===n.rank&&2===r.rank){const e=_s(n,[1,-1]),t=_s(r,[r.shape[0],r.shape[1]]),i=bl(e,t);return _s(i,[i.size])}if(2===n.rank&&1===r.rank){const e=_s(r,[-1,1]),t=bl(n,e);return _s(t,[t.size])}{const e=_s(r,[r.shape[0],r.shape[1]]);return bl(n,e)}}});const Jc=Tn({einsum_:function(e,...t){const n=t.map(((e,t)=>_n(e,`tensors${t}`,"einsum"))),r={equation:e};return hn.runKernel("Einsum",n,r)}});const Qc=Tn({erf_:function(e){let t=_n(e,"x","erf");x("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ii(t,"float32"));const n={x:t};return hn.runKernel("Erf",n)}});const eh=Tn({euclideanNorm_:function(e,t=null,n=!1){return yu(e,"euclidean",t,n)}});const th=Tn({expm1_:function(e){const t={x:_n(e,"x","expm1")};return hn.runKernel("Expm1",t)}});const nh=Tn({floor_:function(e){const t={x:_n(e,"x","floor","float32")};return hn.runKernel("Floor",t)}});const rh=Tn({gather_:function(e,t,n=0,r=0){const i={x:_n(e,"x","gather"),indices:_n(t,"indices","gather","int32")},a={axis:n,batchDims:r};return hn.runKernel("GatherV2",i,a)}});const ih=Tn({isFinite_:function(e){const t={x:_n(e,"x","isFinite")};return hn.runKernel("IsFinite",t)}});const ah=Tn({isInf_:function(e){const t={x:_n(e,"x","isInf")};return hn.runKernel("IsInf",t)}});const sh=Tn({isNaN_:function(e){const t={x:_n(e,"x","isNaN")};return hn.runKernel("IsNan",t)}});const oh=Tn({less_:function(e,t){let n=_n(e,"a","less","string_or_numeric"),r=_n(t,"b","less","string_or_numeric");[n,r]=rn(n,r),ta(n.shape,r.shape);const i={a:n,b:r};return hn.runKernel("Less",i)}});function lh(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return hn.runKernel("LinSpace",{},r)}const uh=Tn({localResponseNormalization_:function(e,t=5,n=1,r=1,i=.5){const a=_n(e,"x","localResponseNormalization");x(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),x(E(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let s=a,o=!1;3===a.rank&&(o=!0,s=_s(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:s},u={depthRadius:t,bias:n,alpha:r,beta:i},c=hn.runKernel("LRN",l,u);return o?_s(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const ch=Tn({softplus_:function(e){const t={x:_n(e,"x","softplus")};return hn.runKernel("Softplus",t)}});const hh=Tn({logSigmoid_:function(e){const t=_n(e,"x","logSigmoid"),n=cl((e=>({value:ku(ch(ku(e))),gradFunc:t=>xs(t,Ss(ku(e)))})));return n(t)}});const ph=Tn({logSoftmax_:function(e,t=-1){const n=_n(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=cl(((e,n)=>{const r=hu(e,t,!0),i=Zl(e,r),a=Zl(Ii(i,"float32"),Gu(Es(Ku(i),t,!0)));n([a]);return{value:a,gradFunc:(e,n)=>{const[r]=n,i=Ku(r);return Zl(e,xs(Es(e,t,!0),i))}}}));return r(n)}});const dh=Tn({logicalNot_:function(e){const t={x:_n(e,"x","logicalNot","bool")};return hn.runKernel("LogicalNot",t)}});const fh=Tn({logicalOr_:function(e,t){const n=_n(e,"a","logicalOr","bool"),r=_n(t,"b","logicalOr","bool");ta(n.shape,r.shape);const i={a:n,b:r};return hn.runKernel("LogicalOr",i)}});const mh=Tn({logicalXor_:function(e,t){const n=_n(e,"a","logicalXor","bool"),r=_n(t,"b","logicalXor","bool");return ta(n.shape,r.shape),au(fh(e,t),dh(au(e,t)))}});var gh={};t(gh,"searchSorted",(()=>yh));const yh=Tn({searchSorted_:function(e,t,n="left"){const r=_n(e,"sortedSequence","searchSorted"),i=_n(t,"values","searchSorted"),a=r.shape[r.shape.length-1],s=i.shape[i.shape.length-1],o=_s(r,[-1,a]),l=_s(i,[-1,s]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(_(l.shape)>=2147483648)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=2147483648)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:n};return hn.runKernel("SearchSorted",u,c)}});function xh(e,t){return yh(e,t,"left")}const vh=Tn({maxPool_:function(e,t,n,r,i){const a=_n(e,"x","maxPool");let s=a,o=!1;3===a.rank&&(o=!0,s=_s(a,[1,a.shape[0],a.shape[1],a.shape[2]])),x(4===s.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.rank}.`)),x(ps(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),fs("maxPool",r,i);const l={x:s},u={filterSize:t,strides:n,pad:r,dimRoundingMode:i},c=hn.runKernel("MaxPool",l,u);return o?_s(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const bh=Tn({maxPool3d_:function(e,t=[1,1,1],n,r,i,a="NDHWC"){const s=_n(e,"x","maxPool3d");let o=s,l=!1;4===s.rank&&(l=!0,o=_s(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),x(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),x("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),fs("maxPool3d",r,i);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:i,dataFormat:a},h=hn.runKernel("MaxPool3D",u,c);return l?_s(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const wh=Tn({maxPoolWithArgmax_:function(e,t,n,r,i=!1){const a={x:_n(e,"x","maxPoolWithArgmax")},s={filterSize:t,strides:n,pad:r,includeBatchInIndex:i},o=hn.runKernel("MaxPoolWithArgmax",a,s);return{result:o[0],indexes:o[1]}}});const _h=Tn({maximum_:function(e,t){let n=_n(e,"a","maximum"),r=_n(t,"b","maximum");[n,r]=rn(n,r),"bool"===n.dtype&&(n=Ii(n,"int32"),r=Ii(r,"int32")),ta(n.shape,r.shape);const i={a:n,b:r};return hn.runKernel("Maximum",i)}});function Sh(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=_n(e,"x","meshgrid",e instanceof Vt?e.dtype:"float32");if(void 0===t)return[r];let i=_n(t,"y","meshgrid",t instanceof Vt?t.dtype:"float32");const a=_(r.shape),s=_(i.shape);return"xy"===n?(r=_s(r,[1,-1]),i=_s(i,[-1,1]),[bl($u([s,1],r.dtype),r),bl(i,$u([1,a],i.dtype))]):(r=_s(r,[-1,1]),i=_s(i,[1,-1]),[bl(r,$u([1,s],r.dtype)),bl($u([a,1],i.dtype),i)])}const Th=Tn({mirrorPad_:function(e,t,n){x("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=_n(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");x(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const i="reflect"===n?1:0;for(let e=0;e<r.rank;e++)x(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),x(t[e][0]>=0&&t[e][0]<=r.shape[e]-i&&t[e][1]>=0&&t[e][1]<=r.shape[e]-i,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-i} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},s={x:r};return hn.runKernel("MirrorPad",s,a)}});const Eh=Tn({mod_:function(e,t){let n=_n(e,"a","mod"),r=_n(t,"b","mod");[n,r]=rn(n,r);const i={a:n,b:r};return hn.runKernel("Mod",i)}});const Mh=Tn({moments_:function(e,t=null,n=!1){const r=R(t,(e=_n(e,"x","moments")).shape),i=Du(e,r,n);let a=i.shape;n||(a=ja(i.shape,r));const s=mu(Zl(Ii(e,"float32"),_s(i,a)));return{mean:i,variance:Du(s,r,n)}}});const Ch=Tn({multiRNNCell_:function(e,t,n,r){const i=_n(t,"data","multiRNNCell"),a=Sn(n,"c","multiRNNCell"),s=Sn(r,"h","multiRNNCell");let o=i;const l=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],s[t]);l.push(n[0]),l.push(n[1]),o=n[1]}const u=[],c=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),c.push(l[e+1]);return[u,c]}});const Ih=Tn({multinomial_:function(e,t,n,r=!1){const i=_n(e,"logits","multinomial"),a=i.size,s=i.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(s>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${s}`);n=n||Math.random();const o={logits:1===s?_s(i,[1,-1]):i},l={numSamples:t,seed:n,normalized:r},u=hn.runKernel("Multinomial",o,l);return 1===s?_s(u,[u.size]):u}});const kh=Tn({oneHot_:function(e,t,n=1,r=0,i="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:_n(e,"indices","oneHot","int32")},s={dtype:i,depth:t,onValue:n,offValue:r};return hn.runKernel("OneHot",a,s)}});const Ah=Tn({onesLike_:function(e){const t={x:_n(e,"x","onesLike")};return hn.runKernel("OnesLike",t)}});const Nh=Tn({outerProduct_:function(e,t){const n=_n(e,"v1","outerProduct"),r=_n(t,"v2","outerProduct");x(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const i=_s(n,[-1,1]),a=_s(r,[1,-1]);return bl(i,a)}});const Rh=Tn({pad_:function(e,t,n=0){const r=_n(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},a={x:r};return hn.runKernel("PadV2",a,i)}});const Lh=Tn({pad1d_:function(e,t,n=0){return x(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Rh(e,[t],n)}});const Oh=Tn({pad2d_:function(e,t,n=0){return x(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Rh(e,t,n)}});const Ph=Tn({pad3d_:function(e,t,n=0){return x(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Rh(e,t,n)}});const Dh=Tn({pad4d_:function(e,t,n=0){return x(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Rh(e,t,n)}});const Fh=Tn({spaceToBatchND_:function(e,t,n){const r=_n(e,"x","spaceToBatchND");x(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),x(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),x(r.shape.reduce(((e,r,i)=>i>0&&i<=t.length?e&&(r+n[i-1][0]+n[i-1][1])%t[i-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const i={x:r},a={blockShape:t,paddings:n};return hn.runKernel("SpaceToBatchND",i,a)}});const $h=Tn({pool_:function(e,t,n,r,i,a,s){null==i&&(i=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=_n(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=_s(o,[1,o.shape[0],o.shape[1],o.shape[2]])),x(ps(a,i),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${i}'`));const c=ns(l.shape,t,a,i,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),i=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],i[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),i=n.map((e=>e[1])),a=e.concat(r,i),s=t.map(((e,t)=>(e-a[t]%e)%e)),o=i.map(((e,t)=>e+s[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,s[t]]));return[l,u]}([c.inHeight,c.inWidth],h,p),g=d?r:"valid",y=d?l:Fh(l,h,f),v=("avg"===n?()=>vc(y,t,a,g,s):()=>vh(y,t,a,g,s))(),b=d?v:Sc(v,h,m);return u?_s(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});const Bh=Tn({prod_:function(e,t=null,n=!1){let r=_n(e,"x","prod");"bool"===r.dtype&&(r=Ii(r,"int32"));const i={x:r},a={axis:t,keepDims:n};return hn.runKernel("Prod",i,a)}});const zh=Tn({raggedTensorToTensor_:function(e,t,n,r,i){const a=_n(e,"shape","raggedTensorToTensor","int32"),s=_n(t,"values","raggedTensorToTensor"),o={shape:a,values:s,defaultValue:_n(n,"defaultValue","raggedTensorToTensor",s.dtype),rowPartitionTensors:r.map(((e,t)=>_n(e,`tensors${t}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:i};return hn.runKernel("RaggedTensorToTensor",o,l)}});const Uh=Tn({rand_:function(e,t,n){const r=_(e);let i=null;if(null==n||"float32"===n)i=new Float32Array(r);else if("int32"===n)i=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);i=new Uint8Array(r)}for(let e=0;e<r;e++)i[e]=t();return hn.makeTensor(i,e,n)}});var Vh={},Wh=a("cmoHh"),Hh=a("euRi5"),Gh=a("hDsEw"),jh=a("3J2Zm"),qh=a("6Px8M"),Xh=a("lDm0S"),Kh={};!function(e,t,n){var r,i=256,s=n.pow(i,6),o=n.pow(2,52),l=2*o,u=255;function c(a,u,c){var g=[],y=f(d((u=1==u?{entropy:!0}:u||{}).entropy?[a,m(t)]:null==a?function(){try{var n;return r&&(n=r.randomBytes)?n=n(i):(n=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(n)),m(n)}catch(n){var a=e.navigator,s=a&&a.plugins;return[+new Date,e,s,e.screen,m(t)]}}():a,3),g),x=new h(g),v=function(){for(var e=x.g(6),t=s,n=0;e<o;)e=(e+n)*i,t*=i,n=x.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|x.g(4)},v.quick=function(){return x.g(4)/4294967296},v.double=v,f(m(x.S),t),(u.pass||c||function(e,t,r,i){return i&&(i.S&&p(i,x),e.state=function(){return p(x,{})}),r?(n.random=e,t):e})(v,y,"global"in u?u.global:this==n,u.state)}function h(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=u&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=u&a+1],n=n*i+o[u&(o[a]=o[s=u&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function d(e,t){var n,r=[],i=typeof e;if(t&&"object"==i)for(n in e)try{r.push(d(e[n],t-1))}catch(e){}return r.length?r:"string"==i?e:e+"\0"}function f(e,t){for(var n,r=e+"",i=0;i<r.length;)t[u&i]=u&(n^=19*t[u&i])+r.charCodeAt(i++);return m(t)}function m(e){return String.fromCharCode.apply(0,e)}if(f(n.random(),t),Kh){Kh=c;try{r=a("kjyEk")}catch(e){}}else"function"==typeof define&&define.amd?define((function(){return c})):n.seedrandom=c}("undefined"!=typeof self?self:Kh,[],Math),Kh.alea=Wh,Kh.xor128=Hh,Kh.xorwow=Gh,Kh.xorshift7=jh,Kh.xor4096=qh,Kh.tychei=Xh,Vh=Kh;class Yh{constructor(e,t,n,r,i){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=i||Math.random();this.random=Vh.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,i,a;do{r=2*this.random()-1,i=2*this.random()-1,a=r*r+i*i}while(a>=1||0===a);const s=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*s,t=this.mean+this.stdDev*i*s,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Zh{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const i=r||Math.random();this.randu=Vh.alea(i.toString()),this.randn=new Yh(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,i,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),i=this.randu(),i<t||Math.log(i)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Jh{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Vh.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Qh=Tn({randomGamma_:function(e,t,n=1,r="float32",i){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new Zh(t,n,r,i),s=Ci(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=a.nextValue();return s.toTensor()}});const ep=Tn({randomNormal_:function(e,t=0,n=1,r,i){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Yh(t,n,r,!1,i),s=Ci(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=a.nextValue();return s.toTensor()}});const tp=Tn({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return ep(e,0,1,t,n)}});const np=Tn({randomUniform_:function(e,t=0,n=1,r="float32",i){const a=Ci(e,r),s=new Jh(t,n,null,i);for(let e=0;e<a.values.length;e++)a.values[e]=s.nextValue();return a.toTensor()}});const rp=Tn({reciprocal_:function(e){const t={x:_n(e,"x","reciprocal")};return hn.runKernel("Reciprocal",t)}});const ip=Tn({reverse1d_:function(e){const t=_n(e,"x","reverse");return x(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),sl(t,0)}});const ap=Tn({reverse2d_:function(e,t){const n=_n(e,"x","reverse");return x(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),sl(n,t)}});const sp=Tn({reverse3d_:function(e,t){const n=_n(e,"x","reverse");return x(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),sl(n,t)}});const op=Tn({reverse4d_:function(e,t){const n=_n(e,"x","reverse");return x(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),sl(n,t)}});const lp=Tn({rsqrt_:function(e){const t={x:_n(e,"x","rsqrt","float32")};return hn.runKernel("Rsqrt",t)}});const up=Tn({selu_:function(e){const t={x:_n(e,"x","selu")};return hn.runKernel("Selu",t)}});const cp=Tn({separableConv2d_:function(e,t,n,r,i,a=[1,1],s="NHWC"){const o=_n(e,"x","separableConv2d"),l=_n(t,"depthwiseFilter","separableConv2d"),u=_n(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=_s(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");x(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),x(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),x(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),x(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),x(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],d=l.shape[3];x(u.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${u.shape[2]}.`));const f=gl(c,l,r,i,s,a),m=pl(f,u,1,"valid",s);return h?_s(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const hp=async function(e,t){const n=_n(e,"x","setdiff1d"),r=_n(t,"y","setdiff1d");x(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),x(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),x(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const i=await n.data(),a=await r.data(),s=new Set(a);let o=0;for(let e=0;e<i.length;e++)s.has(i[e])||o++;const l=new $t([o],n.dtype),u=new $t([o],"int32");for(let e=0,t=0;e<i.length;e++)s.has(i[e])||(l.values[t]=i[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]};const pp=Tn({sign_:function(e){const t={x:_n(e,"x","sign")};return hn.runKernel("Sign",t)}});const dp=Tn({sin_:function(e){const t={x:_n(e,"x","sin","float32")};return hn.runKernel("Sin",t)}});const fp=Tn({sinh_:function(e){const t={x:_n(e,"x","sinh")};return hn.runKernel("Sinh",t)}});const mp=Tn({slice1d_:function(e,t,n){const r=_n(e,"x","slice1d");return x(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Qo(r,[t],[n])}});const gp=Tn({slice2d_:function(e,t,n){const r=_n(e,"x","slice2d");return x(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Qo(r,t,n)}});const yp=Tn({slice3d_:function(e,t,n){const r=_n(e,"x","slice3d");return x(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Qo(r,t,n)}});const xp=Tn({slice4d_:function(e,t,n){const r=_n(e,"x","slice4d");return x(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Qo(r,t,n)}});const vp=Tn({softmax_:function(e,t=-1){const n=_n(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},i={dim:t};return hn.runKernel("Softmax",r,i)}});const bp=Tn({stridedSlice_:function(e,t,n,r,i=0,a=0,s=0,o=0,l=0){const u={x:_n(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:i,endMask:a,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:l};return hn.runKernel("StridedSlice",u,c)}});const wp=Tn({tan_:function(e){const t={x:_n(e,"x","tan","float32")};return hn.runKernel("Tan",t)}});function _p(e,t,n){if(b(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=vn(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Mn(e,t,r,n)}function Sp(e,t,n){if(b(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=vn(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Mn(e,t,r,n)}function Tp(e,t,n){if(b(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=vn(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Mn(e,t=t||r,r,n)}const Ep=Tn({topk_:function(e,t=1,n=!0){const r=_n(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${t}`);const a={x:r},s={k:t,sorted:n},[o,l]=hn.runKernel("TopK",a,s);return{values:o,indices:l}}});const Mp=Tn({truncatedNormal_:function(e,t=0,n=1,r,i){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Yh(t,n,r,!0,i),s=Ci(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=a.nextValue();return s.toTensor()}});const Cp=Tn({unique_:function(e,t=0){const n=_n(e,"x","unique","string_or_numeric");x(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},i={axis:t},[a,s]=hn.runKernel("Unique",r,i);return{values:a,indices:s}}});const Ip=Tn({unsortedSegmentSum_:function(e,t,n){const r=_n(e,"x","unsortedSegmentSum"),i=_n(t,"segmentIds","unsortedSegmentSum","int32");x(E(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:i},s={numSegments:n};return hn.runKernel("UnsortedSegmentSum",a,s)}});function kp(e,t){return yh(e,t,"right")}function Ap(e,t=!0,n,r){return hn.makeVariable(e,t,n,r)}const Np=async function(e){const t=_n(e,"condition","whereAsync","bool"),n=await t.data(),r=Xo(t.shape,n);return e!==t&&t.dispose(),r};var Rp={};t(Rp,"booleanMaskAsync",(()=>Lp));const Lp=async function(e,t,n){const r=_n(e,"tensor","boolMask"),i=_n(t,"mask","boolMask","bool"),a=null==n?0:n,s=i.rank,o=r.shape;x(s>0,(()=>"mask cannot be scalar")),v(o.slice(a,a+s),i.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=a;e<a+s;e++)l*=o[e];const u=o.slice(0,a).concat([l],o.slice(a+s)),c=_s(r,u),h=_s(i,[-1]),p=await Np(h),d=xu(p,[1]),f=rh(c,d,a);return e!==r&&r.dispose(),t!==i&&i.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f};var Op={};t(Op,"movingAverage",(()=>Pp));const Pp=Tn({movingAverage_:function(e,t,n,r,i=!0){const a=_n(e,"v","movingAverage"),s=_n(t,"x","movingAverage"),o=_n(n,"decay","movingAverage");var l,u;u=s,x((l=a).dtype===u.dtype,(()=>`The dtypes of the first(${l.dtype}) and second(${u.dtype}) input must match`)),x(T(a.shape,s.shape),(()=>"Shape mismatch in v and x"));const c=ol(1),h=Zl(c,o);let p=xs(Zl(s,a),h);if(i){x(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=_n(r,"step","movingAverage");p=Yl(p,Zl(c,du(o,e)))}return hl(a,p)}});var Dp={};t(Dp,"scatterND",(()=>Fp));const Fp=Tn({scatterND_:function(e,t,n){const r=_n(e,"indices","scatterND","int32"),i=_n(t,"updates","scatterND");fa(i,r,n);const a={indices:r,updates:i},s={shape:n};return hn.runKernel("ScatterNd",a,s)}});var $p={};t($p,"sparseToDense",(()=>Bp));const Bp=Tn({sparseToDense_:function(e,t,n,r=0){const i=_n(e,"sparseIndices","sparseToDense","int32"),a=_n(t,"sparseValues","sparseToDense","string_or_numeric"),s=_n(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const i=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const s=t.size;if(0!==t.rank&&(1!==t.rank||s!==i))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${i}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(i,a,n,s);const o={sparseIndices:i,sparseValues:a,defaultValue:s},l={outputShape:n};return hn.runKernel("SparseToDense",o,l)}});var zp={};t(zp,"gatherND",(()=>Up));const Up=Tn({gatherND_:function(e,t){const n=_n(t,"indices","gatherND","int32"),r={params:_n(e,"x","gatherND","string_or_numeric"),indices:n};return hn.runKernel("GatherNd",r)}});var Vp={};function Wp(e,t){if(null==t)return e.shape.slice();if(T(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}t(Vp,"dropout",(()=>Hp));const Hp=Tn({dropout_:function(e,t,n,r){const i=_n(e,"x","dropout");if(x("float32"===i.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`)),x(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Vt?i.clone():i;const a=Wp(i,n),s=1-t,o=Yl(nh(hl(np(a,0,1,"float32",r),s)),s);return xs(i,o)}});var Gp={};t(Gp,"inTopKAsync",(()=>jp));const jp=async function(e,t,n=1){const r=_n(e,"predictions","inTopK"),i=_n(t,"targets","inTopK");x(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),x(r.rank-1===i.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${i.rank}`)),v(r.shape.slice(0,r.shape.length-1),i.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];x(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const s=await r.data(),o=await i.data(),[l,u]=[s.length/a,a],c=O("bool",l);for(let e=0;e<l;e++){const t=e*u,r=s.subarray(t,t+u),i=[];for(let e=0;e<r.length;e++)i.push({value:r[e],index:e});i.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(i[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==i&&i.dispose(),Cn(c,i.shape,"bool")},qp={fft:rl,ifft:al,rfft:il,irfft:ll},Xp={hammingWindow:Ml,hannWindow:Cl,frame:Al,stft:Nl},Kp={flipLeftRight:Ll,grayscaleToRGB:Pl,resizeNearestNeighbor:Gl,resizeBilinear:Hl,rotateWithOffset:Dl,cropAndResize:Rl,nonMaxSuppression:$l,nonMaxSuppressionAsync:Bl,nonMaxSuppressionWithScore:zl,nonMaxSuppressionWithScoreAsync:Ul,nonMaxSuppressionPadded:Vl,nonMaxSuppressionPaddedAsync:Wl,threshold:nu,transform:ru},Yp={bandPart:lu,gramSchmidt:vu,qr:Lu},Zp={absoluteDifference:zu,computeWeightedLoss:Bu,cosineDistance:Uu,hingeLoss:Vu,huberLoss:Hu,logLoss:ju,meanSquaredError:Xu,sigmoidCrossEntropy:Zu,softmaxCrossEntropy:Qu},Jp={sparseFillEmptyRows:ec,sparseReshape:tc,sparseSegmentMean:nc,sparseSegmentSum:rc},Qp={stringNGrams:ic,stringSplit:ac,stringToHashBucketFast:sc};n(Ko,Rp),n(Ko,Au),n(Ko,uu),n(Ko,Op),n(Ko,Dp),n(Ko,gh),n(Ko,$p),n(Ko,zp),n(Ko,Vp),n(Ko,_l),n(Ko,Gp);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ed="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function td(){let e,t,n,r,i,a,s,o,l,u;return 2===se().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",i="texture",a="outputColor",s="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",i="texture2D",a="gl_FragColor",s="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:i,output:a,defineOutput:s,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function nd(e,t,n="index"){const r=De.computeStrides(t);return r.map(((t,i)=>`${`int ${e[i]} = ${n} / ${t}`}; ${i===r.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${t}`:`index -= ${e[i]} * ${t}`};`)).join("")}function rd(e,t,n="index"){const r=De.computeStrides(t);return r.map(((t,i)=>`${`int ${e[i]} = ${n} / outShapeStrides[${i}]`}; ${i===r.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * outShapeStrides[${i}]`:`index -= ${e[i]} * outShapeStrides[${i}]`};`)).join("")}function id(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),i=new Array(n-1);i[n-2]=r[n-1];for(let e=n-3;e>=0;--e)i[e]=`(${i[e+1]} * ${r[e+1]})`;return i}(e.map(((e,t)=>t)),t);return r.map(((t,i)=>`${`int ${e[i]} = ${n} / ${r[i]}`}; ${i===r.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${r[i]}`:`index -= ${e[i]} * ${r[i]}`};`)).join("")}function ad(e){const t=De.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}const sd="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:od}=Oa;function ld(e,t,n){const r=[];if(e.forEach((e=>{const t=De.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=vd(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const i=r.join("\n"),a=e.map((e=>function(e,t,n=!1,r){let i="";i+=n?cd(e,r):ud(e,r);const a=e.shapeInfo.logicalShape,s=t.logicalShape;a.length<=s.length&&(i+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),i="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,s=t.logicalShape.length,o=od(e.shapeInfo.logicalShape,t.logicalShape),l=xd(s),u=s-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":s<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let p="";p=s<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let d="return outputValue;";const f=1===De.sizeFromShape(e.shapeInfo.logicalShape),m=1===De.sizeFromShape(t.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===s?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${i}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),i="get"+r+"AtOutCoords",a=t.texShape,s=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&De.arraysEqual(s,a))return`\n      float ${i}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=xd(l),c=od(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", ");return`\n    float ${i}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(e,t));return i}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),s=t.texShape,o=td(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${hd}\n    ${pd}\n    ${dd}\n  `}(o);t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return md();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;return n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(De.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const i=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(e[2]/2),a=i*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(e[e.length-1]/2),a=i*Math.ceil(e[e.length-2]/2);let s=a,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],o=`\n      int b${t} = index / ${s};\n      index -= b${t} * ${s};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,s,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return md();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;return n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(De.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${rd(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=nd(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${rd(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=nd(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=nd(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=nd(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,s,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=fd);return[h,l,c,i,u,a,n.userCode].join("\n")}function ud(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[i,a]=e.shapeInfo.texShape;if(1===i&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const s=gd(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${yd(e)}\n      }\n    `;const i=e.shapeInfo.texShape,a=i[0],s=i[1];if(1===s&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=gd(n);if(1===s)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===a)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;return t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&De.arraysEqual(n,a)){if(t)return`\n      float ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${i}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:s,keptDims:o}=De.squeezeShape(n),l=s;if(l.length<n.length){const n=["row","col"];return`\n      ${ud(bd(e,l),t)}\n      float ${i}(int row, int col) {\n        return ${i}(${wd(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${i}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${yd(e)}\n      }\n    `;const u=a[0],c=a[1],h=gd(r);if(1===c)return t?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===u)return t?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;return t?`\n      float ${i}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${i}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],s=n[2],{newShape:o,keptDims:l}=De.squeezeShape(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${ud(bd(e,u),t)}\n        float ${i}(int row, int col, int depth) {\n          return ${i}(${wd(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${s}, 1)));\n        ${yd(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===a&&null==d)return t?`\n      float ${i}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${i}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===s&&null==d)return t?`\n      float ${i}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${i}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=gd(r);return t?`\n    float ${i}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${a} + col * ${s} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${i}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${s} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],s=n[2]*a,o=n[1]*s,{newShape:l,keptDims:u}=De.squeezeShape(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${ud(bd(e,l),t)}\n      float ${i}(int row, int col, int depth, int depth2) {\n        return ${i}(${wd(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${s}, ${a}, 1)));\n        ${yd(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(d===o&&null==c)return t?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(d===a&&null==c)return t?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=gd(r);return t?`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t[4],a=t[3]*i,s=t[2]*a,o=t[1]*s,{newShape:l,keptDims:u}=De.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${ud(bd(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${wd(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${s}, ${a}, ${i})) +\n          depth3;\n        ${yd(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${s}, ${a}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=gd(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} + depth * ${a} +\n          depth2 * ${i} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:i,keptDims:a}=De.squeezeShape(t);if(i.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${ud(bd(e,i))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${wd(t,a)});\n      }\n    `}const s=t[5],o=t[4]*s,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${s}, 1)));\n        ${yd(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${s})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=gd(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${s} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function cd(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=td();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e.shapeInfo.texShape,a=td();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,s=a[0],o=a[1],l=td();if(null!=a&&De.arraysEqual(n,a))return t?`\n      vec4 ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${s}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${i}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${i}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${cd(bd(e,n.slice(1)),t)}\n        vec4 ${i}(int b, int row, int col) {\n          return ${i}(${wd(a,r)});\n        }\n      `}const o=td();if(t)return`\n    vec4 ${i}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=s[0],u=s[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${i}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=td();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,s=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[s-1]/2);let p=h*Math.ceil(a[s-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<s-1;e++)d=`int b${e}, `+d,p*=a[s-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const hd="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",pd="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",dd="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",fd="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function md(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function gd(e){return`offset${e}`}function yd(e){const t=e.name,n=De.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function xd(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function vd(e,t,n){const{newShape:r,keptDims:i}=De.squeezeShape(t),a=t.length,s=e&&3===a&&1===t[0],o=s?t.slice(1):r,l=!e&&a>1&&!De.arraysEqual(t,n)&&r.length<a||s;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:i}}function bd(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function wd(e,t){return t.map((t=>e[t])).join(", ")}const _d={},Sd={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Td(e,t){_d[e]=t}function Ed(e,t){if(!(e in _d)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete _d[e]}),!1),se().getBool("SOFTWARE_WEBGL_ENABLED")&&(Sd.failIfMajorPerformanceCaveat=!1);return 1===e?n.getContext("webgl",Sd)||n.getContext("experimental-webgl",Sd):n.getContext("webgl2",Sd)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;_d[e]=n}const n=_d[e];return null==n||n.isContextLost()?(delete _d[e],Ed(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),_d[e])}var Md,Cd,Id,kd,Ad,Nd;function Rd(e,t){return[t,e]}function Ld(e){const t=De.sizeFromShape(e),n=Math.ceil(t/4);return De.sizeToSquarishShape(n)}function Od(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Pd(e,t){const n=e;let r,i,a,s,o,l,u,c,h,p;return 2===se().getNumber("WEBGL_VERSION")?(r=n.R32F,i=n.R16F,a=n.RGBA16F,s=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(r=e.RGBA,i=e.RGBA,a=e.RGBA,s=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function Dd(e,t){const n=t();return se().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}(Cd=Md||(Md={}))[Cd.DENSE=0]="DENSE",Cd[Cd.SHARED_BATCH=1]="SHARED_BATCH",(kd=Id||(Id={}))[kd.RENDER=0]="RENDER",kd[kd.UPLOAD=1]="UPLOAD",kd[kd.PIXELS=2]="PIXELS",kd[kd.DOWNLOAD=3]="DOWNLOAD",(Nd=Ad||(Ad={}))[Nd.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",Nd[Nd.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",Nd[Nd.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",Nd[Nd.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",Nd[Nd.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";function Fd(e){return!!(se().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function $d(e,t){return Xd(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function Bd(e,t){const n=Xd(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(Dd(e,(()=>e.shaderSource(n,t))),Dd(e,(()=>e.compileShader(n))),se().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw Ud(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const zd=/ERROR: [0-9]+:([0-9]+):/g;function Ud(e,t){const n=zd.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],i=e.split("\n"),a=i.length.toString().length+2,s=i.map(((e,t)=>De.rightPad((t+1).toString(),a)+e));let o=0;for(let e=0;e<s.length;e++)o=Math.max(s[e].length,o);const l=s.slice(0,r-1),u=s.slice(r-1,r),c=s.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${De.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function Vd(e,t){if(Dd(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Wd(e,t,n,r,i,a,s){const o=e.getAttribLocation(t,n);return-1!==o&&(Dd(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),Dd(e,(()=>e.vertexAttribPointer(o,i,e.FLOAT,!1,a,s))),Dd(e,(()=>e.enableVertexAttribArray(o))),!0)}function Hd(e,t,n,r){Dd(e,(()=>function(e,t,n){Kd(e,n),Dd(e,(()=>e.activeTexture(e.TEXTURE0+n))),Dd(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),Dd(e,(()=>e.uniform1i(n,r)))}function Gd(e,t,n){Dd(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),Dd(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function jd(e,t){Dd(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),Dd(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function qd(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function Xd(e,t,n){const r=Dd(e,(()=>t()));if(null==r)throw new Error(n);return r}function Kd(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function Yd(e,t=2){return De.sizeFromShape(e.slice(0,e.length-t))}function Zd(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Jd(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Yd(e),...Zd(e)]),t}function Qd(e){return e%2==0}function ef(e,t){if(e=e.slice(-2),t=t.slice(-2),De.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(Qd(n)&&Qd(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Qd(e[0])&&Qd(t[0])}let tf,nf;function rf(e){if(null==tf){const t=Ed(e);tf=t.getParameter(t.MAX_TEXTURE_SIZE)}return tf}function af(e){if(null==nf){const t=Ed(e);nf=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,nf)}function sf(e){if(0===e)return 0;let t;const n=Ed(e);return t=of(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:of(n,"EXT_disjoint_timer_query")?1:0,t}function of(e,t){return null!=e.getExtension(t)}function lf(e){try{if(null!=Ed(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function uf(e){if(0===e)return!1;const t=Ed(e);if(1===e){if(!of(t,"OES_texture_float"))return!1}else if(!of(t,"EXT_color_buffer_float"))return!1;return hf(t)}function cf(e){if(0===e)return!1;const t=Ed(e);if(1!==e){if(of(t,"EXT_color_buffer_float"))return hf(t);const e="EXT_color_buffer_half_float";if(of(t,e)){const n=t.getExtension(e);return function(e,t){const n=Pd(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const i=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,i,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),o}(t,n)}return!1}if(!of(t,"OES_texture_float"))return!1;if(!of(t,"WEBGL_color_buffer_float"))return!1;return hf(t)}function hf(e){const t=Pd(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),i}function pf(e){if(2!==e)return!1;return null!=Ed(e).fenceSync}function df(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&De.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}function ff(e,t,n,r){const i=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=i.map((e=>e.shapeInfo)),s={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=ld(i,s,t),l=Bd(e.gl,o),u=e.createProgram(l);return se().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:s,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:s},mf(e,t,u))}function mf(e,t,n){const r={},i={},a={},s=[];let o,l,u,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===se().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const p=!1;for(let s=0;s<t.variableNames.length;s++){const o=t.variableNames[s];r[o]=e.getUniformLocation(n,o,p),r[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,p),t.enableShapeUniforms&&(i[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,p),a[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,p))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",p),u=e.getUniformLocation(n,"outShapeStrides",p),l=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{s[r]=e.getUniformLocation(n,t.name,p)})),{uniformLocations:r,customUniformLocations:s,infLoc:c,nanLoc:h,inShapesLocations:i,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function gf(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,i=t[n],a=i.shape;if(!De.arraysEqual(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&i.isUniform)return;const s=e.texShape,o=i.isUniform?null:i.texData.texShape;if(!De.arraysEqual(s,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${s} and ${o} must match`)}))}function yf(e){return se().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class xf{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Oa.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=yf(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}function vf(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function bf(e,t){return 1===t?[e]:vf(e,t)}function wf(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}class _f{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Oa.assertAndGetBroadcastShape(t,n);const i=this.outputShape.length;this.enableShapeUniforms=yf(i);let a="";if(r)if(0===i||1===De.sizeFromShape(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${xd(i)} coords = getOutputCoords();\n        `,1===i)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=bf("coords",i);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[i-2]} + 1) >= outShape[${i} - 2];\n            bool nextColOutOfBounds =\n              (${e[i-1]} + 1) >= outShape[${i} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[i-2]} + 1) >= ${this.outputShape[i-2]};\n            bool nextColOutOfBounds =\n              (${e[i-1]} + 1) >= ${this.outputShape[i-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function Sf(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Tf={kernelName:"Identity",backendName:"webgl",kernelFunc:Sf};function Ef(e){const{inputs:t,backend:n}=e,{real:r,imag:i}=t,a=n.makeTensorInfo(r.shape,"complex64"),s=n.texData.get(a.dataId),o=Sf({inputs:{x:r},backend:n}),l=Sf({inputs:{x:i},backend:n});return s.complexTensorInfos={real:o,imag:l},a}const Mf={kernelName:"Complex",backendName:"webgl",kernelFunc:Ef},Cf="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const If={kernelName:"LeakyRelu",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{alpha:a}=r,s=n.makeTensorInfo([],"float32",De.createScalarValue(a,"float32")),o=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _f(Cf,i.shape,s.shape):new xf("return (a < 0.) ? b * a : a;",i.shape,s.shape),l=n.runWebGLProgram(o,[i,s],"float32");return n.disposeIntermediateTensorInfo(s),l}},kf="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Af={kernelName:"Prelu",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:i}=t,a=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _f(kf,r.shape,i.shape):new xf("return (a < 0.) ? b * a : a;",r.shape,i.shape);return n.runWebGLProgram(a,[r,i],"float32")}};class Nf{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=yf(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Rf{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=yf(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}function Lf({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:i,backend:a})=>{const{x:s}=i,o=a,l=r||s.dtype;if(o.shouldExecuteOnCPU([s])&&null!=n){const e=o.texData.get(s.dataId),t=n(e.values,l);return o.makeTensorInfo(s.shape,l,t)}let u;return u=se().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Rf(s.shape,t):new Nf(s.shape,e),o.runWebGLProgram(u,[s],l)}}function Of({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:i,dtype:a}){return({inputs:s,backend:o})=>{const{a:l,b:u}=s,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,i]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,i={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},s=new xf(e,l.shape,u.shape);return c.runWebGLProgram(s,[i,a],tn(n.dtype,r.dtype))})),a=Ef({inputs:{real:r,imag:i},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(i),a}const h=a||tn(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=i){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?Oa.fromUint8ToStringArray(e):e,r="string"===l.dtype?Oa.fromUint8ToStringArray(t):t,[a,s]=i(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(s,h);return c.texData.get(o.dataId).values=a,o}let p;return p=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new _f(t,l.shape,u.shape,n):new xf(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function Pf(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?kf:"return (a < 0.) ? b * a : a;";if("leakyrelu"===e)return t?Cf:"return (a < 0.) ? b * a : a;";if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class Df{constructor(e,t,n,r=!1,i=!1,a=!1,s=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=yf(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=i?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";s&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",v="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(v=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${x};\n          int batchB = ${v};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const Ff="return areal * breal - aimag * bimag;",$f="return areal * bimag + aimag * breal;";class Bf{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Oa.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}var zf={};function Uf(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&De.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}function Vf(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}t(zf,"simpleAbsImpl",(()=>Vf)),t(zf,"addImpl",(()=>Jf)),t(zf,"bincountImpl",(()=>em)),t(zf,"bincountReduceImpl",(()=>tm)),t(zf,"castImpl",(()=>Xf)),t(zf,"ceilImpl",(()=>am)),t(zf,"concatImpl",(()=>sm)),t(zf,"equalImpl",(()=>om)),t(zf,"expImpl",(()=>lm)),t(zf,"expm1Impl",(()=>um)),t(zf,"floorImpl",(()=>cm)),t(zf,"gatherNdImpl",(()=>hm)),t(zf,"gatherV2Impl",(()=>pm)),t(zf,"greaterImpl",(()=>dm)),t(zf,"greaterEqualImpl",(()=>fm)),t(zf,"lessImpl",(()=>mm)),t(zf,"lessEqualImpl",(()=>gm)),t(zf,"linSpaceImpl",(()=>ym)),t(zf,"logImpl",(()=>xm)),t(zf,"maxImpl",(()=>vm)),t(zf,"maximumImpl",(()=>bm)),t(zf,"minimumImpl",(()=>wm)),t(zf,"multiplyImpl",(()=>_m)),t(zf,"negImpl",(()=>Tm)),t(zf,"notEqualImpl",(()=>Em)),t(zf,"prodImpl",(()=>Cm)),t(zf,"raggedTensorToTensorImpl",(()=>Rm)),t(zf,"rangeImpl",(()=>Lm)),t(zf,"rsqrtImpl",(()=>Om)),t(zf,"scatterImpl",(()=>Pm)),t(zf,"sigmoidImpl",(()=>Dm)),t(zf,"sliceImpl",(()=>Fm)),t(zf,"sparseFillEmptyRowsImpl",(()=>$m)),t(zf,"sparseReshapeImpl",(()=>Bm)),t(zf,"sparseSegmentReductionImpl",(()=>zm)),t(zf,"sqrtImpl",(()=>Um)),t(zf,"squaredDifferenceImpl",(()=>Vm)),t(zf,"stridedSliceImpl",(()=>Wm)),t(zf,"stringNGramsImpl",(()=>Gm)),t(zf,"stringSplitImpl",(()=>qm)),t(zf,"stringToHashBucketFastImpl",(()=>Xm)),t(zf,"subImpl",(()=>Km)),t(zf,"tileImpl",(()=>Zm)),t(zf,"topKImpl",(()=>eg)),t(zf,"transposeImpl",(()=>Mm)),t(zf,"uniqueImpl",(()=>tg));function Wf(e){return(t,n,r,i,a)=>{const s=Oa.assertAndGetBroadcastShape(t,n),o=s.length,l=De.computeStrides(s),u=De.sizeFromShape(s),c=De.getTypedArrayFromDType(a,u),h=t.length,p=n.length,d=De.computeStrides(t),f=De.computeStrides(n),m=Oa.getBroadcastDims(t,s),g=Oa.getBroadcastDims(n,s);if(m.length+g.length===0)for(let t=0;t<c.length;++t)c[t]=e(r[t%r.length],i[t%i.length]);else for(let t=0;t<c.length;++t){const n=De.indexToLoc(t,o,l),a=n.slice(-h);m.forEach((e=>a[e]=0));const s=De.locToIndex(a,h,d),u=n.slice(-p);g.forEach((e=>u[e]=0));const y=De.locToIndex(u,p,f);c[t]=e(r[s],i[y])}return[c,s]}}function Hf(e){const{inputs:t,backend:n}=e,{real:r,imag:i}=t,a=n.data.get(r.dataId).values,s=n.data.get(i.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(i.shape,"float32",s)},o}function Gf(e,t,n="float32"){if("complex64"===n){return Hf({inputs:{real:Gf(e,t,"float32"),imag:Gf(e,t,"float32")},backend:e})}const r=De.makeZerosTypedArray(De.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function jf(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function qf(e){const{inputs:t,backend:n}=e,{input:r}=t,i=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(i.dataId).values;return n.makeTensorInfo(i.shape,i.dtype,a)}function Xf(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){const r=De.toTypedArray([0],n),[i,a]=Wf(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",i]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function Kf(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===i.dtype)return jf({inputs:{x:i},backend:n});const e=Gf(n,i.shape,i.dtype),t=Kf({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),r=Hf({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===i.dtype){const e=qf({inputs:{input:i},backend:n}),t=Kf({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!De.hasEncodingLoss(i.dtype,a)){const e=jf({inputs:{x:i},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const s=n.data.get(i.dataId).values,[o,l,u]=Xf(s,i.shape,i.dtype,a);return n.makeTensorInfo(o,l,u)}function Yf(e,t,n,r){return null==n?({inputs:n,backend:i})=>{const{a:a,b:s}=n,o=i;Uf([a,s],e);const l=o.data.get(a.dataId).values,u=o.data.get(s.dataId).values,c="string"===a.dtype?Oa.fromUint8ToStringArray(l):l,h="string"===a.dtype?Oa.fromUint8ToStringArray(u):u,p=r||a.dtype,[d,f]=t(a.shape,s.shape,c,h,p);return o.makeTensorInfo(f,p,d)}:({inputs:e,backend:i})=>{const{a:a,b:s}=e,o=i;if("complex64"===a.dtype||"complex64"===s.dtype){const e=Kf({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,i=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(i.dataId).values,c=Kf({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,x]=n(a.shape,s.shape,l,u,f,m),v=o.makeTensorInfo(x,"float32",g),b=o.makeTensorInfo(x,"float32",y),w=Hf({inputs:{real:v,imag:b},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(v),o.disposeIntermediateTensorInfo(b),w}{const e=o.data.get(a.dataId).values,n=o.data.get(s.dataId).values,i=r||a.dtype,[l,u]=t(a.shape,s.shape,e,n,i);return o.makeTensorInfo(u,i,l)}}}function Zf(e){return(t,n,r,i,a,s)=>{const o=Oa.assertAndGetBroadcastShape(t,n),l=De.sizeFromShape(o),u=o.length,c=De.computeStrides(o),h=De.getTypedArrayFromDType("float32",l),p=De.getTypedArrayFromDType("float32",l),d=Oa.getBroadcastDims(t,o),f=Oa.getBroadcastDims(n,o),m=Oa.mergeRealAndImagArrays(r,i),g=Oa.mergeRealAndImagArrays(a,s),y=t.length,x=De.computeStrides(t),v=n.length,b=De.computeStrides(n);if(d.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,i=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=i.real,p[t]=i.imag}else for(let t=0;t<h.length;t++){const n=De.indexToLoc(t,u,c),r=n.slice(-y);d.forEach((e=>r[e]=0));const i=De.locToIndex(r,y,x),a=n.slice(-v);f.forEach((e=>a[e]=0));const s=De.locToIndex(a,v,b),o=e(m[2*i],m[2*i+1],g[2*s],g[2*s+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}const Jf=Wf(((e,t)=>e+t)),Qf=Zf(((e,t,n,r)=>({real:e+n,imag:t+r})));Yf("Add",Jf,Qf);function em(e,t,n,r,i){const a=De.sizeFromShape(r),s=De.makeZerosTypedArray(i,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=i||(s[r]+=a>0?t[n]:1)}return s}function tm(e,t,n,r=!1){const i=e.shape[0],a=e.shape[1],s=Ci([i,n],t.dtype);for(let o=0;o<i;o++)for(let i=0;i<a;i++){const a=e.get(o,i);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?s.set(1,o,a):t.size>0?s.set(s.get(o,a)+t.get(o,i),o,a):s.set(s.get(o,a)+1,o,a))}return s}function nm(e){return(t,n,r)=>{const i=De.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)i[n]=e(t[n],r);return i}}function rm(e,t,n){return({inputs:r,attrs:i,backend:a})=>{const{x:s}=r;if(Uf(s,e),"string"===s.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(s.dataId).values,u=De.sizeFromShape(s.shape),c=n||s.dtype,h=De.getArrayFromDType(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],i);return o.makeTensorInfo(s.shape,c,h)}}function im(e,t,n){return({inputs:r,attrs:i,backend:a})=>{const{x:s}=r;if(Uf(s,e),"string"===s.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(s.dataId).values,u=n||s.dtype,c=t(l,u,i);return o.makeTensorInfo(s.shape,u,c)}}const am=nm((e=>Math.ceil(e)));im("Ceil",am);function sm(e,t,n,r){const i=De.getArrayFromDType(n,De.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=De.sizeFromShape(e.shape);i.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?Oa.fromUint8ToStringArray(e.vals):e.vals;let s=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)i[o+t]=a[s++]}r+=e.shape[1]}))}return i}const om=Wf(((e,t)=>e===t?1:0)),lm=(Yf("Equal",om,null,"bool"),nm((e=>Math.exp(e)))),um=(im("Exp",lm,"float32"),nm((e=>Math.expm1(e)))),cm=(im("Expm1",um),nm((e=>Math.floor(e))));im("Floor",cm);function hm(e,t,n,r,i,a,s,o,l){const u=Ci([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<i;t++){const a=e[n*i+t];c+=a*s[t],r.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}function pm(e,t,n){const r=Ci(n,e.dtype);for(let n=0;n<r.size;++n){const i=r.indexToLoc(n).slice(),a=i[0],s=i[2],o=t.locToIndex([a,s]);i[2]=t.values[o];const l=e.locToIndex(i);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}const dm=Wf(((e,t)=>e>t?1:0)),fm=(Yf("Greater",dm,null,"bool"),Wf(((e,t)=>e>=t?1:0))),mm=(Yf("GreaterEqual",fm,null,"bool"),Wf(((e,t)=>e<t?1:0))),gm=(Yf("Less",mm,null,"bool"),Wf(((e,t)=>e<=t?1:0)));Yf("LessEqual",gm,null,"bool");function ym(e,t,n){const r=(t-e)/(n-1),i=De.makeZerosTypedArray(n,"float32");i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+r;return i}const xm=nm((e=>Math.log(e)));im("Log",xm);function vm(e,t,n,r){const i=De.getTypedArrayFromDType(r,De.sizeFromShape(n));for(let n=0;n<i.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}i[n]=a}return i}const bm=Wf(((e,t)=>Math.max(e,t))),wm=(Yf("Maximum",bm),Wf(((e,t)=>Math.min(e,t)))),_m=(Yf("Minimum",wm),Wf(((e,t)=>e*t))),Sm=Zf(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})));Yf("Multiply",_m,Sm);function Tm(e,t,n){const r=De.createScalarValue(-1,n);return _m([],t,r,e,n)}const Em=Wf(((e,t)=>e!==t?1:0));Yf("NotEqual",Em,null,"bool");function Mm(e,t,n,r,i){const a=t.length,s=De.sizeFromShape(t),o=De.computeStrides(t),l=De.computeStrides(i),u=De.getTypedArrayFromDType(n,De.sizeFromShape(i));for(let t=0;t<s;++t){const n=De.indexToLoc(t,a,o),i=new Array(n.length);for(let e=0;e<i.length;e++)i[e]=n[r[e]];u[De.locToIndex(i,a,l)]=e[t]}return u}function Cm(e,t,n,r){const[i,a]=Oa.computeOutAndReduceShapes(e,r),s=tn(t,"int32"),o=De.makeZerosTypedArray(De.sizeFromShape(i),s),l=De.sizeFromShape(a);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:i,outDtype:s}}var Im=Oa.RowPartitionType;class km{constructor(e,t,n,r,i,a,s,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=i,this.defaultValue=a,this.defaultValueShape=s,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Oa.getRowPartitionTypesHelper(u),this.raggedRank=Oa.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Im.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Im.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Im.VALUE_ROWIDS:return km.getMaxWidthValueRowID(t);case Im.ROW_SPLITS:return km.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Im[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],i=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,i=Math.max(a-n,i),n=a)}return Math.max(t-n,i)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Nm(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;Oa.validateDefaultValueShape(n,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=Oa.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);i[0]<0&&(i[0]=e);for(let e=1;e<=this.raggedRank;++e)i[e]<0&&(i[e]=this.getMaxWidth(e));return i}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),i=[];let a=0;for(let e=0;e<r;++e,a+=t)i.push(a);for(let t=r;t<e;++t)i.push(-1);return De.assert(i.length===e,(()=>"Final length of result must be equal to firstDimension.")),i}calculateOutputIndexRowSplit(e,t,n,r){const i=e.length,a=[];for(let s=0;s<i-1;++s){const i=e[s+1]-e[s];let o=Math.min(r,i),l=t[s];-1===l&&(o=0);for(let e=0;e<o;++e)a.push(l),l+=n;for(let e=0;e<i-o;++e)a.push(-1)}if(i>0&&a.length!==e[i-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const i=e.length,a=[];if(0===i)return[];let s=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];a.push(l);for(let u=1;u<i;++u){const i=e[u];if(i===o)l>=0&&(++s,s<r?l+=n:l=-1);else{if(s=0,o=i,i>=t.length)throw new Error(`Got nextValueRowId=${i} which is not less than ${t.length}`);l=t[i]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const i=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case Im.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,t,n,r);case Im.ROW_SPLITS:if(i.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(i,t,n,r);default:throw new Error(`Unsupported partition type: ${Im[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Im.FIRST_DIM_SIZE:return e[0];case Im.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Im.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Im[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=Nm(t,!1),i=De.getArrayFromDType(this.valuesDType,De.sizeFromShape(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){a=this.calculateOutputIndex(e-1,a,n[e],t[e])}this.setOutput(this.raggedRank,a,i,r)}return[r,i]}setOutput(e,t,n,r){if(0===n.length)return;const i=this.values,a=n;let s=r.slice();s=s.slice(e+1);const o=De.sizeFromShape(s),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;_u((()=>{const t=_s(u,e),n=Ql(t,s);u=n.dataSync()}))}let c=0,h=0,p=0;for(let e=0;e<=l;++e){let r=e<l?t[e]:-1;if(r!==p){if(h<p){const e=i.subarray(c*o);Am(a.subarray(h*o),e,(p-h)*o)}if(e>=l){const e=n.length;r=Math.floor(e/o)}if(r>p)if(1===this.defaultValue.length)a.subarray(p*o,r*o).fill(this.defaultValue[0]),p=r;else for(;r>p;){Am(a.slice(p*o),u,o),++p}r<0?(c=e+1,h=p):(c=e,h=p,p=h+1)}else++p}}}function Am(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function Nm(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function Rm(e,t,n,r,i,a,s,o,l,u){return new km(e,t,n,r,i,a,s,o,l,u).compute()}function Lm(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return De.makeZerosTypedArray(0,r);const i=Math.abs(Math.ceil((t-e)/n)),a=De.makeZerosTypedArray(i,r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}const Om=nm((e=>1/Math.sqrt(e)));im("Rsqrt",Om);function Pm(e,t,n,r,i,a,s,o,l,u){const c=[r/i,i],h=e.values,p=t.values;if(0===r)return Ci(n,t.dtype);const d=Ci(c,t.dtype);"string"==typeof l||"number"==typeof l?d.values.fill(l):"boolean"==typeof l&&d.values.fill(+l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<s;t++){const n=h[e*s+t];a.push(n),l+=n*o[t]}if(l<0||l>=r/i)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<i;n++)u?d.values[l*i+n]+=p[e*i+n]:d.values[l*i+n]=0===t.rank?p[0]:p[e*i+n]}return d}const Dm=nm((e=>1/(1+Math.exp(-e))));rm("Sigmoid",(e=>1/(1+Math.exp(-e))));function Fm(e,t,n,r,i){const a=ga.isSliceContinous(r,t,n),s=De.sizeFromShape(n),o=De.computeStrides(r);if(a){const n=ga.computeFlatOffset(t,o);return"string"===i?e.slice(n,n+s):e.subarray(n,n+s)}const l=Ci(r,i,"string"===i?Oa.fromUint8ToStringArray(e):e),u=Ci(n,i);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===i?Oa.fromStringArrayToUint8(u.values):u.values}function $m(e,t,n,r,i,a,s){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(Oa.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[De.getArrayFromDType(n,0),[0,h],De.getArrayFromDType(i,0),u,c]}let p=!0,d=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(Oa.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(Oa.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++f[n],p=p&&n>=d,d=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=De.getArrayFromDType(n,t*h),p=De.getArrayFromDType(i,t),d=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],i=d[n],s=(0===n?0:f[n-1])+i;d[n]++;for(let n=0;n<h;++n)a[s*h+n]=e[t*h+n];p[s]=r[t],c[t]=s}for(let e=0;e<l;++e){if(0===d[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;p[t]=s}}return[a,[t,h],p,u,c]}}function Bm(e,t,n,r,i){const a=De.sizeFromShape(r),s=t[0],o=i.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=i[e];if(-1===t){if(-1!==c)throw new Error(Oa.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(Oa.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error(Oa.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(a/u);if(u*e!==a)throw new Error(Oa.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[c]=e}if(De.sizeFromShape(l)!==a)throw new Error(Oa.getSparseReshapeInputOutputMismatchErrorMessage(r,l));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const d=[];if(o>0){d[o-1]=1;for(let e=o-2;e>=0;--e)d[e]=d[e+1]*l[e+1]}const f=De.getArrayFromDType(n,s*o);for(let t=0;t<s;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*p[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/d[e]),n%=d[e]}return[f,[s,o],l]}function zm(e,t,n,r,i,a=!1,s=0){const o=r.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?i[o-1]+1:0;if(c<0)throw new Error(Oa.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=c;const p=h.reduce(((e,t)=>e*t),1),d=De.getArrayFromDType(n,p);if(0===o)return c>0&&d.fill(s),[d,h];if(c<=0)throw new Error(Oa.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=i[f];for(;;){let t=0;if(m<o){if(t=i[m],y===t){++m;continue}if(y>=t)throw new Error(Oa.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=c)throw new Error(Oa.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,c));y>g&&d.fill(s,g*u,y*u);for(let t=f;t<m;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(Oa.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<u;t++)d[y*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)d[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<c&&d.fill(s,g*u,c*u),[d,h]}const Um=nm((e=>Math.sqrt(e))),Vm=(rm("Sqrt",(e=>Math.sqrt(e))),Wf(((e,t)=>{const n=e-t;return n*n})));Yf("SquaredDifference",Vm);function Wm(e,t,n,r){const i=Ci(e,t.dtype);for(let e=0;e<i.size;e++){const a=i.indexToLoc(e),s=new Array(a.length);for(let e=0;e<s.length;e++)s[e]=a[e]*n[e]+r[e];i.set(t.get(...s),...a)}return i}class Hm{constructor(e,t,n,r,i,a){this.separator=De.encodeString(e),this.nGramWidths=t,this.leftPad=De.encodeString(n),this.rightPad=De.encodeString(r),this.padWidth=i,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,i,a){for(let s=0;s<i;++s){const o=this.getPadWidth(a),l=Math.max(0,o-s),u=Math.max(0,o-(i-(s+1))),c=a-(l+u),h=t+(l>0?0:s-o);let p=0;p+=l*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=u*this.rightPad.length;p+=(l+u+c-1)*this.separator.length,n[r+s]=new Uint8Array(p);const d=n[r+s];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let i=1;i<r;++i){let r=t[i]>=e;if(r=r&&t[i]<=n,!r)throw new Error(`Invalid split value ${t[i]}, must be in [${e}, ${n}]`);e=t[i]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const i=r-1,a=De.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=i;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=i;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const s=new Array(a[i]);for(let n=0;n<i;++n){const r=t[n];let i=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,r,s,i,l,a),i+=l})),this.preserveShort&&i===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(e,r,s,i,l,o)}}return[s,a]}}function Gm(e,t,n,r,i,a,s,o){return new Hm(n,r,i,a,s,o).compute(e,t)}function jm(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const i=t[0];let a=e.indexOf(i);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(i)}return void(n&&0===e.length||r.push(e))}let i=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(i,a);n&&0===t.length||r.push(t),i=a+1}}function qm(e,t,n){const r=e.length,i=[];let a=0,s=0;const o=new Array(r);for(let l=0;l<r;++l){const r=i.length;jm(e[l],t,n,i);const u=i.length-r;o[l]=u,a+=u,s=Math.max(s,u)}const l=De.getArrayFromDType("int32",2*a),u=new Array(a),c=[r,s];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=i[h],++h;return[l,u,c]}function Xm(e,t){const n=De.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=De.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}const Km=Wf(((e,t)=>e-t)),Ym=Zf(((e,t,n,r)=>({real:e-n,imag:t-r})));Yf("Sub",Km,Ym);function Zm(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Ci(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),i=new Array(e.rank);for(let t=0;t<i.length;t++)i[t]=n[t]%e.shape[t];const a=e.locToIndex(i);r.values[t]=e.values[a]}return r}const Jm=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Qm(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const i=r-n+1,a=t-n+1,s=Math.log(i),o=.5*Math.exp(2*s/3),l=.5*Math.sqrt(s*o*(i-o)/i)*Math.sign(a-i/2);Qm(e,t,Math.max(n,Math.floor(t-a*o/i+l)),Math.min(r,Math.floor(t+(i-a)*o/i+l)))}const i=e[t];let a=n,s=r;for(De.swap(e,n,t),Jm(e[r],i)>0&&De.swap(e,n,r);a<s;){for(De.swap(e,a,s),a++,s--;Jm(e[a],i)<0;)a+=1;for(;Jm(e[s],i)>0;)s-=1}0===Jm(e[n],i)?De.swap(e,n,s):(s+=1,De.swap(e,s,r)),s<=t&&(n=s+1),t<=s&&(r=s-1)}}function eg(e,t,n,r,i){const a=t[t.length-1],[s,o]=[e.length/a,a],l=De.getTypedArrayFromDType(n,s*r),u=De.getTypedArrayFromDType("int32",s*r);for(let t=0;t<s;t++){const n=t*o,a=e.subarray(n,n+o);let s=new Array(a.length);a.forEach(((e,t)=>s[t]={value:e,index:t})),r<s.length&&(Qm(s,r),s=s.slice(0,r)),i&&s.sort(Jm);const c=t*r,h=l.subarray(c,c+r),p=u.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=s[e].value,p[e]=s[e].index}const c=t.slice();return c[c.length-1]=r,[Ci(c,n,l),Ci(c,"int32",u)]}function tg(e,t,n,r){const i=De.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let e=0;e<i;e++)a[0]*=n[e];a[1]=n[i];for(let e=i+1;e<n.length;e++)a[2]*=n[e];const s={},o=new Int32Array(n[i]),l=new $t(a,r,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[i];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==s[n])o[t]=s[n];else{const e=Object.keys(s).length;s[n]=e,o[t]=e,u.push(t)}}const h=a.slice();h[1]=Object.keys(s).length;const p=new $t(h,r);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(l.get(n,e,r),n,t,r)}));const d=n.slice();return d[i]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const{addImpl:ng,bincountImpl:rg,bincountReduceImpl:ig,castImpl:ag,ceilImpl:sg,concatImpl:og,equalImpl:lg,expImpl:ug,expm1Impl:cg,floorImpl:hg,gatherNdImpl:pg,gatherV2Impl:dg,greaterImpl:fg,greaterEqualImpl:mg,lessImpl:gg,lessEqualImpl:yg,linSpaceImpl:xg,logImpl:vg,maxImpl:bg,maximumImpl:wg,minimumImpl:_g,multiplyImpl:Sg,negImpl:Tg,notEqualImpl:Eg,prodImpl:Mg,raggedTensorToTensorImpl:Cg,rangeImpl:Ig,rsqrtImpl:kg,scatterImpl:Ag,sigmoidImpl:Ng,simpleAbsImpl:Rg,sliceImpl:Lg,sparseFillEmptyRowsImpl:Og,sparseReshapeImpl:Pg,sparseSegmentReductionImpl:Dg,sqrtImpl:Fg,stridedSliceImpl:$g,stringNGramsImpl:Bg,stringSplitImpl:zg,stringToHashBucketFastImpl:Ug,subImpl:Vg,tileImpl:Wg,topKImpl:Hg,transposeImpl:Gg,uniqueImpl:jg}=zf;function qg(e){const{inputs:t,backend:n}=e,{a:r,b:i}=t,a=Oa.upcastType(r.dtype,i.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(i.dataId),a=new Bf(Ff,r.shape,i.shape),s=new Bf($f,r.shape,i.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:i.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:i.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(s,o,"float32"),c=Ef({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,i])){const e=n.texData.get(r.dataId),t=n.texData.get(i.dataId),[s,o]=Sg(r.shape,i.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=s,l}let s;return s=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _f("return a * b;",r.shape,i.shape):new xf("return a * b;",r.shape,i.shape),n.runWebGLProgram(s,[r,i],a)}const Xg={kernelName:"Multiply",backendName:"webgl",kernelFunc:qg};class Kg{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=yf(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,i;this.userCode=`\n      ${r=t,i=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${i?id(["r","c","d"],"inputShape"):nd(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":ad(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}function Yg(e,t,n){const r=[Yd(e.shape),...Zd(e.shape)],i={dtype:e.dtype,shape:r,dataId:e.dataId},a=[Yd(t),...Zd(t)],s=new Kg(a,r),o=[r],l=n.runWebGLProgram(s,[i],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}function Zg(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{shape:a}=r,s=n,o=De.sizeFromShape(i.shape),l=De.inferFromImplicitShape(a,o),u=De.sizeFromShape(l);De.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${i.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=s.texData.get(i.dataId);return!c.isPacked||ef(i.shape,l)||null!==c.texture&&ef(c.shape,l)?(s.incRef(i.dataId),{dataId:i.dataId,shape:l,dtype:i.dtype}):Yg(i,l,s)}const Jg={kernelName:"Reshape",backendName:"webgl",kernelFunc:Zg};class Qg{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:i,outSize:a}=e;this.outputShape=[r,a];const s=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${De.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";i%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${s}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${s};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class ey{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:i,outSize:a}=e;this.outputShape=[r,a];let s="0.0",o="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",o="min"):"max"===t&&(s="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(s="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(s="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";i%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${s};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${s});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function ty(e,t,n,r){const i=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Oa.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let s=0;s<i.length;s++){const{inSize:o,windowSize:l,outSize:u}=i[s];let c,h;c="mean"===n?0===s?new Qg({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new Qg({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new ey({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class ny{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=xd(this.rank),i=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${i}));\n    }\n    `}}class ry{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=xd(this.rank),i=vf("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=i[e];const s=`vec2(${a.slice(-2).join()})`,o=`++${i[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${s})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${i[this.rank-1]};\n      if(++${i[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function iy(e,t,n){const r=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ry(e.shape,t):new ny(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function ay(e,t,n,r){const i=t,a=e.shape.length,s=De.parseAxisParam(i,e.shape);let o=s;const l=Oa.getAxesPermutation(o,a),u=null!=l;let c=e;u&&(c=iy(e,l,r),o=Oa.getInnerMostAxes(o.length,a)),Oa.assertAxesAreInnerMostDims("sum",o,a);const[h,p]=Oa.computeOutAndReduceShapes(c.shape,o);let d=h;n&&(d=Oa.expandShapeToKeepDim(h,s));const f=De.sizeFromShape(p),m=Zg({inputs:{x:c},attrs:{shape:[De.sizeFromShape(e.shape)/f,f]},backend:r}),g=ty(m,nn(e.dtype),"sum",r),y=Zg({inputs:{x:g},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),y}function sy(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:a,keepDims:s}=r;return ay(i,a,s,n)}const oy={kernelName:"Sum",backendName:"webgl",kernelFunc:sy};function ly(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{perm:a}=r,s=n,o=i.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=i.shape[a[e]];let u;if(s.shouldExecuteOnCPU([i])){const e=s.texData.get(i.dataId).values,t=Gg(e,i.shape,i.dtype,a,l);u=s.makeTensorInfo(l,i.dtype);s.texData.get(u.dataId).values=t}else u=iy(i,a,s);return u}const uy={kernelName:"Transpose",backendName:"webgl",kernelFunc:ly};function cy({a:e,b:t,transposeA:n,transposeB:r,backend:i,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],p=r?t.shape[c-1]:t.shape[c-2],d=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=De.sizeFromShape(m),x=De.sizeFromShape(g),v=Ji.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);De.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=n?[y,h,d]:[y,d,h],w=r?[x,f,p]:[x,p,f],_=Zg({inputs:{x:e},backend:i,attrs:{shape:b}}),S=Zg({inputs:{x:t},backend:i,attrs:{shape:w}}),T=[_,S],E=Math.max(y,x),M=n?_.shape[1]:_.shape[2],C=null!=a,I=null!=s,k="leakyrelu"===l,A=null!=l?Pf(l,!0):null;let N;if((1===d||1===f)&&M>1e3&&!1===(C||I||k||null!=A)){let e=_,t=S;n&&(e=ly({inputs:{x:_},backend:i,attrs:{perm:[0,2,1]}}),T.push(e)),r&&(t=ly({inputs:{x:S},backend:i,attrs:{perm:[0,2,1]}}),T.push(t));const a=1===f;let s=e;1!==f&&(s=Zg({inputs:{x:e},backend:i,attrs:{shape:[E,M,1]}}),T.push(s));const o=1===f?2:1;let l=t;a&&(l=Zg({inputs:{x:t},backend:i,attrs:{shape:[E,1,M]}}),T.push(l));const u=qg({inputs:{a:s,b:l},backend:i});N=sy({inputs:{x:u},backend:i,attrs:{axis:o,keepDims:!0}}),T.push(u)}else{const l=tn(e.dtype,t.dtype),u=new Df(b,w,[E,d,f],n,r,C,A,I,k),c=[_,S];if(null!=a&&c.push(a),I&&c.push(s),k){const e=i.makeTensorInfo([],"float32",De.createScalarValue(o,"float32"));c.push(e),T.push(e)}N=i.runWebGLProgram(u,c,l)}const R=Zg({inputs:{x:N},backend:i,attrs:{shape:v}});T.push(N);for(const e of T)i.disposeIntermediateTensorInfo(e);return R}const hy={kernelName:"_FusedMatMul",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:i,b:a,bias:s,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return cy({a:i,b:a,transposeA:l,transposeB:u,backend:n,bias:s,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}};const py={kernelName:"Abs",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Rg(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let i;return i=se().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Rf(r.shape,"return abs(x);"):new Nf(r.shape,"return abs(x);"),n.runWebGLProgram(i,[r],r.dtype)}},dy={kernelName:"Acos",backendName:"webgl",kernelFunc:Lf({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"})},fy={kernelName:"Acosh",backendName:"webgl",kernelFunc:Lf({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"})},my={kernelName:"Add",backendName:"webgl",kernelFunc:Of({opSnippet:"return a + b;",packedOpSnippet:"return a + b;",supportsComplex:!0,cpuKernelImpl:ng})};class gy{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class yy{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const xy={kernelName:"AddN",backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,i=n;if(1===i.length)return Sf({inputs:{x:i[0]},backend:r});if(i.length>se().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(i.length/2),n=e({inputs:i.slice(0,t),backend:r}),a=e({inputs:i.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=i.map((e=>e.dtype)).reduce(((e,t)=>tn(e,t))),s=i.map((e=>e.shape)),o=se().getBool("WEBGL_PACK")?new yy(i[0].shape,s):new gy(i[0].shape,s);return r.runWebGLProgram(o,i,a)}};const vy={kernelName:"All",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:a,keepDims:s}=r,o=i.shape.length,l=De.parseAxisParam(a,i.shape);let u=l;const c=Oa.getAxesPermutation(u,o);let h=i;null!=c&&(h=ly({inputs:{x:i},backend:n,attrs:{perm:c}}),u=Oa.getInnerMostAxes(u.length,o)),Oa.assertAxesAreInnerMostDims("all",u,o);const[p,d]=Oa.computeOutAndReduceShapes(h.shape,u),f=Zg({inputs:{x:h},backend:n,attrs:{shape:[-1,De.sizeFromShape(d)]}}),m=ty(f,f.dtype,"all",n);let g;if(s){g=Zg({inputs:{x:m},backend:n,attrs:{shape:Oa.expandShapeToKeepDim(p,l)}})}else g=Zg({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};const by={kernelName:"Any",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:a,keepDims:s}=r,o=i.shape.length,l=De.parseAxisParam(a,i.shape);let u=l;const c=Oa.getAxesPermutation(u,o);let h=i;null!=c&&(h=ly({inputs:{x:i},backend:n,attrs:{perm:c}}),u=Oa.getInnerMostAxes(u.length,o)),Oa.assertAxesAreInnerMostDims("any",u,o);const[p,d]=Oa.computeOutAndReduceShapes(h.shape,u),f=Zg({inputs:{x:h},backend:n,attrs:{shape:[-1,De.sizeFromShape(d)]}}),m=ty(f,f.dtype,"any",n);let g;if(s){g=Zg({inputs:{x:m},backend:n,attrs:{shape:Oa.expandShapeToKeepDim(p,l)}})}else g=Zg({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class wy{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:i,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[i,a];const s="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${s} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class _y{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,De.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const i=e[e.length-1],a=Math.ceil(i/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const s=this.outputShape,o=s.length,l=xd(o),u=bf("coords",o);let c,h;if(1===a){h=o+1;const e=xd(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=bf("sourceLocR",h-1).concat("inIdx.r"),g=bf("sourceLocG",h-1).concat("inIdx.g"),y=bf("sourceLocB",h-1).concat("inIdx.b"),x=bf("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",b=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,_=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${_}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${s[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${s[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${b}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Sy(e,t,n,r=null){let i=t.shape[0],a=t.shape[1];null!=r&&(i=r.shape[0],a=r.shape[1]);const s=Oa.computeOptimalWindowSize(a),o={windowSize:s,inSize:a,batchSize:i,outSize:Math.ceil(a/s)},l=new wy(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=Sy(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function Ty(e,t,n,r=null){const i=null!=r?r.shape:t.shape,a=i[i.length-1],s=Oa.computeOptimalWindowSize(a),o=new _y(i,s,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){const r=Ty(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function Ey(e,t,n,r){const i=[n];if(Oa.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),i,t.shape.length),!se().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let s=t;null!==a&&a.isPacked&&(s=e.unpackTensor(t),n.push(s));const[o,l]=Oa.computeOutAndReduceShapes(s.shape,i),u=De.sizeFromShape(l),c=Zg({inputs:{x:s},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=Sy(e,c,r);n.push(h);const p=Zg({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return Ty(e,t,r)}const My={kernelName:"ArgMax",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:a}=r;let s=De.parseAxisParam(a,i.shape);const o=Oa.getAxesPermutation(s,i.shape.length);let l=i;const u=[];null!=o&&(l=ly({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),s=Oa.getInnerMostAxes(s.length,l.shape.length)),Oa.assertAxesAreInnerMostDims("argMax",[s[0]],l.shape.length);const c=Ey(n,l,s[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};const Cy={kernelName:"ArgMin",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:a}=r;let s=De.parseAxisParam(a,i.shape);const o=Oa.getAxesPermutation(s,i.shape.length);let l=i;const u=[];null!=o&&(l=ly({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),s=Oa.getInnerMostAxes(s.length,l.shape.length)),Oa.assertAxesAreInnerMostDims("argMin",[s[0]],l.shape.length);const c=Ey(n,l,s[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},Iy={kernelName:"Asin",backendName:"webgl",kernelFunc:Lf({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"})},ky={kernelName:"Asinh",backendName:"webgl",kernelFunc:Lf({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"})},Ay={kernelName:"Atan",backendName:"webgl",kernelFunc:Lf({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"})},Ny={kernelName:"Atan2",backendName:"webgl",kernelFunc:Of({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"})},Ry={kernelName:"Atanh",backendName:"webgl",kernelFunc:Lf({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"})};class Ly{constructor(e,t,n,r=!1,i=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,s=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${s}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?i?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const v=4*Math.floor(a/4),b=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class Oy{constructor(e,t,n,r=!1,i=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,s=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let v="0.0";if(x||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${s}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?i?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const w=4*Math.floor(a/4),_=a%4,S=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${s}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n          setOutput(${b});\n        }\n      }\n    `}}const Py={kernelName:"AvgPool",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t;df(i,"avgPool");const{filterSize:a,strides:s,pad:o,dimRoundingMode:l}=r;De.assert(Oa.eitherStridesOrDilationsAreOne(s,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const u=Oa.computePool2DInfo(i.shape,a,s,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&De.arraysEqual(u.inShape,u.outShape))return Sf({inputs:{x:i},backend:n});const c=new Ly(u,"avg",!1);return n.runWebGLProgram(c,[i],"float32")}};const Dy={kernelName:"AvgPool3D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{filterSize:a,strides:s,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=Oa.computePool3DInfo(i.shape,a,s,[1,1,1],o,l,u),h=new Oy(c,"avg",!1);return n.runWebGLProgram(h,[i],"float32")}};class Fy{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,i=e.strideWidth,a=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${s}) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $y{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,i=e.strideDepth,a=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${i}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const By={kernelName:"AvgPool3DGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,input:a}=t,s=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Oa.computePool3DInfo(s.shape,o,l,[1,1,1],u,c),p=new $y(h);return n.runWebGLProgram(p,[i],s.dtype)}};const zy={kernelName:"AvgPoolGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,input:a}=t,s=a;df([i,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Oa.computePool2DInfo(s.shape,o,l,1,u),h=new Fy(c);return n.runWebGLProgram(h,[i],s.dtype)}};const Uy={kernelName:"BatchMatMul",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:i,b:a}=t,{transposeA:s,transposeB:o}=r;return cy({a:i,b:a,transposeA:s,transposeB:o,backend:n})}};class Vy{constructor(e,t,n,r,i,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Oa.assertAndGetBroadcastShape(e,t),Oa.assertAndGetBroadcastShape(e,n);let s="0.0";null!=r&&(Oa.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="1.0";null!=i&&(Oa.assertAndGetBroadcastShape(e,i),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${s};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Wy{constructor(e,t,n,r,i,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Oa.assertAndGetBroadcastShape(e,t),Oa.assertAndGetBroadcastShape(e,n);let s="vec4(0.0)";null!=r&&(Oa.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=i&&(Oa.assertAndGetBroadcastShape(e,i),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${s};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Hy={kernelName:"FusedBatchNorm",backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:i,variance:a,offset:s,scale:o}=e;De.assert(i.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),De.assert(null==s||i.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),De.assert(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,i,a];let c=null;null!=s&&(c=s.shape,u.push(s));let h=null;null!=o&&(h=o.shape,u.push(o));const p=se().getBool("WEBGL_PACK_NORMALIZATION")?new Wy(r.shape,i.shape,a.shape,c,h,l):new Vy(r.shape,i.shape,a.shape,c,h,l);return t.runWebGLProgram(p,u,u[0].dtype)}};class Gy{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=xd(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return jy.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${jy[t]} = start[${t}] + coords.${jy[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const jy=["x","y","z","w","u","v"];class qy{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=xd(this.rank),n=bf("coords",this.rank),r=bf("sourceLoc",this.rank),i=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${i})`,s=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${s}\n        ${o}\n        setOutput(result);\n      }\n    `}}function Xy(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{begin:a,size:s}=r,[o,l]=ga.parseSliceParams(i,a,s);if(ga.assertParamsValid(i,o,l),0===De.sizeFromShape(l))return n.makeTensorInfo(l,i.dtype,[]);if(n.shouldExecuteOnCPU([i])||"string"===i.dtype){const e=n.texData.get(i.dataId),t=Lg(e.values,o,l,i.shape,i.dtype);return n.makeTensorInfo(l,i.dtype,t)}const{isPacked:u}=n.texData.get(i.dataId),c=ga.isSliceContinous(i.shape,o,l);if(u||!c){const e=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qy(l):new Gy(l),t=[o];return n.runWebGLProgram(e,[i],i.dtype,t)}return n.uploadToGPU(i.dataId),function(e,t,n,r){const i=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),s=r.texData.get(a.dataId);Object.assign(s,i),s.refCount=1,s.shape=n,s.dtype=e.dtype;let o=ga.computeFlatOffset(t,De.computeStrides(e.shape));i.slice&&(o+=i.slice.flatOffset),s.slice={flatOffset:o,origDataId:i.slice&&i.slice.origDataId||e.dataId};const l=r.dataRefCount.get(s.slice.origDataId)||1;return r.dataRefCount.set(s.slice.origDataId,l+1),a}(i,o,l,n)}const Ky={kernelName:"Slice",backendName:"webgl",kernelFunc:Xy},Yy={kernelName:"BatchToSpaceND",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{blockShape:a,crops:s}=r;De.assert(i.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=Oa.getReshaped(i.shape,a,o),u=Oa.getPermuted(l.length,a.length),c=Oa.getReshapedPermuted(i.shape,a,o),h=Oa.getSliceBeginCoords(s,a.length),p=Oa.getSliceSize(c,s,a.length),d=[],f=Zg({inputs:{x:i},backend:n,attrs:{shape:l}}),m=ly({inputs:{x:f},backend:n,attrs:{perm:u}}),g=Zg({inputs:{x:m},backend:n,attrs:{shape:c}}),y=Xy({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const Zy={kernelName:"Bincount",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,weights:a}=t,{size:s}=r,o=n.readSync(i.dataId),l=n.readSync(a.dataId),u=rg(o,l,a.dtype,a.shape,s);return n.makeTensorInfo([s],a.dtype,u)}};const Jy={kernelName:"BroadcastArgs",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:i}=t,a=n.readSync(r.dataId),s=n.readSync(i.dataId),o=Oa.assertAndGetBroadcastShape(Array.from(a),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Qy=Of({opSnippet:"return float(a != b);",cpuKernelImpl:Eg,dtype:"bool"}),ex={kernelName:"NotEqual",backendName:"webgl",kernelFunc:Qy};function tx(e){const{inputs:t,backend:n}=e,{input:r}=t;return Sf({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const nx={kernelName:"Real",backendName:"webgl",kernelFunc:tx};function rx(e,t){const n=new Nf(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const ix={kernelName:"Cast",backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:i}=t,{x:a}=n,{dtype:s}=i;if("complex64"===s){if("complex64"===a.dtype)return Sf({inputs:{x:a},backend:r});const t=tl(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),i=Ef({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),i}if("complex64"===a.dtype){const t=tx({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:s}});return r.disposeIntermediateTensorInfo(t),n}if(!De.hasEncodingLoss(a.dtype,s)){const e=Sf({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,i]=ag(e,a.shape,a.dtype,s);return r.makeTensorInfo(t,n,i)}if("int32"===s)return rx(a,r);if("bool"===s){const e=r.makeTensorInfo([],"bool",De.getTypedArrayFromDType("bool",1)),t=Qy({inputs:{a:a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}},ax={kernelName:"Ceil",backendName:"webgl",kernelFunc:Lf({opSnippet:"return ceil(x);",packedOpSnippet:"return ceil(x);",cpuKernelImpl:sg})};class sx{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class ox{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const lx={kernelName:"ClipByValue",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{clipValueMin:a,clipValueMax:s}=r;let o;o=se().getBool("WEBGL_PACK_CLIP")?new ox(i.shape):new sx(i.shape);const l=[[a],[s]];return n.runWebGLProgram(o,[i],i.dtype,l)}};class ux{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function cx(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const hx={kernelName:"ComplexAbs",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,i=n.texData.get(r.dataId),a=new ux(r.shape),s=[cx(r,i.complexTensorInfos.real),cx(r,i.complexTensorInfos.imag)];return n.runWebGLProgram(a,s,s[0].dtype)}};class px{constructor(e){this.outputShape=[],this.outputShape=Oa.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,i=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${i}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class dx{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Oa.computeOutShape(e,t);const n=this.outputShape,r=n.length,i=xd(r),a=bf("coords",r),s=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=s[t],u=s.slice(-2),c=s.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${fx(s,l,t)}),\n            vec2(${fx(u,l,t)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${fx(s,l,d)}),\n          vec2(${fx(u,l,d)}));`,this.userCode=`\n      float getValue(${s.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function fx(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function mx(e){const{inputs:t,backend:n}=e,{input:r}=t;return Sf({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const gx={kernelName:"Imag",backendName:"webgl",kernelFunc:mx};function yx(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>tx({inputs:{input:e},backend:n}))),i=e.map((e=>mx({inputs:{input:e},backend:n}))),a=yx(r,t,n),s=yx(i,t,n),o=Ef({inputs:{real:a,imag:s},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),i.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}let i=n.shouldExecuteOnCPU(e);if("string"===r&&(i=!0),i){const i=e.map((e=>{const r=De.sizeFromShape(e.shape.slice(t));return Zg({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=i.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),s=Oa.computeOutShape(i.map((e=>e.shape)),1),o=1===i[0].shape[0],l=og(a,s,r,o),u=Oa.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=se().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>a){const r=[];for(let i=0;i<e.length;i+=a){const s=e.slice(i,i+a);r.push(yx(s,t,n))}const i=yx(r,t,n);for(const e of r)n.disposeIntermediateTensorInfo(e);return i}if(se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const i=new dx(e.map((e=>e.shape)),t);return n.runWebGLProgram(i,e,r)}const{tensors2D:s,outShape:o}=function(e,t,n){const r=Oa.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Zg({inputs:{x:e},attrs:{shape:[-1,De.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),l=new px(s.map((e=>e.shape))),u=n.runWebGLProgram(l,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=Zg({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),c}function xx(e){const{inputs:t,backend:n,attrs:r}=e,{axis:i}=r,a=De.parseAxisParam(i,t[0].shape)[0],s=Oa.computeOutShape(t.map((e=>e.shape)),a);if(0===De.sizeFromShape(s))return n.makeTensorInfo(s,t[0].dtype,[]);const o=t.filter((e=>De.sizeFromShape(e.shape)>0));if(1===o.length)return Sf({inputs:{x:o[0]},backend:n});const l=o.map((e=>e.shape));return Oa.assertParamsConsistent(l,a),yx(o,a,n)}const vx={kernelName:"Concat",backendName:"webgl",kernelFunc:xx};class bx{constructor(e,t=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,s=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,x=m?3:1;let v="",b="";n&&(v=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${v}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${b}\n        setOutput(result);\n      }\n    `}}class wx{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,i=e.strideDepth,a=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${i}, ${a}, ${s});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _x{constructor(e,t=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yf(this.outputShape.length);const a=e.padInfo.left,s=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===s){if(n<u&&(a%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const e=a%2==0?De.nearestLargerEven(o):o;o%2==0&&a%2==1||o%2!=0&&a%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(a%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",d="";n&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:i?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,d="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${d}\n         setOutput(result);\n       }\n     `}}class Sx{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=yf(this.outputShape.length);const{dataFormat:n}=t,r=td(),i="channelsLast"===n,a=i?1:2,s=i?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${s}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${i}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function Tx(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function Ex({x:e,filter:t,convInfo:n,backend:r,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:s=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[];if(null!=a){const e=Tx(a.shape,d);null!=e&&(a=Zg({inputs:{x:a},backend:r,attrs:{shape:e}}),m.push(a))}if(null!=i){const e=Tx(i.shape,d);null!=e&&(i=Zg({inputs:{x:i},backend:r,attrs:{shape:e}}),m.push(i))}if(!((1===h||1===p)&&c>1e3)&&u.isPacked&&d&&null!=u.texture&&l[2]%2!=0&&De.arraysEqual(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,De.assert(ef(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const d=Zg({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(d);const g=cy({a:h,b:d,backend:r,transposeA:false,transposeB:false,bias:i,activation:o,preluActivationWeights:a,leakyreluAlpha:s}),y=r.texData.get(g.dataId);De.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,y.shape=n.outShape,f=Sf({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const l=n.outHeight*n.outWidth,u=Zg({inputs:{x:e},backend:r,attrs:{shape:d?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=Zg({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=cy({a:d?u:c,b:d?c:u,transposeA:!d,transposeB:false,backend:r,bias:i,activation:o,preluActivationWeights:a,leakyreluAlpha:s});f=Zg({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function Mx({x:e,filter:t,convInfo:n,backend:r,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:s=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=l*u*c,g=p*h,y=[n.batchSize,m,g],x=[];if(null!=a){const e=Tx(a.shape,f);null!=e&&(a=Zg({inputs:{x:a},backend:r,attrs:{shape:e}}),x.push(a))}if(null!=i){const e=Tx(i.shape,f);null!=e&&(i=Zg({inputs:{x:i},backend:r,attrs:{shape:e}}),x.push(i))}const v=Zg({inputs:{x:t},backend:r,attrs:{shape:[1,m,De.sizeFromShape(t.shape)/m]}});x.push(v);const b=new Sx(y,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],_=r.runWebGLProgram(b,[e],"float32",w),S=Zg({inputs:{x:_},backend:r,attrs:{shape:y}});x.push(_),x.push(S);const T=null!=i,E=null!=a,M="leakyrelu"===o,C=o?Pf(o,!0):null,I=new Df(f?S.shape:v.shape,f?v.shape:S.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,T,C,E,M),k=f?[S,v]:[v,S];if(i&&k.push(i),E&&k.push(a),M){const e=r.makeTensorInfo([],"float32",De.createScalarValue(s,"float32"));k.push(e),x.push(e)}const A=r.runWebGLProgram(I,k,"float32"),N=Zg({inputs:{x:A},backend:r,attrs:{shape:n.outShape}});x.push(A);for(const e of x)r.disposeIntermediateTensorInfo(e);return N}const Cx={kernelName:"Conv2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:a}=t,{strides:s,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=Oa.convertConv2DDataFormat(l),p=Oa.computeConv2DInfo(i.shape,a.shape,s,u,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&se().getBool("WEBGL_EXP_CONV")){const e=new _x(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];d=n.runWebGLProgram(e,[i,a],"float32",t)}else if(se().getBool("WEBGL_CONV_IM2COL"))d=Mx({x:i,filter:a,convInfo:p,backend:n});else{const e=new bx(p);d=n.runWebGLProgram(e,[i,a],"float32")}else d=Ex({x:i,filter:a,convInfo:p,backend:n});const f=Zg({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class Ix{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,i=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${i};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kx{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,i=e.strideWidth,a="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ax{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,i=e.padInfo.front,a=e.padInfo.top,s=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${i};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${s};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Nx{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,i=e.strideDepth,a=e.strideHeight,s=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${i}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Rx={kernelName:"Conv2DBackpropFilter",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,dy:a}=t,{strides:s,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=Oa.convertConv2DDataFormat(l),p=Oa.computeConv2DInfo(i.shape,c,s,1,o,u,!1,h),d=new Ix(p);return n.runWebGLProgram(d,[i,a],"float32")}};const Lx={kernelName:"Conv2DBackpropInput",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,filter:a}=t,{inputShape:s,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=Oa.convertConv2DDataFormat(u),p=Oa.computeConv2DInfo(s,a.shape,o,1,l,c,!1,h),d=new kx(p);return n.runWebGLProgram(d,[i,a],"float32")}};const Ox={kernelName:"Conv3D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:a}=t,{strides:s,pad:o,dilations:l}=r,u=Oa.computeConv3DInfo(i.shape,a.shape,s,l,o),c=new wx(u);return n.runWebGLProgram(c,[i,a],"float32")}};const Px={kernelName:"Conv3DBackpropFilterV2",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,dy:a}=t,{strides:s,pad:o,filterShape:l}=r,u=Oa.computeConv3DInfo(i.shape,l,s,1,o),c=new Ax(u);return n.runWebGLProgram(c,[i,a],"float32")}};const Dx={kernelName:"Conv3DBackpropInputV2",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,filter:a}=t,{pad:s,strides:o,inputShape:l}=r,u=Oa.computeConv3DInfo(l,a.shape,o,1,s),c=new Nx(u);return n.runWebGLProgram(c,[i,a],"float32")}},Fx={kernelName:"Cos",backendName:"webgl",kernelFunc:Lf({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"})},$x={kernelName:"Cosh",backendName:"webgl",kernelFunc:Lf({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"})};class Bx{constructor(e,t,n,r,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,s,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const p="bilinear"===r?1:0,[d,f]=[s-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(s-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[x,v,b]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${v};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${i}));\n          return;\n        }\n        float in_x = ${b};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${i}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const zx={kernelName:"CropAndResize",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:i,boxes:a,boxInd:s}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new Bx(i.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[i,a,s],"float32")}};var Ux,Vx;(Vx=Ux||(Ux={})).Prod="*",Vx.Sum="+";class Wx{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const i=this.outputShape.length,a=this.op===Ux.Prod?"1.0":"0.0",s=n?a:`getX(${Hx(i,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${xd(i)} coords = getOutputCoords();\n        int end = ${Gx(i,"coords",this.op)};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${Gx(i,"coords",this.op)} = idx;\n          val ${this.op}= getX(${Hx(i,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function Hx(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Gx(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function jx(e,t,n,r,i,a){const s=t.shape.length,o=Oa.getAxesPermutation([r],s);let l=t;null!=o&&(l=ly({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=Oa.getInnerMostAxes(1,s)[0];if(u!==s-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=Sf({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new Wx(e,l.shape,!1,a),i=[[t]],s=h;h=n.runWebGLProgram(r,[h],h.dtype,i),n.disposeIntermediateTensorInfo(s)}if(i){const t=new Wx(e,l.shape,i,a),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=ly({inputs:{x:h},backend:n,attrs:{perm:Oa.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const qx={kernelName:"Cumprod",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:a,exclusive:s,reverse:o}=r;return jx(Ux.Prod,i,n,a,s,o)}};const Xx={kernelName:"Cumsum",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:a,exclusive:s,reverse:o}=r;return jx(Ux.Sum,i,n,a,s,o)}};const Kx={kernelName:"DenseBincount",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,weights:a}=t,{size:s,binaryOutput:o}=r;if(1===i.shape.length){const e=n.readSync(i.dataId),t=n.readSync(a.dataId),r=rg(e,t,a.dtype,a.shape,s);return n.makeTensorInfo([s],a.dtype,r)}if(2===i.shape.length){const e=n.bufferSync(i),t=n.bufferSync(a),r=ig(e,t,s,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}};class Yx{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Zx={kernelName:"DepthToSpace",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{blockSize:a,dataFormat:s}=r,o=i.shape[0],l=("NHWC"===s?i.shape[1]:i.shape[2])*a,u=("NHWC"===s?i.shape[2]:i.shape[3])*a,c=("NHWC"===s?i.shape[3]:i.shape[1])/(a*a),h=new Yx("NHWC"===s?[o,l,u,c]:[o,c,l,u],a,s);return n.runWebGLProgram(h,[i],i.dtype)}};class Jx{constructor(e,t=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yf(this.outputShape.length);const a=e.filterHeight,s=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class Qx{constructor(e,t=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yf(this.outputShape.length);const a=e.outChannels/e.inChannels,s=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(s%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=s%2==0?De.nearestLargerEven(l):l;l%2==0&&s%2==1||l%2!=0&&s%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,p+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(s%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let d="",f="";n&&(d=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const ev={kernelName:"DepthwiseConv2dNative",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:a}=t,{strides:s,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),De.assert(Oa.eitherStridesOrDilationsAreOne(s,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`));const h=Oa.computeConv2DInfo(i.shape,a.shape,s,c,o,u,!0);let p;p=se().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new Qx(h):new Jx(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[i,a],"float32",d)}};class tv{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,i=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${i};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class nv{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,i=e.strideWidth,a=t-1-e.padInfo.top,s=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const rv={kernelName:"DepthwiseConv2dNativeBackpropFilter",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,dy:a}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=Oa.computeConv2DInfo(i.shape,c,s,o,l,u,!0),p=new tv(h);return n.runWebGLProgram(p,[i,a],"float32")}};const iv={kernelName:"DepthwiseConv2dNativeBackpropInput",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,filter:a}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=Oa.computeConv2DInfo(c,a.shape,s,o,l,u,!0),p=new nv(h);return n.runWebGLProgram(p,[i,a],"float32")}};class av{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const sv={kernelName:"Diag",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,i=[...r.shape,...r.shape],a=De.sizeFromShape(r.shape),s=Zg({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new av(a),l=n.runWebGLProgram(o,[s],s.dtype),u=Zg({inputs:{x:l},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(l),u}};class ov{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:i,strideWidth:a,filterHeight:s,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${s}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const lv={kernelName:"Dilation2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:a}=t,{strides:s,pad:o,dilations:l}=r,u=Oa.computeDilation2DInfo(i.shape,a.shape,s,o,"NHWC",l);let c;const h=new ov(u);c=n.runWebGLProgram(h,[i,a],"float32");const p=Zg({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}};const uv={kernelName:"Einsum",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:i}=r,a=t,{allDims:s,summedDims:o,idDims:l}=Oa.decodeEinsumEquation(i,a.length);Oa.checkEinsumDimSizes(s.length,l,a);const{path:u,steps:c}=Oa.getEinsumComputePath(o,l),h=c.length;let p=null,d=s.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Oa.getEinsumPermutation(d,l[t]);let i;Oa.isIdentityPermutation(e)?i=a[t]:(i=ly({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(i));const s=i.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);De.arraysEqual(i.shape,s)||(i=Zg({inputs:{x:i},backend:n,attrs:{shape:s}}),f.push(i)),null===p?p=i:(p=qg({inputs:{a:i,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=sy({inputs:{x:p},backend:n,attrs:{axis:u[e]-(s.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},cv={kernelName:"Elu",backendName:"webgl",kernelFunc:Lf({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"})},hv={kernelName:"EluGrad",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:i}=t,a=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _f("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,i.shape):new xf("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,i.shape);return n.runWebGLProgram(a,[r,i],r.dtype)}},pv={kernelName:"Equal",backendName:"webgl",kernelFunc:Of({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:lg})},dv={kernelName:"Erf",backendName:"webgl",kernelFunc:Lf({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Oa.ERF_P};\n  float a1 = ${Oa.ERF_A1};\n  float a2 = ${Oa.ERF_A2};\n  float a3 = ${Oa.ERF_A3};\n  float a4 = ${Oa.ERF_A4};\n  float a5 = ${Oa.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`})},fv=Lf({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:ug,dtype:"float32"}),mv={kernelName:"Exp",backendName:"webgl",kernelFunc:fv};function gv(e){const{inputs:t,attrs:n,backend:r}=e,{dim:i}=n,{input:a}=t,s=a.shape.length,o=a.shape.slice();let l=i;return i<0&&(De.assert(-(s+1)<=i,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),l=s+i+1),o.splice(l,0,1),Zg({inputs:{x:a},backend:r,attrs:{shape:o}})}const yv={kernelName:"ExpandDims",backendName:"webgl",kernelFunc:gv},xv={kernelName:"Expm1",backendName:"webgl",kernelFunc:Lf({opSnippet:"return exp(x) - 1.0;",packedOpSnippet:"return exp(x) - 1.0;",cpuKernelImpl:cg})};class vv{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const i=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let s;if("real"===e)s="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);s="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${i};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${s}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function bv(e,t,n){const r=n.texData.get(e.dataId),i=De.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],s=Zg({inputs:{x:e},backend:n,attrs:{shape:[i/a,a]}}),o=s.shape,l=new vv("real",o,t),u=new vv("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),d=Ef({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=Zg({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(d),f}const wv={kernelName:"FFT",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return bv(r,!1,n)}};class _v{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Sv(e){const{backend:t,attrs:n}=e,{shape:r,value:i}=n;let{dtype:a}=n;if(a=a||De.inferDtype(i),"string"===a){const e=De.getArrayFromDType(a,De.sizeFromShape(r));return e.fill(i),t.makeTensorInfo(r,a,e)}{const e=new _v(r,i),n=[[i]];return t.runWebGLProgram(e,[],a,n)}}const Tv={kernelName:"Fill",backendName:"webgl",kernelFunc:Sv};class Ev{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Mv={kernelName:"FlipLeftRight",backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,i=new Ev(n.shape);return r.runWebGLProgram(i,[n],n.dtype)}},Cv={kernelName:"Floor",backendName:"webgl",kernelFunc:Lf({opSnippet:"return floor(x);",packedOpSnippet:"return floor(x);",cpuKernelImpl:hg})},Iv={kernelName:"FloorDiv",backendName:"webgl",kernelFunc:Of({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"})};class kv{constructor(e){this.variableNames=["A"];const t=td(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Av{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=td(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Nv={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:i}=t;const{numChannels:a}=r,s="undefined"!=typeof HTMLVideoElement&&i instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&i instanceof HTMLImageElement,[l,u]=s?[i.videoWidth,i.videoHeight]:[i.width,i.height],c=[u,l],h=[u,l,a];if(o||s){const e=se().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=Rv&&e===Lv||(Lv=e,Rv=document.createElement("canvas").getContext("2d",{willReadFrequently:Lv})),Rv.canvas.width=l,Rv.canvas.height=u,Rv.drawImage(i,0,0,l,u),i=Rv.canvas}const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=Id.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),i);const d=se().getBool("WEBGL_PACK")?new Av(h):new kv(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let Rv,Lv=se().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const Ov={kernelName:"FusedConv2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:a,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=Oa.convertConv2DDataFormat(c),g=Oa.computeConv2DInfo(i.shape,a.shape,l,h,u,p,!1,m);let y;const x=[],v=null!=s,b=null!=o,w="leakyrelu"===d,_=()=>{const e=[i,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=Zg({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(v&&e.push(t(s,c)),b&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",De.createScalarValue(f,"float32"));e.push(t),x.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&se().getBool("WEBGL_EXP_CONV")){const e=d?Pf(d,!0):null,t=new _x(g,v,e,b,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],i=_();y=n.runWebGLProgram(t,i,"float32",r)}else if(se().getBool("WEBGL_CONV_IM2COL"))y=Mx({x:i,filter:a,convInfo:g,backend:n,bias:s,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=d?Pf(d,!1):null,t=new bx(g,v,e,b,w),r=_();y=n.runWebGLProgram(t,r,"float32")}else y=Ex({x:i,filter:a,convInfo:g,backend:n,bias:s,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const S=Zg({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};const Pv={kernelName:"FusedDepthwiseConv2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:a,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,f=[];let m=c;null==m&&(m=[1,1]),De.assert(Oa.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=Oa.computeConv2DInfo(i.shape,a.shape,l,m,u,h,!0),y=se().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,x=p?Pf(p,y):null,v=[i,a],b=null!=s,w=null!=o,_="leakyrelu"===p;if(b&&v.push(s),w&&v.push(o),_){const e=n.makeTensorInfo([],"float32",De.createScalarValue(d,"float32"));v.push(e),f.push(e)}let S;S=y?new Qx(g,b,x,w,_):new Jx(g,b,x,w,_);const T=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],E=n.runWebGLProgram(S,v,"float32",T);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),E}};class Dv{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const i=xd(t.length),a=xd(n.length),s=this.sliceDim>1?"strides[j]":"strides",o=xd(r.length),l=r.length>1?"paramsShape[j]":"paramsShape";this.userCode=`\n        ${i} strides = ${i}(${this.strides});\n        ${o} paramsShape = ${o}(${this.paramsShape});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            out_of_bounds = out_of_bounds || index < 0;\n            out_of_bounds = out_of_bounds || index >= ${l};\n            flattenIndex += index * ${s};\n          }\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const Fv={kernelName:"GatherNd",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:i}=t,a=i.shape,s=a[a.length-1],o=De.sizeFromShape(r.shape),[l,u,c,h]=Oa.prepareAndValidate(r,i),p=Zg({inputs:{x:i},backend:n,attrs:{shape:[u,s]}}),d=Zg({inputs:{x:r},backend:n,attrs:{shape:[De.sizeFromShape(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,i])||"string"===r.dtype){const e=n.readSync(i.dataId),t=n.bufferSync(r),a=pg(e,t,r.dtype,u,s,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,a.values)}const f=new Dv(s,h,[u,c],r.shape),m=n.runWebGLProgram(f,[d,p],d.dtype),g=Zg({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class $v{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=xd(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function Bv(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,indices:a}=t,{axis:s,batchDims:o}=r,l=De.parseAxisParam(s,i.shape)[0];if(se().get("DEBUG")){const e=n.readSync(a.dataId),t=i.shape[l];for(let n=0;n<e.length;++n){const r=e[n];De.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const u=Oa.segment_util.collectGatherOpShapeInfo(i,a,l,o),c=De.sizeFromShape(a.shape),h=[],p=Zg({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=Zg({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(p),h.push(d);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([i,a])||"string"===i.dtype){const e=n.bufferSync(d),t=n.bufferSync(p),r=dg(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const m=new $v(p.shape,f),g=n.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=Zg({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const zv={kernelName:"GatherV2",backendName:"webgl",kernelFunc:Bv},Uv={kernelName:"Greater",backendName:"webgl",kernelFunc:Of({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:fg,dtype:"bool"})},Vv={kernelName:"GreaterEqual",backendName:"webgl",kernelFunc:Of({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:mg})};const Wv={kernelName:"IFFT",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return bv(r,!0,n)}},Hv={kernelName:"IsFinite",backendName:"webgl",kernelFunc:Lf({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"})},Gv={kernelName:"IsInf",backendName:"webgl",kernelFunc:Lf({opSnippet:"return float(isinf(x));",dtype:"bool"})},jv={kernelName:"IsNan",backendName:"webgl",kernelFunc:Lf({opSnippet:"return float(isnan(x));",dtype:"bool"})},qv={kernelName:"Less",backendName:"webgl",kernelFunc:Of({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:gg,dtype:"bool"})},Xv={kernelName:"LessEqual",backendName:"webgl",kernelFunc:Of({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:yg,dtype:"bool"})};const Kv={kernelName:"LinSpace",backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:i,num:a}=n,s=xg(r,i,a);return t.makeTensorInfo([s.length],"float32",s)}},Yv={kernelName:"Log",backendName:"webgl",kernelFunc:Lf({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:vg})},Zv={kernelName:"Log1p",backendName:"webgl",kernelFunc:Lf({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"})},Jv={kernelName:"LogicalAnd",backendName:"webgl",kernelFunc:Of({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"})},Qv={kernelName:"LogicalNot",backendName:"webgl",kernelFunc:Lf({opSnippet:"return float(!(x >= 1.0));"})},eb={kernelName:"LogicalOr",backendName:"webgl",kernelFunc:Of({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"})};class tb{constructor(e,t,n,r,i){this.variableNames=["x"],this.outputShape=[];const a=t,s=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===i?`inversesqrt(${l})`:1===i?`1.0/(${l})`:`exp(log(${l}) * float(-${i}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${s}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class nb{constructor(e,t,n,r,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,s=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===i?`inversesqrt(${l})`:1===i?`1.0/(${l})`:`exp(log(${l}) * float(-${i}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const rb={kernelName:"LRN",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{depthRadius:a,bias:s,alpha:o,beta:l}=r,u=se().getBool("WEBGL_PACK_NORMALIZATION")?new nb(i.shape,a,s,o,l):new tb(i.shape,a,s,o,l);return n.runWebGLProgram(u,[i],i.dtype)}};class ib{constructor(e,t,n,r,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=i,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${i})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${i});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const ab={kernelName:"LRNGrad",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:i,y:a,dy:s}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new ib(i.shape,o,l,u,c);return n.runWebGLProgram(h,[i,a,s],i.dtype)}};function sb(e,t,n,r){const i=De.sizeFromShape(t),a=Zg({inputs:{x:e},attrs:{shape:[De.sizeFromShape(e.shape)/i,i]},backend:r}),s=ty(a,e.dtype,"max",r),o=Zg({inputs:{x:s},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),o}function ob(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{reductionIndices:a,keepDims:s}=r,o=i.shape.length,l=De.parseAxisParam(a,i.shape);let u=l;const c=Oa.getAxesPermutation(u,o),h=null!=c,p=n.shouldExecuteOnCPU([i]);let d=i;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=i.shape[c[e]];const r=Gg(e,i.shape,i.dtype,c,t);d=n.makeTensorInfo(t,i.dtype);n.texData.get(d.dataId).values=r}else d=iy(i,c,n);u=Oa.getInnerMostAxes(u.length,o)}Oa.assertAxesAreInnerMostDims("max",u,o);const[f,m]=Oa.computeOutAndReduceShapes(d.shape,u);let g,y=f;if(s&&(y=Oa.expandShapeToKeepDim(f,l)),p){const e=n.texData.get(d.dataId).values,t=bg(e,De.sizeFromShape(m),y,i.dtype);g=n.makeTensorInfo(y,i.dtype);n.texData.get(g.dataId).values=t}else g=sb(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const lb={kernelName:"Max",backendName:"webgl",kernelFunc:ob},ub={kernelName:"Maximum",backendName:"webgl",kernelFunc:Of({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:wg})};const cb={kernelName:"MaxPool",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t;df(i,"maxPool");const{filterSize:a,strides:s,pad:o,dimRoundingMode:l}=r;De.assert(Oa.eitherStridesOrDilationsAreOne(s,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const u=Oa.computePool2DInfo(i.shape,a,s,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&De.arraysEqual(u.inShape,u.outShape))return Sf({inputs:{x:i},backend:n});const c=new Ly(u,"max",!1);return n.runWebGLProgram(c,[i],i.dtype)}};const hb={kernelName:"MaxPool3D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{filterSize:a,strides:s,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=Oa.computePool3DInfo(i.shape,a,s,[1,1,1],o,u,l),h=new Oy(c,"max",!1);return n.runWebGLProgram(h,[i],i.dtype)}};class pb{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,i=e.effectiveFilterHeight,a=e.effectiveFilterWidth,s=i-1-e.padInfo.top,o=a-1-e.padInfo.left,l=i*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class db{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,d=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${s}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const fb={kernelName:"MaxPool3DGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,input:a}=t,s=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Oa.computePool3DInfo(s.shape,o,l,[1,1,1],u,c),p=new Oy(h,"max",!0),d=n.runWebGLProgram(p,[s],s.dtype),f=new db(h),m=n.runWebGLProgram(f,[i,d],s.dtype);return n.disposeIntermediateTensorInfo(d),m}};const mb={kernelName:"MaxPoolGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,input:a,output:s}=t,o=a;df([a,s],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=Oa.computePool2DInfo(o.shape,l,u,1,c,h),d=new Ly(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new pb(p),g=n.runWebGLProgram(m,[i,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};function gb(e,t,n,r){let i=new Ly(n,"max",!1);const a=r.runWebGLProgram(i,[e],"float32");i=new Ly(n,"max",!0,!0,t);return[a,r.runWebGLProgram(i,[e],"float32")]}const yb={kernelName:"MaxPoolWithArgmax",backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:i,strides:a,pad:s,includeBatchInIndex:o}=t,l=n;De.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];De.assert(Oa.eitherStridesOrDilationsAreOne(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Oa.computePool2DInfo(r.shape,i,a,u,s),[h,p]=gb(r,o,c,l);return[h,p]}};function xb(e,t,n,r){const i=De.sizeFromShape(t),a=Zg({inputs:{x:e},attrs:{shape:[De.sizeFromShape(e.shape)/i,i]},backend:r}),s=ty(a,"float32","mean",r),o=Zg({inputs:{x:s},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),o}const vb={kernelName:"Mean",backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:i,axis:a}=t,s=n,o=r.shape.length,l=De.parseAxisParam(a,r.shape);let u=l;const c=Oa.getAxesPermutation(u,o),h=null!=c,p=s.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const e=s.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=Gg(e,r.shape,r.dtype,c,t);f=s.makeTensorInfo(t,r.dtype);s.texData.get(f.dataId).values=n}else f=iy(r,c,s);d.push(f),u=Oa.getInnerMostAxes(u.length,o)}Oa.assertAxesAreInnerMostDims("sum",u,o);const[m,g]=Oa.computeOutAndReduceShapes(f.shape,u);let y=m;i&&(y=Oa.expandShapeToKeepDim(m,l));const x=xb(f,g,y,s);for(const e of d)s.disposeIntermediateTensorInfo(e);return x}};const bb={kernelName:"Min",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:a,keepDims:s}=r,o=i.shape.length,l=De.parseAxisParam(a,i.shape);let u=l;const c=Oa.getAxesPermutation(u,o);let h=i;null!=c&&(h=ly({inputs:{x:i},backend:n,attrs:{perm:c}}),u=Oa.getInnerMostAxes(u.length,i.shape.length)),Oa.assertAxesAreInnerMostDims("min",u,o);const[p,d]=Oa.computeOutAndReduceShapes(h.shape,u),f=Zg({inputs:{x:h},backend:n,attrs:{shape:[-1,De.sizeFromShape(d)]}}),m=ty(f,f.dtype,"min",n);let g;if(s){g=Zg({inputs:{x:m},backend:n,attrs:{shape:Oa.expandShapeToKeepDim(p,l)}})}else g=Zg({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},wb={kernelName:"Minimum",backendName:"webgl",kernelFunc:Of({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:_g})};class _b{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,i=xd(r),a=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${i} start = ${i}(${a});\n      ${i} end = ${i}(${s});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${i} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Sb{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,i=xd(r),a=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=bf("rc",r),l=bf("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${i} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${i} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${i} source = rc;\n        ${i} lt = ${i}(lessThan(source, start));\n        ${i} gte = ${i}(greaterThanEqual(source, end));\n        ${i} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${i} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${i} start = ${i}(${a});\n      const ${i} end = ${i}(${s});\n\n      void main() {\n        ${i} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Tb={kernelName:"MirrorPad",backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:i,mode:a}=n,s=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Sb(r.shape,i,a):new _b(r.shape,i,a);return t.runWebGLProgram(s,[r],r.dtype)}},Eb={kernelName:"Mod",backendName:"webgl",kernelFunc:Of({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"})};class Mb{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const Cb=Of({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Ib={kernelName:"RealDiv",backendName:"webgl",kernelFunc:Cb},kb=Of({opSnippet:"return a - b;",packedOpSnippet:"return a - b;",supportsComplex:!0,cpuKernelImpl:Vg}),Ab={kernelName:"Sub",backendName:"webgl",kernelFunc:kb};function Nb(e){const{inputs:t,backend:n,attrs:r}=e,{logits:i}=t,{dim:a}=r,s=De.parseAxisParam([a],i.shape),o=ob({inputs:{x:i},backend:n,attrs:{reductionIndices:s,keepDims:!1}}),l=Oa.expandShapeToKeepDim(o.shape,s),u=Zg({inputs:{x:o},backend:n,attrs:{shape:l}}),c=kb({inputs:{a:i,b:u},backend:n}),h=fv({inputs:{x:c},backend:n}),p=sy({inputs:{x:h},backend:n,attrs:{axis:s,keepDims:!1}}),d=Zg({inputs:{x:p},backend:n,attrs:{shape:l}}),f=Cb({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const Rb={kernelName:"Softmax",backendName:"webgl",kernelFunc:Nb};const Lb={kernelName:"Multinomial",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:i}=t,{numSamples:a,seed:s,normalized:o}=r,l=o?i:Nb({inputs:{logits:i},backend:n,attrs:{dim:i.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new Mb(u,c,a),p=[[s]],d=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),d}};const Ob={kernelName:"Neg",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,i]=Tg(e.values,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,t)}let i;return i=se().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Rf(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Nf(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(i,[r],r.dtype)}},Pb=$o.nonMaxSuppressionV3Impl;const Db={kernelName:"NonMaxSuppressionV3",backendName:"webgl",kernelFunc:function(e){Oa.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:a}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(i.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=Pb(u,c,s,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Fb=$o.nonMaxSuppressionV4Impl;const $b={kernelName:"NonMaxSuppressionV4",backendName:"webgl",kernelFunc:function(e){Oa.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:a}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(i.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=Fb(c,h,s,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},Bb=$o.nonMaxSuppressionV5Impl;const zb={kernelName:"NonMaxSuppressionV5",backendName:"webgl",kernelFunc:function(e){Oa.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:a}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(i.dataId),h=n.readSync(a.dataId),p=s,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=Bb(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class Ub{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Vb={kernelName:"OneHot",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:i}=t,{dtype:a,depth:s,onValue:o,offValue:l}=r,u=De.sizeFromShape(i.shape),c=new Ub(u,s,o,l),h=Zg({inputs:{x:i},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const d=Zg({inputs:{x:p},backend:n,attrs:{shape:[...i.shape,s]}});return n.disposeIntermediateTensorInfo(p),d}};function Wb(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=tx({inputs:{input:r},backend:n}),t=Wb({inputs:{x:e},backend:n}),i=mx({inputs:{input:r},backend:n}),a=Wb({inputs:{x:i},backend:n}),s=Ef({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),s}return Sv({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Hb={kernelName:"ZerosLike",backendName:"webgl",kernelFunc:Wb};const Gb={kernelName:"OnesLike",backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:i}=n;if("string"===i.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===i.dtype){const t=tx({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r}),a=mx({inputs:{input:i},backend:r}),s=Wb({inputs:{x:a},backend:r}),o=Ef({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),o}return Sv({attrs:{shape:i.shape,dtype:i.dtype,value:1},backend:r})}};const jb={kernelName:"Pack",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:i}=r;if(1===t.length)return gv({inputs:{input:t[0]},backend:n,attrs:{dim:i}});const a=t[0].shape,s=t[0].dtype;t.forEach((e=>{De.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),De.assert(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=xx({inputs:t.map((e=>{const t=gv({inputs:{input:e},backend:n,attrs:{dim:i}});return o.push(t),t})),backend:n,attrs:{axis:i}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class qb{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,i=xd(r),a=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${i} start = ${i}(${a});\n      ${i} end = ${i}(${s});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${i} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Xb{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,i=xd(r),a=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=bf("rc",r),l=bf("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${i} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${i} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${i} start = ${i}(${a});\n      const ${i} end = ${i}(${s});\n\n      void main() {\n        ${i} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const Kb=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{paddings:a,constantValue:s}=r;if(0===De.sizeFromShape(i.shape)){return Sv({backend:n,attrs:{shape:a.map(((e,t)=>e[0]+i.shape[t]+e[1])),value:s,dtype:i.dtype}})}const o=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Xb(i.shape,a,s):new qb(i.shape,a,s),l=[[s]];return n.runWebGLProgram(o,[i],i.dtype,l)},Yb={kernelName:"PadV2",backendName:"webgl",kernelFunc:Kb},Zb={kernelName:"Pow",backendName:"webgl",kernelFunc:Of({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"})};const Jb={kernelName:"Prod",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:a,keepDims:s}=r,o=i.shape.length,l=[],u=De.parseAxisParam(a,i.shape);let c=u;const h=Oa.getAxesPermutation(c,o);let p,d=i;if(null!=h&&(d=ly({inputs:{x:i},backend:n,attrs:{perm:h}}),c=Oa.getInnerMostAxes(c.length,o),l.push(d)),Oa.assertAxesAreInnerMostDims("prod",c,o),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:r,outDtype:i}=Mg(d.shape,d.dtype,e,c);p=n.makeTensorInfo(r,i,t)}else{const[e,t]=Oa.computeOutAndReduceShapes(d.shape,c),r=De.sizeFromShape(t),a=Zg({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),s=ty(a,nn(i.dtype),"prod",n);p=Zg({inputs:{x:s},backend:n,attrs:{shape:e}}),l.push(a),l.push(s)}if(s){l.push(p);const e=Oa.expandShapeToKeepDim(p.shape,u);p=Zg({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const Qb={kernelName:"RaggedTensorToTensor",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:i,values:a,defaultValue:s,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(i.dataId),c=n.readSync(a.dataId),h=n.readSync(s.dataId),p=o.map((e=>n.readSync(e.dataId))),d=o.map((e=>e.shape)),[f,m]=Cg(u,i.shape,c,a.shape,a.dtype,h,s.shape,p,d,l);return n.makeTensorInfo(f,a.dtype,m)}},ew=e=>{const{backend:t,attrs:n}=e,{start:r,stop:i,step:a,dtype:s}=n,o=Ig(r,i,a,s);return t.makeTensorInfo([o.length],s,o)},tw={kernelName:"Range",backendName:"webgl",kernelFunc:ew},nw={kernelName:"Reciprocal",backendName:"webgl",kernelFunc:Lf({opSnippet:"return 1.0 / x;"})},rw={kernelName:"Relu",backendName:"webgl",kernelFunc:Lf({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"})},iw={kernelName:"Relu6",backendName:"webgl",kernelFunc:Lf({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"})};class aw{constructor(e,t,n,r,i){this.variableNames=["A"],this.outputShape=[];const[a,s,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=i?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class sw{constructor(e,t,n,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,s,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=i?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const ow={kernelName:"ResizeBilinear",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i}=t,{alignCorners:a,halfPixelCenters:s,size:o}=r,[l,u]=o,c=se().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new sw(i.shape,l,u,a,s):new aw(i.shape,l,u,a,s);return n.runWebGLProgram(c,[i],"float32")}};class lw{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,i]=t,[,a,s]=e,o=[n&&a>1?r-1:r,n&&s>1?i-1:i],l=[n&&a>1?a-1:a,n&&s>1?s-1:s],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const uw={kernelName:"ResizeBilinearGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i,dy:a}=t,{alignCorners:s}=r,o=new lw(a.shape,i.shape,s);return n.runWebGLProgram(o,[a],a.dtype)}};class cw{constructor(e,t,n,r,i){this.variableNames=["A"],this.outputShape=[];const[a,s,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=i?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class hw{constructor(e,t,n,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,s,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=i?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const pw={kernelName:"ResizeNearestNeighbor",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i}=t,{alignCorners:a,halfPixelCenters:s,size:o}=r,[l,u]=o,c=se().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new hw(i.shape,l,u,a,s):new cw(i.shape,l,u,a,s);return n.runWebGLProgram(c,[i],i.dtype)}};class dw{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,i]=t,[,a,s]=e,o=[n&&a>1?r-1:r,n&&s>1?i-1:i],l=[n&&a>1?a-1:a,n&&s>1?s-1:s],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${i}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const fw={kernelName:"ResizeNearestNeighborGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i,dy:a}=t,{alignCorners:s}=r,o=new dw(a.shape,i.shape,s);return n.runWebGLProgram(o,[a],a.dtype)}};class mw{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),i=xd(n);this.userCode=`\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class gw{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=bf("rc",n),i=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,s=xd(n);function o(n){const r=e.map(((r,i)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(i,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${i}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${s} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${i}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${i}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const yw={kernelName:"Reverse",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{dims:a}=r,s=i.shape.length,o=De.parseAxisParam(a,i.shape);if(0===s)return Sf({inputs:{x:i},backend:n});const l=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gw(i.shape,o):new mw(i.shape,o);return n.runWebGLProgram(l,[i],i.dtype)}};class xw{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let i="";i="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${i}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const vw={kernelName:"RotateWithOffset",backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:i,fillValue:a,center:s}=t,o=n,l=new xw(r.shape,a),[u,c]=Oa.getImageCenter(s,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(i),Math.cos(i)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},bw={kernelName:"Round",backendName:"webgl",kernelFunc:Lf({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"})},ww={kernelName:"Rsqrt",backendName:"webgl",kernelFunc:Lf({opSnippet:"return inversesqrt(x);",cpuKernelImpl:kg})};class _w{constructor(e,t,n,r,i,a,s=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=xd(i.length),l=xd(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${i});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const Sw={kernelName:"ScatterNd",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:i,updates:a}=t,{shape:s}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Oa.calculateShapes(a,i,s),p=[h/u,u];if(0===h)return n.makeTensorInfo(s,i.dtype);const d=Zg({inputs:{x:i},backend:n,attrs:{shape:[l,o]}}),f=Zg({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new _w(l,o,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),x=Zg({inputs:{x:y},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),x}};class Tw{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===se().getNumber("WEBGL_VERSION")?"while (left < right) {":i,s="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${s} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const Ew={kernelName:"SearchSorted",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:i,values:a}=t,{side:s}=r,o=new Tw(i.shape[0],i.shape[1],a.shape[1],s),l=[[i.shape[1]]];return n.runWebGLProgram(o,[i,a],"int32",l)}};class Mw{constructor(e,t,n){let r,i;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)i="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],s=[];for(let r=0;r<t.length;r++)s.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),i=s.join()}const a=xd(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${i}));\n        } else {\n          setOutput(getB(${i}));\n        }\n      }\n    `}}const Cw={kernelName:"Select",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:i,e:a}=t,s=new Mw(r.shape.length,i.shape,i.shape.length);return n.runWebGLProgram(s,[r,i,a],tn(i.dtype,a.dtype))}},Iw={kernelName:"Selu",backendName:"webgl",kernelFunc:Lf({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Oa.SELU_SCALEALPHA};\n  float scale = ${Oa.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`})},kw={kernelName:"Sigmoid",backendName:"webgl",kernelFunc:Lf({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Ng})},Aw={kernelName:"Sign",backendName:"webgl",kernelFunc:Lf({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"})},Nw={kernelName:"Sin",backendName:"webgl",kernelFunc:Lf({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"})},Rw={kernelName:"Sinh",backendName:"webgl",kernelFunc:Lf({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"})},Lw={kernelName:"Softplus",backendName:"webgl",kernelFunc:Lf({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"})},Ow={kernelName:"SpaceToBatchND",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{blockShape:a,paddings:s}=r;De.assert(i.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...s);for(let e=1+a.length;e<i.shape.length;++e)l.push([0,0]);const u=[],c=Kb({inputs:{x:i},backend:n,attrs:{paddings:l,constantValue:0}}),h=Oa.getReshaped(c.shape,a,o,!1),p=Oa.getPermuted(h.length,a.length,!1),d=Oa.getReshapedPermuted(c.shape,a,o,!1),f=Zg({inputs:{x:c},backend:n,attrs:{shape:h}}),m=ly({inputs:{x:f},backend:n,attrs:{perm:p}}),g=Zg({inputs:{x:m},backend:n,attrs:{shape:d}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const Pw={kernelName:"SparseFillEmptyRows",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:i,denseShape:a,defaultValue:s}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==i.shape.length)throw new Error(`Values must be a vector, saw:\n         ${i.shape}`);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${s.shape}`);const o=n.readSync(r.dataId),l=n.readSync(i.dataId),u=n.readSync(a.dataId),c=n.readSync(s.dataId)[0],[h,p,d,f,m]=Og(o,r.shape,r.dtype,l,i.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],i.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const Dw={kernelName:"SparseReshape",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:i,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==i.shape.length)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const s=Array.from(n.readSync(i.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=Pg(o,r.shape,r.dtype,s,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};const Fw={kernelName:"SparseSegmentMean",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:i,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${i.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const s=n.readSync(r.dataId),o=n.readSync(i.dataId),l=n.readSync(a.dataId),[u,c]=Dg(s,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const $w={kernelName:"SparseSegmentSum",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:i,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${i.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const s=n.readSync(r.dataId),o=n.readSync(i.dataId),l=n.readSync(a.dataId),[u,c]=Dg(s,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}};const Bw={kernelName:"SparseToDense",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:i,sparseValues:a,defaultValue:s}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=Oa.calculateShapes(a,i,o);if("string"===a.dtype){const e=n.bufferSync(i),t=n.bufferSync(a),r=De.decodeString(n.readSync(s.dataId)[0]),d=Ag(e,t,o,p,c,u,l,h,r,false);return n.makeTensorInfo(o,d.dtype,d.values)}const d=new _w(u,l,i.shape.length,a.shape.length,h,[p,1],false),f=n.runWebGLProgram(d,[a,i,s],a.dtype),m=Zg({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}};const zw={kernelName:"SplitV",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{numOrSizeSplits:a,axis:s}=r,o=De.parseAxisParam(s,i.shape)[0],l=Oa.prepareSplitSize(i,a,o),u=i.shape.length,c=new Array(u).fill(0),h=i.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=Xy({inputs:{x:i},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},Uw={kernelName:"Sqrt",backendName:"webgl",kernelFunc:Lf({opSnippet:"return sqrt(x);",packedOpSnippet:"return sqrt(x);",cpuKernelImpl:Fg})},Vw={kernelName:"Square",backendName:"webgl",kernelFunc:Lf({opSnippet:"return x * x;"})},Ww={kernelName:"SquaredDifference",backendName:"webgl",kernelFunc:Of({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"})};const Hw={kernelName:"Step",backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,i=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new Nf(r.shape,i);return n.runWebGLProgram(a,[r],r.dtype)}};class Gw{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,i=xd(n.length),a=xd(n.length);let s="";if(1===r)s="coords * strides + begin";else{let e=0;s=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${i} begin = ${i}(${e});\n      ${i} strides = ${i}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}const jw={kernelName:"StridedSlice",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{begin:a,end:s,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:v,strides:b}=ga.sliceInfo(i.shape,a,s,o,l,u,c,h,p);let w;if(m)w=Zg({inputs:{x:i},backend:n,attrs:{shape:f}});else if(g||y){De.assert(i.shape.length>=1,(()=>`Input must have rank at least 1, got: ${i.shape.length}`));const e=ga.computeOutShape(x,v,b),t=Xy({inputs:{x:i},backend:n,attrs:{begin:x,size:e}});w=Zg({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([i])){const e=n.readSync(i.dataId),t=Ci(i.shape,i.dtype,e),r=$g(d,t,b,x);w=n.makeTensorInfo(f,i.dtype,r.values)}else{const e=new Gw(x,b,d);w=n.runWebGLProgram(e,[i],i.dtype)}}const _=Zg({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),_}};const qw={kernelName:"StringNGrams",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:i,nGramWidths:a,leftPad:s,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=Bg(p,d,i,a,s,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const Xw={kernelName:"StringSplit",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:i}=r,{input:a,delimiter:s}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==s.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);const o=n.readSync(a.dataId),l=n.readSync(s.dataId)[0],[u,c,h]=zg(o,l,i),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const Kw={kernelName:"StringToHashBucketFast",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:i}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const s=n.readSync(a.dataId),o=Ug(s,i);return n.makeTensorInfo(a.shape,"int32",o)}},Yw={kernelName:"Tan",backendName:"webgl",kernelFunc:Lf({opSnippet:"return tan(x);"})},Zw={kernelName:"Tanh",backendName:"webgl",kernelFunc:Lf({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"})};class Jw{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=xd(this.rank),i=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${i}));\n      }\n    `}}function Qw(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{reps:a}=r;if("string"===i.dtype||i.shape.length>5){const e=n.readSync(i.dataId),t="string"===i.dtype?e.map((e=>De.decodeString(e))):e,r=Ci(i.shape,i.dtype,t),s=Wg(r,a);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const s=new Jw(i.shape,a);return n.runWebGLProgram(s,[i],i.dtype)}const e_={kernelName:"Tile",backendName:"webgl",kernelFunc:Qw};class t_{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class n_{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function r_(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function i_(e){let t=1;for(;t<e;)t*=2;return t}const a_={kernelName:"TopK",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{k:a,sorted:s}=r,o=se().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=se().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=i.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([i])||c<o||a>l){const e=n.readSync(i.dataId),[t,r]=Hg(e,u,i.dtype,a,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,i.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[i,Sv({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(i.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(i):i,f=De.sizeFromShape(u)/c,m=Zg({inputs:{x:d},attrs:{shape:[f,c]},backend:n});p&&r_(n,d);const g=i_(a),y=i_(c);let x=null;const v=()=>null===x?[m,m]:[m,x],b=(e,t,r)=>{const i=v(),a=new t_(r),s=[[c],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(a,i,"int32",s),r_(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)b(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=v(),r=new n_([f,e/2]),i=[[c],[null===x?1:0],[g]],a=x;x=n.runWebGLProgram(r,t,"int32",i),r_(n,a);const s=g/2,o=2*s;for(let e=s;e>=1;e/=2)b(o,e,x.shape)}let w=x;x=Xy({inputs:{x:x},backend:n,attrs:{begin:0,size:[f,a]}}),r_(n,w);let _=Bv({inputs:{x:m,indices:x},backend:n,attrs:{axis:1,batchDims:1}});r_(n,m);const S=u.slice(0,-1);S.push(a),w=x,x=Zg({inputs:{x:x},attrs:{shape:S},backend:n}),r_(n,w);const T=_;return _=Zg({inputs:{x:_},attrs:{shape:S},backend:n}),r_(n,T),[_,x]}};class s_{constructor(e,t,n,r,i,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const s="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${i});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${i});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${s} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const o_={kernelName:"Transform",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:i,transforms:a}=t,{interpolation:s,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,p,d]=i.shape,[f,m]=null!=u?u:[h,p],g=new s_(h,p,s,o,l,[c,f,m,d]);return n.runWebGLProgram(g,[i,a],"float32")}};const l_={kernelName:"Unique",backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:i}=n,{x:a}=t;df(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=jg(s,i,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};const u_={kernelName:"Unpack",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:i}=t;let{axis:a}=r;a<0&&(a+=i.shape.length);const s=i,o=s.shape.length,l=i.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=s.shape[e]);const h=[],p=new Array(o).fill(0),d=s.shape.slice();d[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){p[a]=e;const t=Xy({inputs:{x:s},backend:n,attrs:{begin:p,size:d}}),r=Zg({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class c_{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,i=e.inSize,a=e.numSegments,s=a*Math.ceil(i/n);this.outputShape=[r,s];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";i%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return initializationValue;\n        }\n      `);let h="";i%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const h_={kernelName:"UnsortedSegmentSum",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,segmentIds:a}=t,{numSegments:s}=r,o=i.shape.length,l=[];let u=0;const c=Oa.getAxesPermutation([u],o);let h=i;null!=c&&(h=ly({inputs:{x:i},backend:n,attrs:{perm:c}}),l.push(h),u=Oa.getInnerMostAxes(1,o)[0]);const p=Oa.segment_util.computeOutShape(h.shape,u,s),d=De.sizeFromShape([h.shape[u]]),f=Zg({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});l.push(f);const m=nn(i.dtype),g=(e,t,r,i,a)=>{const s=e.shape[0],o=e.shape[1],u=Oa.segment_util.segOpComputeOptimalWindowSize(o,a),c=new c_({windowSize:u,inSize:o,batchSize:s,numSegments:a},t),h=n.compileAndRun(c,[e,r],i);if(l.push(h),h.shape[1]===a)return h;const p=ew({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=Qw({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});l.push(p),l.push(d);return g(h,t,d,i,a)},y=Zg({inputs:{x:g(f,"unsortedSegmentSum",a,m,s)},backend:n,attrs:{shape:p}});let x=y;if(null!=c){l.push(y);const e=Oa.getUndoAxesPermutation(c);x=ly({inputs:{x:x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},p_=[hy,py,dy,fy,my,xy,vy,by,My,Cy,Iy,ky,Ay,Ny,Ry,Py,Dy,By,zy,Uy,Hy,Yy,Zy,Jy,ix,ax,lx,Mf,hx,vx,Cx,Rx,Lx,Ox,Px,Dx,Fx,$x,zx,qx,Xx,Kx,Zx,ev,rv,iv,sv,lv,uv,cv,hv,pv,dv,mv,yv,xv,wv,Tv,Mv,Cv,Iv,Nv,Ov,Pv,Fv,zv,Uv,Vv,Tf,Wv,gx,Hv,Gv,jv,If,qv,Xv,Kv,Yv,Zv,Jv,Qv,eb,rb,ab,lb,ub,cb,hb,fb,mb,yb,vb,bb,wb,Tb,Eb,Lb,Xg,Ob,Db,$b,zb,ex,Vb,Gb,jb,Yb,Zb,Af,Jb,Qb,tw,nx,Ib,nw,rw,iw,Jg,ow,uw,pw,fw,yw,vw,bw,ww,Sw,Ew,Cw,Iw,kw,Aw,Nw,Rw,Ky,Rb,Lw,Ow,Pw,Dw,Fw,$w,Bw,zw,Uw,Vw,Ww,Hw,jw,qw,Xw,Kw,Ab,oy,Yw,Zw,e_,a_,o_,uy,l_,u_,h_,Hb];for(const e of p_)Oe(e);const d_=se();d_.registerFlag("HAS_WEBGL",(()=>d_.getNumber("WEBGL_VERSION")>0)),d_.registerFlag("WEBGL_VERSION",(()=>lf(2)?2:lf(1)?1:0)),d_.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),d_.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===d_.get("WEBGL_VERSION"))),d_.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),d_.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),d_.registerFlag("WEBGL_PACK",(()=>d_.getBool("HAS_WEBGL"))),d_.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>d_.getBool("WEBGL_PACK"))),d_.registerFlag("WEBGL_PACK_CLIP",(()=>d_.getBool("WEBGL_PACK"))),d_.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>d_.getBool("WEBGL_PACK"))),d_.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>d_.getBool("WEBGL_PACK"))),d_.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>d_.getBool("WEBGL_PACK"))),d_.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>d_.getBool("WEBGL_PACK"))),d_.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>d_.getBool("WEBGL_PACK"))),d_.registerFlag("WEBGL_PACK_REDUCE",(()=>d_.getBool("WEBGL_PACK"))),d_.registerFlag("WEBGL_LAZILY_UNPACK",(()=>d_.getBool("WEBGL_PACK"))),d_.registerFlag("WEBGL_CONV_IM2COL",(()=>d_.getBool("WEBGL_PACK"))),d_.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>rf(d_.getNumber("WEBGL_VERSION")))),d_.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>af(d_.getNumber("WEBGL_VERSION")))),d_.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=d_.getNumber("WEBGL_VERSION");return 0===e?0:sf(e)})),d_.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>d_.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!dn.isMobile())),d_.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>uf(d_.getNumber("WEBGL_VERSION")))),d_.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!d_.getBool("WEBGL_FORCE_F16_TEXTURES")&&d_.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),d_.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>cf(d_.getNumber("WEBGL_VERSION")))),d_.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>pf(d_.getNumber("WEBGL_VERSION")))),d_.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>d_.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),d_.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),d_.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>dn.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),d_.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),d_.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),d_.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),d_.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),d_.registerFlag("WEBGL_EXP_CONV",(()=>!1)),d_.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>d_.getBool("IS_TEST")));class f_{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Md.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=td();this.outputShape=e,this.enableShapeUniforms=yf(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?rd(["r","c","d"],e):nd(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class m_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Md.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=td();this.outputShape=e,this.enableShapeUniforms=yf(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?rd(["r","c","d"],e):nd(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class g_{constructor(e){this.variableNames=["A"],this.outTexUsage=Id.DOWNLOAD;const t=td();this.outputShape=e,this.userCode=`\n      ${sd}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class y_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Id.DOWNLOAD;const t=td();this.outputShape=e,this.userCode=`\n      ${sd}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class x_{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=td();this.outputShape=e,this.enableShapeUniforms=yf(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":ad(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class v_{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=td();this.outputShape=e,this.enableShapeUniforms=yf(this.outputShape.length);let r="",i="result";t&&(i="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let i=0;i<=1;i++){const a=2*t+i;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${i};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":ad(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${i};\n        }\n    `}}function b_(e){const t=td();return function(e,t){const n=Xd(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(Dd(e,(()=>e.shaderSource(n,t))),Dd(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function w_(e){return function(e,t){const n=Xd(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Dd(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Dd(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function __(e){return function(e,t){const n=Xd(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Dd(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),Dd(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function S_(e,t,n,r,i,a){!function(e,t){const n=se().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const s=function(e){return Xd(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return Dd(e,(()=>e.bindTexture(o,s))),Dd(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),Dd(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),Dd(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),Dd(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===se().getNumber("WEBGL_VERSION")?Dd(e,(()=>e.texImage2D(o,0,r,t,n,0,i,a,null))):Dd(e,(()=>e.texStorage2D(o,1,r,t,n))),Dd(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:s,texShape:[n,t]}}function T_(e){return e.internalFormatFloat}function E_(e){return e.internalFormatHalfFloat}function M_(e){return e.downloadTextureFormat}function C_(e){return e.internalFormatPackedFloat}function I_(e){return e.internalFormatPackedHalfFloat}function k_(e,t,n,r,i,a,s,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=Od(e,t);return n*r*4}(a,s));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}class A_{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=se().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,Td(t,e)):this.gl=Ed(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===se().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=$d(this.gl,e),of(this.gl,t))this.textureHalfFloatExtension=$d(this.gl,t);else if(se().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),of(this.gl,r))this.colorBufferHalfFloatExtension=$d(this.gl,r);else if(se().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",of(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!of(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=w_(this.gl),this.indexBuffer=__(this.gl),this.framebuffer=function(e){return Xd(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Pd(this.gl,this.textureHalfFloatExtension)}get debug(){return se().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Dd(e,(()=>e.finish())),Dd(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),Dd(e,(()=>e.deleteFramebuffer(this.framebuffer))),Dd(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),Dd(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),Dd(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[i,a]=Rd(t,n);return S_(e,i,a,T_(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[i,a]=Rd(t,n);return S_(e,i,a,E_(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[i,a]=Rd(t,n);return S_(e,i,a,M_(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){Dd(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===se().getNumber("WEBGL_VERSION")?Dd(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):Dd(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===se().getNumber("WEBGL_VERSION")?Dd(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):Dd(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),Dd(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,i,a){let s,o,l;Dd(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),i instanceof Uint8Array?(s=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(s=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),s.set(i),2===se().getNumber("WEBGL_VERSION")?Dd(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,s))):Dd(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,s))),Dd(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[i,a]=Od(t,n);return S_(e,i,a,I_(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[i,a]=Od(t,n);return S_(e,i,a,C_(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(jd(this.gl,this.framebuffer),this.outputTexture=null),Dd(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[i,a]=Rd(t,n),s=new Uint8Array(t*n*4);return Dd(e,(()=>e.readPixels(0,0,i,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,s))),new Float32Array(s.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,i,a){return k_(this.gl,e,0,0,0,i,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,i=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,i),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),i}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const i=e.createBuffer();Dd(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,i)));const a=16*t*n;return Dd(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),Dd(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),Dd(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),i}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(se().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,i=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(i,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=i}else se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return Dd(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=b_(t));const n=function(e){return Xd(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return Dd(t,(()=>t.attachShader(n,this.vertexShader))),Dd(t,(()=>t.attachShader(n,e))),function(e,t){if(Dd(e,(()=>e.linkProgram(t))),!se().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&Vd(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return Dd(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Wd(e,t,"clipSpacePos",n,3,20,0)&&Wd(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&Dd(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&Vd(this.gl,this.program),Dd(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return Xd(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Dd(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),Hd(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,i]=Od(t,n);this.setOutputMatrixTextureDriver(e,r,i)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Vd(this.gl,this.program),qd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),Dd(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Dd(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=$d(this.gl,2===se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await De.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||De.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Gd(this.gl,e,this.framebuffer),this.debug&&qd(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Gd(this.gl,this.outputTexture,this.framebuffer),this.debug&&qd(this.gl)):jd(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;Gd(r,e,this.framebuffer),this.debug&&qd(r),this.outputTexture=e,Dd(r,(()=>r.viewport(0,0,t,n))),Dd(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),Dd(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}class N_{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=yf(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=bf("rc",this.rank),t=xd(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),i=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let i=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)i=`${e[e.length-1-t]},`+i;t.push(i)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class R_{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=O_(t,n),i=P_(e,r,n);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const a=L_(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[i].shift();return this.usedTextures[i].push(e),e}let s;return r===Ad.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Ad.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Ad.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Ad.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Ad.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(s),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const i=O_(n,r),a=P_(t,i,r);a in this.freeTextures||(this.freeTextures[a]=[]);const s=L_(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=se().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=s):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function L_(e,t,n,r,i){const a=function(e,t){switch(e){case Ad.PACKED_2X2_FLOAT32:return C_(t);case Ad.PACKED_2X2_FLOAT16:return I_(t);case Ad.UNPACKED_FLOAT32:return T_(t);case Ad.UNPACKED_FLOAT16:return E_(t);case Ad.PACKED_4X1_UNSIGNED_BYTE:return M_(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let s;if(i){const[t,n]=Od(e[0],e[1]);s=t*n}else{const[t,n]=Rd(e[0],e[1]);s=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return s*o}function O_(e,t){if(e===Id.UPLOAD)return Ad.PACKED_2X2_FLOAT32;if(e===Id.RENDER||null==e)return function(e){return se().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Ad.PACKED_2X2_FLOAT32:Ad.UNPACKED_FLOAT32:e?Ad.PACKED_2X2_FLOAT16:Ad.UNPACKED_FLOAT16}(t);if(e===Id.DOWNLOAD||e===Id.PIXELS)return Ad.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function P_(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class D_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=yf(this.outputShape.length);const t=e.length,n=bf("rc",t),r=xd(t),i=wf(t,n),a=n.slice(-2),s=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${i});\n\n        setOutput(getChannel(packedInput, ${s}));\n      }\n    `}}const F_=$o.whereImpl,$_={};const B_=se().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class z_ extends o{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!se().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof A_)t=e;else{const n=Ed(se().getNumber("WEBGL_VERSION"),e);t=new A_(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=Ed(se().getNumber("WEBGL_VERSION"));t=new A_(e),this.binaryCache=((n=se().getNumber("WEBGL_VERSION"))in $_||($_[n]={}),$_[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new R_(this.gpgpu),this.numMBBeforeWarning=null==se().global.screen?1024:se().global.screen.height*se().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new s(this,wu())}nextDataId(){return z_.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((se().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||se().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:Id.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,i){if(se().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:Id.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:i,slice:a,shape:s,isPacked:o}=t;if(null!=a){let t;t=o?new Rf(s,"return x;"):new Nf(s,"return x;");const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:r}],r),i=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),i}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=De.now()),"complex64"===r){const e=this.readSync(i.real.dataId),t=this.readSync(i.imag.dataId);c=Oa.mergeRealAndImagArrays(e,t)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=De.now()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:i,dtype:a,complexTensorInfos:s,isPacked:o}=t;if(null!=i){let t;t=o?new Rf(r,"return x;"):new Nf(r,"return x;");const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),i=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),i}if(null!=n)return this.convertAndCacheOnCPU(e);if(se().getBool("DEBUG")&&!se().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===se().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&se().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...Ld(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(s.real.dataId),this.read(s.imag.dataId)]),t=e[0],n=e[1];u=Oa.mergeRealAndImagArrays(t,n)}else if(null==c)u=this.getValuesFromTexture(e);else{const e=De.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;Dd(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&wu().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:i,slice:a,dtype:s,isPacked:o,texture:l}=n;if("complex64"===s)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new Rf(i,"return x;"):new Nf(i,"return x;");const r=this.runWebGLProgram(n,[{dataId:e,shape:i,dtype:s}],s),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=wu().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>De.decodeString(e)));return Ci(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ci(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!Fd(n)){if(se().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),i=De.sizeFromShape(t);if(se().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...Ld(t)).subarray(0,i);return this.disposeIntermediateTensorInfo(n),a}const a=se().getBool("WEBGL_PACK")&&!0===r,s=a?Jd(t):t,o=a?new y_(s):new g_(s),l=this.runWebGLProgram(o,[{shape:s,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const i=De.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=De.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(i);s.kernelMs=De.sum(e),s.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else s.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,s})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:De.now(),endMs:null}}endTimer(e){return se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=De.now(),e)}async getQueryTime(e){if(se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:i,isPacked:a,slice:s}=this.texData.get(e),o=s&&s.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,i,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=B_){return se().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&De.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Oa.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return F_(e.shape,t)}packedUnaryOp(e,t,n){const r=new Rf(e.shape,t),i=this.compileAndRun(r,[e],n);return wu().makeTensorFromTensorInfo(i)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Rg(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,"return abs(x);",e.dtype);const t=new Nf(e.shape,"return abs(x);"),n=this.compileAndRun(t,[e]);return wu().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&De.isString(n[0])){const i=n.map((e=>De.encodeString(e)));r=this.write(i,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return wu().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new D_(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new N_(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Yd(e.shape),...Zd(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},i=[Yd(t),...Zd(t)],a=new Kg(i,n),s=[n],o=this.runWebGLProgram(a,[r],e.dtype,s,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:i,dtype:a}=n;if(null!=t){const e=De.sizeFromShape(i),n=t[0]*t[1]*4;De.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const s=Jd(i);let o;o=r?new m_(s):new f_(s);const l=[null!=t?t:Ld(s)];return{dtype:a,shape:i,dataId:this.runWebGLProgram(o,[{shape:s,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,i=!1,a){const s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===Md.DENSE){const t=null!=a?a:Ld(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===De.sizeFromShape(s.shape))return o.values=De.getTypedArrayFromDType(s.dtype,0),s;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&De.sizeFromShape(t.shape)<=se().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!ef(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const c={shape:s.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const i=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:s,uniformShape:o,keptDims:l}=vd(e.packedInputs,t.shape,a);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=De.computeStrides(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const p=t.shape.length,d=2===o.length&&De.arraysEqual(t.shape,a),f=1===De.sizeFromShape(t.shape),m=Oa.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&De.arraysEqual(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${p}_${g}_${s?l:""}_${o.length}_${f}_${m}_${d}_${u}_${c}_${h}_${y}_${i}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${i}`}}));const i=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+i+`${se().getNumber("WEBGL_VERSION")}`,a}(e,u,c),p=this.getAndSaveBinary(h,(()=>ff(this.gpgpu,e,u,c))),d=null!=this.activeTimers;let f;d&&(f=this.startTimer()),se().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,i){t.program.enableShapeUniforms||(gf(t.inShapeInfos,n),gf([t.outShapeInfo],[r]));const a=r.texData.texture,s=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,s[0],s[1]):e.setOutputMatrixTexture(a.texture,s[0],s[1]),e.setProgram(t.webGLProgram),1===se().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const i=t.program.variableNames[r],a=t.uniformLocations[i],s=t.uniformLocations[`offset${i}`],o=t.inShapesLocations[`${i}Shape`],l=t.inTexShapesLocations[`${i}TexShape`];if(o){const{uniformShape:r}=vd(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(De.sizeFromShape(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=s&&e.gl.uniform1i(s,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=De.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&i&&t.program.customUniforms.forEach(((n,r)=>{const a=t.customUniformLocations[r],s=i[r];if("float"===n.type)e.gl.uniform1fv(a,s);else if("vec2"===n.type)e.gl.uniform2fv(a,s);else if("vec3"===n.type)e.gl.uniform3fv(a,s);else if("vec4"===n.type)e.gl.uniform4fv(a,s);else if("int"===n.type)e.gl.uniform1iv(a,s);else if("ivec2"===n.type)e.gl.uniform2iv(a,s);else if("ivec3"===n.type)e.gl.uniform3iv(a,s);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,s)}})),e.executeProgram()}(this.gpgpu,p,u,c,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=se().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=De.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!se().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===i){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,i=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,i)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!se().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=_u((()=>{if(!se().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=se().getBool("DEBUG");se().set("DEBUG",!1);const t=this.abs(ol(1e-8)).dataSync()[0];if(se().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:i,texture:a,usage:s,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=De.now());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=se().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?De.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=De.squeezeShape(e);e=t.newShape}let r=De.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=Yd(e);let n=2,i=2;return e.length&&([n,i]=Zd(e)),r=t*(n/2)*(i/2),De.sizeToSquarishShape(r).map((e=>2*e))}return De.sizeToSquarishShape(r)}(n,o),t.texShape=c),null!=i){const e=Jd(n);let a,s=c[1],h=c[0];const p=i instanceof Uint8Array||i instanceof Uint8ClampedArray;!o&&p||([s,h]=Od(c[0],c[1])),a=o?new v_(e,p):new x_(e,p);const d=p?[h,s]:c,f=this.makeTensorInfo(d,r),m=this.texData.get(f.dataId);m.usage=p?Id.PIXELS:Id.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),s,h,i);const g=[[h,s]],y=!0,x=this.runWebGLProgram(a,[f],r,g,y),v=this.texData.get(x.dataId);t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,se().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=v.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=De.now()-u)}else{const e=this.acquireTexture(c,s,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1048576*this.numMBBeforeWarning){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*De.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await new Promise((e=>ed((()=>e())))),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw Ud(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:i,inShapesLocations:a,inTexShapesLocations:s,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=mf(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=i,e.inShapesLocations=a,e.inTexShapesLocations=s,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}}z_.nextDataId=0,dn.isBrowser()&&Mu("webgl",(()=>new z_),2);var U_,V_,W_,H_,G_={};let j_;(function(){var t;function n(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var r="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e};var i=function(t){t=["object"==typeof globalThis&&globalThis,t,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof e&&e];for(var n=0;n<t.length;++n){var r=t[n];if(r&&r.Math==Math)return r}throw Error("Cannot find global object")}(this);function a(e,t){if(t)e:{var n=i;e=e.split(".");for(var a=0;a<e.length-1;a++){var s=e[a];if(!(s in n))break e;n=n[s]}(t=t(a=n[e=e[e.length-1]]))!=a&&null!=t&&r(n,e,{configurable:!0,writable:!0,value:t})}}function s(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function o(e){var t="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return t?t.call(e):{next:n(e)}}function l(e){if(!(e instanceof Array)){e=o(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}a("Symbol",(function(e){function t(e,t){this.g=e,r(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.g};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",i=0;return function e(r){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(n+(r||"")+"_"+i++,r)}})),a("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var t="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),a=0;a<t.length;a++){var o=i[t[a]];"function"==typeof o&&"function"!=typeof o.prototype[e]&&r(o.prototype,e,{configurable:!0,writable:!0,value:function(){return s(n(this))}})}return e}));var u,c="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)u=Object.setPrototypeOf;else{var h;e:{var p={};try{p.__proto__={a:!0},h=p.a;break e}catch(e){}h=!1}u=h?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var d=u;function f(e,t){if(e.prototype=c(t.prototype),e.prototype.constructor=e,d)d(e,t);else for(var n in t)if("prototype"!=n)if(Object.defineProperties){var r=Object.getOwnPropertyDescriptor(t,n);r&&Object.defineProperty(e,n,r)}else e[n]=t[n];e.ea=t.prototype}function m(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.s=this.m=0,this.j=null}function g(e){if(e.l)throw new TypeError("Generator is already running");e.l=!0}function y(e,t){e.j={U:t,V:!0},e.g=e.m||e.s}function x(e,t,n){return e.g=n,{value:t}}function v(e){this.g=new m,this.h=e}function b(e,t,n,r){try{var i=t.call(e.g.i,n);if(!(i instanceof Object))throw new TypeError("Iterator result "+i+" is not an object");if(!i.done)return e.g.l=!1,i;var a=i.value}catch(t){return e.g.i=null,y(e.g,t),w(e)}return e.g.i=null,r.call(e.g,a),w(e)}function w(e){for(;e.g.g;)try{var t=e.h(e.g);if(t)return e.g.l=!1,{value:t.value,done:!1}}catch(t){e.g.h=void 0,y(e.g,t)}if(e.g.l=!1,e.g.j){if(t=e.g.j,e.g.j=null,t.V)throw t.U;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function _(e){this.next=function(t){return g(e.g),e.g.i?t=b(e,e.g.i.next,t,e.g.o):(e.g.o(t),t=w(e)),t},this.throw=function(t){return g(e.g),e.g.i?t=b(e,e.g.i.throw,t,e.g.o):(y(e.g,t),t=w(e)),t},this.return=function(t){return function(e,t){g(e.g);var n=e.g.i;return n?b(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.g.return):(e.g.return(t),w(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function S(e,t){return t=new _(new v(t)),d&&e.prototype&&d(t,e.prototype),t}m.prototype.o=function(e){this.h=e},m.prototype.return=function(e){this.j={return:e},this.g=this.s};var T="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var r=arguments[n];if(r)for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(e[i]=r[i])}return e};a("Object.assign",(function(e){return e||T})),a("Promise",(function(e){function t(e){this.h=0,this.i=void 0,this.g=[],this.o=!1;var t=this.j();try{e(t.resolve,t.reject)}catch(e){t.reject(e)}}function n(){this.g=null}function r(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.h=function(e){if(null==this.g){this.g=[];var t=this;this.i((function(){t.l()}))}this.g.push(e)};var a=i.setTimeout;n.prototype.i=function(e){a(e,0)},n.prototype.l=function(){for(;this.g&&this.g.length;){var e=this.g;this.g=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(e){this.j(e)}}}this.g=null},n.prototype.j=function(e){this.i((function(){throw e}))},t.prototype.j=function(){function e(e){return function(r){n||(n=!0,e.call(t,r))}}var t=this,n=!1;return{resolve:e(this.C),reject:e(this.l)}},t.prototype.C=function(e){if(e===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.F(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.u(e):this.m(e)}},t.prototype.u=function(e){var t=void 0;try{t=e.then}catch(e){return void this.l(e)}"function"==typeof t?this.G(t,e):this.m(e)},t.prototype.l=function(e){this.s(2,e)},t.prototype.m=function(e){this.s(1,e)},t.prototype.s=function(e,t){if(0!=this.h)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.h);this.h=e,this.i=t,2===this.h&&this.D(),this.A()},t.prototype.D=function(){var e=this;a((function(){if(e.B()){var t=i.console;void 0!==t&&t.error(e.i)}}),1)},t.prototype.B=function(){if(this.o)return!1;var e=i.CustomEvent,t=i.Event,n=i.dispatchEvent;return void 0===n||("function"==typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"==typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=i.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.i,n(e))},t.prototype.A=function(){if(null!=this.g){for(var e=0;e<this.g.length;++e)s.h(this.g[e]);this.g=null}};var s=new n;return t.prototype.F=function(e){var t=this.j();e.J(t.resolve,t.reject)},t.prototype.G=function(e,t){var n=this.j();try{e.call(t,n.resolve,n.reject)}catch(e){n.reject(e)}},t.prototype.then=function(e,n){function r(e,t){return"function"==typeof e?function(t){try{i(e(t))}catch(e){a(e)}}:t}var i,a,s=new t((function(e,t){i=e,a=t}));return this.J(r(e,i),r(n,a)),s},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.J=function(e,t){function n(){switch(r.h){case 1:e(r.i);break;case 2:t(r.i);break;default:throw Error("Unexpected state: "+r.h)}}var r=this;null==this.g?s.h(n):this.g.push(n),this.o=!0},t.resolve=r,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var i=o(e),a=i.next();!a.done;a=i.next())r(a.value).J(t,n)}))},t.all=function(e){var n=o(e),i=n.next();return i.done?r([]):new t((function(e,t){function a(t){return function(n){s[t]=n,0==--o&&e(s)}}var s=[],o=0;do{s.push(void 0),o++,r(i.value).J(a(s.length-1),t),i=n.next()}while(!i.done)}))},t})),a("Object.is",(function(e){return e||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}})),a("Array.prototype.includes",(function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var r=n.length;for(0>(t=t||0)&&(t=Math.max(t+r,0));t<r;t++){var i=n[t];if(i===e||Object.is(i,e))return!0}return!1}})),a("String.prototype.includes",(function(e){return e||function(e,t){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(e,t||0)}})),a("Array.prototype.keys",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var n=0,r=!1,i={next:function(){if(!r&&n<e.length){var i=n++;return{value:t(i,e[i]),done:!1}}return r=!0,{done:!0,value:void 0}}};return i[Symbol.iterator]=function(){return i},i}(this,(function(e){return e}))}}));var E=this||self;function M(e,t){e=e.split(".");var n,r=E;e[0]in r||void 0===r.execScript||r.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?r=r[n]&&r[n]!==Object.prototype[n]?r[n]:r[n]={}:r[n]=t}function C(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var I,k,A="undefined"!=typeof TextDecoder,N="undefined"!=typeof TextEncoder;function R(e){if(N)e=(k||(k=new TextEncoder)).encode(e);else{var t=void 0;t=void 0!==t&&t;for(var n=0,r=new Uint8Array(3*e.length),i=0;i<e.length;i++){var a=e.charCodeAt(i);if(128>a)r[n++]=a;else{if(2048>a)r[n++]=a>>6|192;else{if(55296<=a&&57343>=a){if(56319>=a&&i<e.length){var s=e.charCodeAt(++i);if(56320<=s&&57343>=s){a=1024*(a-55296)+s-56320+65536,r[n++]=a>>18|240,r[n++]=a>>12&63|128,r[n++]=a>>6&63|128,r[n++]=63&a|128;continue}i--}if(t)throw Error("Found an unpaired surrogate");a=65533}r[n++]=a>>12|224,r[n++]=a>>6&63|128}r[n++]=63&a|128}}e=r.subarray(0,n)}return e}var L={},O=null;function P(e,t){void 0===t&&(t=0),F(),t=L[t];for(var n=Array(Math.floor(e.length/3)),r=t[64]||"",i=0,a=0;i<e.length-2;i+=3){var s=e[i],o=e[i+1],l=e[i+2],u=t[s>>2];s=t[(3&s)<<4|o>>4],o=t[(15&o)<<2|l>>6],l=t[63&l],n[a++]=u+s+o+l}switch(u=0,l=r,e.length-i){case 2:l=t[(15&(u=e[i+1]))<<2]||r;case 1:e=e[i],n[a]=t[e>>2]+t[(3&e)<<4|u>>4]+l+r}return n.join("")}function D(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var r=new Uint8Array(n),i=0;return function(e,t){function n(t){for(;r<e.length;){var n=e.charAt(r++),i=O[n];if(null!=i)return i;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}F();for(var r=0;;){var i=n(-1),a=n(0),s=n(64),o=n(64);if(64===o&&-1===i)break;t(i<<2|a>>4),64!=s&&(t(a<<4&240|s>>2),64!=o&&t(s<<6&192|o))}}(e,(function(e){r[i++]=e})),r.subarray(0,i)}function F(){if(!O){O={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var r=e.concat(t[n].split(""));L[n]=r;for(var i=0;i<r.length;i++){var a=r[i];void 0===O[a]&&(O[a]=i)}}}}var $,B="function"==typeof Uint8Array.prototype.slice;function z(e,t,n){return t===n?$||($=new Uint8Array(0)):B?e.slice(t,n):new Uint8Array(e.subarray(t,n))}var U=0;function V(e,t){t=void 0!==(t=void 0===t?{}:t).v&&t.v,this.h=null,this.g=this.i=this.j=0,this.l=!1,this.v=t,e&&W(this,e)}function W(e,t){t=t.constructor===Uint8Array?t:t.constructor===ArrayBuffer||t.constructor===Array?new Uint8Array(t):t.constructor===String?D(t):t instanceof Uint8Array?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):new Uint8Array(0),e.h=t,e.j=0,e.i=e.h.length,e.g=e.j}function H(e){var t=e.h,n=t[e.g],r=127&n;return 128>n?(e.g+=1,r):(r|=(127&(n=t[e.g+1]))<<7,128>n?(e.g+=2,r):(r|=(127&(n=t[e.g+2]))<<14,128>n?(e.g+=3,r):(r|=(127&(n=t[e.g+3]))<<21,128>n?(e.g+=4,r):(r|=(15&(n=t[e.g+4]))<<28,128>n?(e.g+=5,r>>>0):(e.g+=5,128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++]&&e.g++,r)))))}function G(e){var t=e.h[e.g],n=e.h[e.g+1],r=e.h[e.g+2],i=e.h[e.g+3];return e.g+=4,e=2*((n=(t<<0|n<<8|r<<16|i<<24)>>>0)>>31)+1,t=n>>>23&255,n&=8388607,255==t?n?NaN:1/0*e:0==t?e*Math.pow(2,-149)*n:e*Math.pow(2,t-150)*(n+Math.pow(2,23))}V.prototype.reset=function(){this.g=this.j};var j=[];function q(){this.g=new Uint8Array(64),this.h=0}function X(e,t){for(;127<t;)e.push(127&t|128),t>>>=7;e.push(t)}function K(e){var t={},n=void 0!==t.N&&t.N;this.o={v:void 0!==t.v&&t.v},this.N=n,t=this.o,j.length?(n=j.pop(),t&&(n.v=t.v),e&&W(n,e),e=n):e=new V(e,t),this.g=e,this.m=this.g.g,this.h=this.i=this.l=-1,this.j=!1}function Y(e){var t=e.g;if((t=t.g==t.i)||(t=e.j)||(t=(t=e.g).l||0>t.g||t.g>t.i),t)return!1;e.m=e.g.g;var n=7&(t=H(e.g));return 0!=n&&5!=n&&1!=n&&2!=n&&3!=n&&4!=n?(e.j=!0,!1):(e.i=t,e.l=t>>>3,e.h=n,!0)}function Z(e){switch(e.h){case 0:if(0!=e.h)Z(e);else{for(e=e.g;128&e.h[e.g];)e.g++;e.g++}break;case 1:1!=e.h?Z(e):(e=e.g).g+=8;break;case 2:if(2!=e.h)Z(e);else{var t=H(e.g);(e=e.g).g+=t}break;case 5:5!=e.h?Z(e):(e=e.g).g+=4;break;case 3:for(t=e.l;;){if(!Y(e)){e.j=!0;break}if(4==e.h){e.l!=t&&(e.j=!0);break}Z(e)}break;default:e.j=!0}}function J(e,t,n){var r=e.g.i,i=H(e.g),a=e.g.g+i;if(e.g.i=a,n(t,e),0!==(n=a-e.g.g))throw Error("Message parsing ended unexpectedly. Expected to read "+i+" bytes, instead read "+(i-n)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.g.g=a,e.g.i=r,t}function Q(e){var t,n=H(e.g),r=(e=e.g).g;if(e.g+=n,e=e.h,A)(t=I)||(t=I=new TextDecoder("utf-8",{fatal:!1})),t=t.decode(e.subarray(r,r+n));else{n=r+n;for(var i,a,s,o=[],l=null;r<n;)128>(i=e[r++])?o.push(i):224>i?r>=n?o.push(65533):(a=e[r++],194>i||128!=(192&a)?(r--,o.push(65533)):o.push((31&i)<<6|63&a)):240>i?r>=n-1?o.push(65533):128!=(192&(a=e[r++]))||224===i&&160>a||237===i&&160<=a||128!=(192&(t=e[r++]))?(r--,o.push(65533)):o.push((15&i)<<12|(63&a)<<6|63&t):244>=i?r>=n-2?o.push(65533):128!=(192&(a=e[r++]))||0!=a-144+(i<<28)>>30||128!=(192&(t=e[r++]))||128!=(192&(s=e[r++]))?(r--,o.push(65533)):(i=(7&i)<<18|(63&a)<<12|(63&t)<<6|63&s,i-=65536,o.push(55296+(i>>10&1023),56320+(1023&i))):o.push(65533),8192<=o.length&&(l=C(l,o),o.length=0);t=C(l,o)}return t}function ee(){this.h=[],this.i=0,this.g=new q}function te(e,t){0!==t.length&&(e.h.push(t),e.i+=t.length)}function ne(e){var t=e.i+e.g.length();if(0===t)return new Uint8Array(0);t=new Uint8Array(t);for(var n=e.h,r=n.length,i=0,a=0;a<r;a++){var s=n[a];0!==s.length&&(t.set(s,i),i+=s.length)}return 0!==(r=(n=e.g).h)&&(t.set(n.g.subarray(0,r),i),n.h=0),e.h=[t],t}function re(e,t,n){if(null!=n){X(e.g,8*t+5),e=e.g;var r=n;0===(r=(n=0>r?1:0)?-r:r)?0<1/r?U=0:(0,U=2147483648):isNaN(r)?(0,U=2147483647):34028234663852886e22<r?(0,U=(n<<31|2139095040)>>>0):11754943508222875e-54>r?(r=Math.round(r/Math.pow(2,-149)),0,U=(n<<31|r)>>>0):(t=Math.floor(Math.log(r)/Math.LN2),r*=Math.pow(2,-t),16777216<=(r=Math.round(8388608*r))&&++t,0,U=(n<<31|t+127<<23|8388607&r)>>>0),n=U,e.push(n>>>0&255),e.push(n>>>8&255),e.push(n>>>16&255),e.push(n>>>24&255)}}q.prototype.push=function(e){if(!(this.h+1<this.g.length)){var t=this.g;this.g=new Uint8Array(Math.ceil(1+2*this.g.length)),this.g.set(t)}this.g[this.h++]=e},q.prototype.length=function(){return this.h},q.prototype.end=function(){var e=this.g,t=this.h;return this.h=0,z(e,0,t)},K.prototype.reset=function(){this.g.reset(),this.h=this.l=-1};var ie="function"==typeof Uint8Array;function ae(e,t,n){if(null!=e)return"object"==typeof e?ie&&e instanceof Uint8Array?n(e):se(e,t,n):t(e)}function se(e,t,n){if(Array.isArray(e)){for(var r=Array(e.length),i=0;i<e.length;i++)r[i]=ae(e[i],t,n);return Array.isArray(e)&&e.W&&ce(r),r}for(i in r={},e)r[i]=ae(e[i],t,n);return r}function oe(e){return"number"==typeof e?isFinite(e)?e:String(e):e}var le,ue={W:{value:!0,configurable:!0}};function ce(e){return Array.isArray(e)&&!Object.isFrozen(e)&&Object.defineProperties(e,ue),e}function he(e,t,n){var r=le;if(le=null,e||(e=r),r=this.constructor.ca,e||(e=r?[r]:[]),this.j=r?0:-1,this.i=null,this.g=e,e=(r=this.g.length)-1,!r||(null===(r=this.g[e])||"object"!=typeof r||Array.isArray(r)||ie&&r instanceof Uint8Array)?void 0!==t&&-1<t?(this.l=Math.max(t,e+1-this.j),this.h=null):this.l=Number.MAX_VALUE:(this.l=e-this.j,this.h=r),n)for(t=0;t<n.length;t++)(e=n[t])<this.l?(e+=this.j,(r=this.g[e])?ce(r):this.g[e]=pe):(de(this),(r=this.h[e])?ce(r):this.h[e]=pe)}var pe=Object.freeze(ce([]));function de(e){var t=e.l+e.j;e.g[t]||(e.h=e.g[t]={})}function fe(e,t,n){return-1===t?null:void 0!==n&&n||t>=e.l?e.h?e.h[t]:void 0:e.g[t+e.j]}function me(e){var t=void 0!==t&&t,n=fe(e,1,t);return null==n&&(n=pe),n===pe&&ye(e,1,n=ce([]),t),n}function ge(e,t,n){return null==(e=null==(e=fe(e,t))?e:+e)?void 0===n?0:n:e}function ye(e,t,n,r){void 0!==r&&r||t>=e.l?(de(e),e.h[t]=n):e.g[t+e.j]=n}function xe(e,t){e.i||(e.i={});var n=e.i[1];if(!n){var r=me(e);n=[];for(var i=0;i<r.length;i++)n[i]=new t(r[i]);e.i[1]=n}return n}function ve(e,t,n,r){var i=xe(e,n);t=t||new n,e=me(e),null!=r?(i.splice(r,0,t),e.splice(r,0,be(t,!1))):(i.push(t),e.push(be(t,!1)))}function be(e,t){if(e.i)for(var n in e.i){var r=e.i[n];if(Array.isArray(r))for(var i=0;i<r.length;i++)r[i]&&be(r[i],t);else r&&be(r,t)}return e.g}function we(e,t){return null==(e=fe(e,t))?0:e}function _e(e,t){return null==(e=fe(e,t))?"":e}function Se(e,t){if(e=e.m){te(t,t.g.end());for(var n=0;n<e.length;n++)te(t,e[n])}}function Te(e,t){if(4==t.h)return!1;var n=t.m;return Z(t),t.N||(t=z(t.g.h,n,t.g.g),(n=e.m)?n.push(t):e.m=[t]),!0}function Ee(e,t){var n=void 0;return new(n||(n=Promise))((function(r,i){function a(e){try{o(t.next(e))}catch(e){i(e)}}function s(e){try{o(t.throw(e))}catch(e){i(e)}}function o(e){e.done?r(e.value):new n((function(t){t(e.value)})).then(a,s)}o((t=t.apply(e,void 0)).next())}))}function Me(e){he.call(this,e)}function Ce(e,t){for(;Y(t);)switch(t.i){case 8:var n=H(t.g);ye(e,1,n);break;case 21:ye(e,2,n=G(t.g));break;case 26:ye(e,3,n=Q(t));break;case 34:ye(e,4,n=Q(t));break;default:if(!Te(e,t))return e}return e}function Ie(e){he.call(this,e,-1,ke)}he.prototype.toJSON=function(){return se(be(this,!1),oe,P)},he.prototype.toString=function(){return be(this,!1).toString()},f(Me,he),f(Ie,he),Ie.prototype.addClassification=function(e,t){return ve(this,e,Me,t),this};var ke=[1];function Ae(e){he.call(this,e)}function Ne(e,t){for(;Y(t);)switch(t.i){case 13:var n=G(t.g);ye(e,1,n);break;case 21:ye(e,2,n=G(t.g));break;case 29:ye(e,3,n=G(t.g));break;case 37:ye(e,4,n=G(t.g));break;case 45:ye(e,5,n=G(t.g));break;default:if(!Te(e,t))return e}return e}function Re(e){he.call(this,e,-1,Le)}f(Ae,he),f(Re,he);var Le=[1];function Oe(e){he.call(this,e)}function Pe(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function De(e){return xe(e,Me).map((function(e){return{index:we(e,1),Y:ge(e,2),label:null!=fe(e,3)?_e(e,3):void 0,displayName:null!=fe(e,4)?_e(e,4):void 0}}))}function Fe(e){return{x:ge(e,1),y:ge(e,2),z:ge(e,3),visibility:null!=fe(e,4)?ge(e,4):void 0}}function $e(e){e:{var t=new Re;for(e=new K(e);Y(e);)if(10===e.i){ve(t,J(e,new Ae,Ne),Ae,void 0)}else if(!Te(t,e))break e}return xe(t,Ae).map(Fe)}function Be(e,t){this.h=e,this.g=t,this.l=0}function ze(e,t,n){return function(e,t){var n=e.g;if(void 0===e.m){var r=Pe(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),i=Pe(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),a=n.createProgram();if(n.attachShader(a,r),n.attachShader(a,i),n.linkProgram(a),!n.getProgramParameter(a,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(a));r=e.m=a,n.useProgram(r),i=n.getUniformLocation(r,"sampler0"),e.j={I:n.getAttribLocation(r,"aVertex"),H:n.getAttribLocation(r,"aTex"),da:i},e.s=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.enableVertexAttribArray(e.j.I),n.vertexAttribPointer(e.j.I,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.o=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.o),n.enableVertexAttribArray(e.j.H),n.vertexAttribPointer(e.j.H,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(i,0)}r=e.j,n.useProgram(e.m),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.h.bindTexture2d(t.glName),n.enableVertexAttribArray(r.I),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.vertexAttribPointer(r.I,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(r.H),n.bindBuffer(n.ARRAY_BUFFER,e.o),n.vertexAttribPointer(r.H,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(r.I),n.disableVertexAttribArray(r.H),n.bindBuffer(n.ARRAY_BUFFER,null),e.h.bindTexture2d(0)}(e,t),"function"==typeof e.g.canvas.transferToImageBitmap?Promise.resolve(e.g.canvas.transferToImageBitmap()):n?Promise.resolve(e.g.canvas):"function"==typeof createImageBitmap?createImageBitmap(e.g.canvas):(void 0===e.i&&(e.i=document.createElement("canvas")),new Promise((function(t){e.i.height=e.g.canvas.height,e.i.width=e.g.canvas.width,e.i.getContext("2d",{}).drawImage(e.g.canvas,0,0,e.g.canvas.width,e.g.canvas.height),t(e.i)})))}function Ue(e){this.g=e}f(Oe,he);var Ve=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function We(e,t){return t+e}function He(e,t){window[e]=t}function Ge(e){if(this.g=e,this.listeners={},this.j={},this.F={},this.m={},this.s={},this.G=this.o=this.R=!0,this.C=Promise.resolve(),this.P="",this.B={},this.locateFile=e&&e.locateFile||We,"object"==typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"==typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.S=t,e.options)for(var n=(t=o(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var r=e.options[n].default;void 0!==r&&(this.j[n]="function"==typeof r?r():r)}}function je(e){return Ee(e,(function e(){var t,n,r,i,a,s,o,u,c,h,p,d=this;return S(e,(function(e){switch(e.g){case 1:return t=d,d.R?(n=function(e,t){return void 0===e.g.files?[]:"function"==typeof e.g.files?e.g.files(t):e.g.files}(d,d.j),x(e,function(){return Ee(this,(function e(){return S(e,(function(e){switch(e.g){case 1:return e.m=2,x(e,WebAssembly.instantiate(Ve),4);case 4:e.g=3,e.m=0;break;case 2:return e.m=0,e.j=null,e.return(!1);case 3:return e.return(!0)}}))}))}(),2)):e.return();case 2:if(r=e.h,"object"==typeof window)return He("createMediapipeSolutionsWasm",{locateFile:d.locateFile}),He("createMediapipeSolutionsPackedAssets",{locateFile:d.locateFile}),s=n.filter((function(e){return void 0!==e.data})),o=n.filter((function(e){return void 0===e.data})),u=Promise.all(s.map((function(e){var n=qe(t,e.url);if(void 0!==e.path){var r=e.path;n=n.then((function(e){return t.overrideFile(r,e),Promise.resolve(e)}))}return n}))),c=Promise.all(o.map((function(e){return void 0===e.simd||e.simd&&r||!e.simd&&!r?function(e){var t=document.createElement("script");return t.setAttribute("src",e),t.setAttribute("crossorigin","anonymous"),new Promise((function(e){t.addEventListener("load",(function(){e()}),!1),t.addEventListener("error",(function(){e()}),!1),document.body.appendChild(t)}))}(t.locateFile(e.url,t.S)):Promise.resolve()}))).then((function(){return Ee(t,(function e(){var t,n,r=this;return S(e,(function(e){if(1==e.g)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,x(e,t(n),2);r.h=e.h,e.g=0}))}))})),h=Ee(t,(function e(){var t=this;return S(e,(function(e){return t.g.graph&&t.g.graph.url?e=x(e,qe(t,t.g.graph.url),0):(e.g=0,e=void 0),e}))})),x(e,Promise.all([c,u,h]),7);if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return i=n.filter((function(e){return void 0===e.simd||e.simd&&r||!e.simd&&!r})).map((function(e){return t.locateFile(e.url,t.S)})),importScripts.apply(null,l(i)),x(e,createMediapipeSolutionsWasm(Module),6);case 6:d.h=e.h,d.l=new OffscreenCanvas(1,1),d.h.canvas=d.l,a=d.h.GL.createContext(d.l,{antialias:!1,alpha:!1,ba:"undefined"!=typeof WebGL2RenderingContext?2:1}),d.h.GL.makeContextCurrent(a),e.g=4;break;case 7:if(d.l=document.createElement("canvas"),!(p=d.l.getContext("webgl2",{}))&&!(p=d.l.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),e.return();d.D=p,d.h.canvas=d.l,d.h.createContext(d.l,!0,!0,{});case 4:d.i=new d.h.SolutionWasm,d.R=!1,e.g=0}}))}))}function qe(e,t){return Ee(e,(function e(){var n,r,i=this;return S(e,(function(e){return t in i.F?e.return(i.F[t]):(n=i.locateFile(t,""),r=fetch(n).then((function(e){return e.arrayBuffer()})),i.F[t]=r,e.return(r))}))}))}function Xe(e,t,n){return Ee(e,(function e(){var r,i,a,s,l,u,c,h,p,d,f,m,g,y,v=this;return S(e,(function(e){switch(e.g){case 1:if(!n)return e.return(t);for(r={},i=0,a=o(Object.keys(n)),s=a.next();!s.done;s=a.next())l=s.value,"string"!=typeof(u=n[l])&&"texture"===u.type&&void 0!==t[u.stream]&&++i;1<i&&(v.G=!1),c=o(Object.keys(n)),s=c.next();case 2:if(s.done){e.g=4;break}if(h=s.value,"string"==typeof(p=n[h]))return g=r,y=h,x(e,function(e,t,n){return Ee(e,(function e(){var r,i=this;return S(e,(function(e){return"number"==typeof n||n instanceof Uint8Array||n instanceof i.h.Uint8BlobList?e.return(n):n instanceof i.h.Texture2dDataOut?((r=i.s[t])||(r=new Be(i.h,i.D),i.s[t]=r),e.return(ze(r,n,i.G))):e.return(void 0)}))}))}(v,h,t[p]),14);if(d=t[p.stream],"detection_list"===p.type){if(d){for(var b=d.getRectList(),w=d.getLandmarksList(),_=d.getClassificationsList(),T=[],E=0;E<b.size();++E){var M=b.get(E);e:{var C=new Oe;for(M=new K(M);Y(M);)switch(M.i){case 13:var I=G(M.g);ye(C,1,I);break;case 21:ye(C,2,I=G(M.g));break;case 29:ye(C,3,I=G(M.g));break;case 37:ye(C,4,I=G(M.g));break;case 45:ye(C,5,I=G(M.g));break;case 48:for(var k=M.g,A=128,N=0,R=I=0;4>R&&128<=A;R++)N|=(127&(A=k.h[k.g++]))<<7*R;if(128<=A&&(N|=(127&(A=k.h[k.g++]))<<28,I|=(127&A)>>4),128<=A)for(R=0;5>R&&128<=A;R++)I|=(127&(A=k.h[k.g++]))<<7*R+3;128>A?(k=N>>>0,(I=2147483648&(A=I>>>0))&&(A=~A>>>0,0==(k=1+~k>>>0)&&(A=A+1>>>0)),k=4294967296*A+(k>>>0),I=I?-k:k):(k.l=!0,I=void 0),ye(C,6,I);break;default:if(!Te(C,M))break e}}C={Z:ge(C,1),$:ge(C,2),height:ge(C,3),width:ge(C,4),rotation:ge(C,5,0),X:we(C,6)},M=$e(w.get(E)),k=_.get(E);e:for(I=new Ie,k=new K(k);Y(k);)if(10===k.i)I.addClassification(J(k,new Me,Ce));else if(!Te(I,k))break e;C={T:C,O:M,M:De(I)},T.push(C)}b=T}else b=[];r[h]=b,e.g=7;break}if("proto_list"===p.type){if(d){for(b=Array(d.size()),w=0;w<d.size();w++)b[w]=d.get(w);d.delete()}else b=[];r[h]=b,e.g=7;break}if(void 0===d){e.g=3;break}if("float_list"===p.type){r[h]=d,e.g=7;break}if("proto"===p.type){r[h]=d,e.g=7;break}if("texture"!==p.type)throw Error("Unknown output config type: '"+p.type+"'");return(f=v.s[h])||(f=new Be(v.h,v.D),v.s[h]=f),x(e,ze(f,d,v.G),13);case 13:m=e.h,r[h]=m;case 7:p.transform&&r[h]&&(r[h]=p.transform(r[h])),e.g=3;break;case 14:g[y]=e.h;case 3:s=c.next(),e.g=2;break;case 4:return e.return(r)}}))}))}function Ke(e,t){for(var n=t.name||"$",r=[].concat(l(t.wants)),i=new e.h.StringList,a=o(t.wants),s=a.next();!s.done;s=a.next())i.push_back(s.value);a=e.h.PacketListener.implement({onResults:function(i){for(var a={},s=0;s<t.wants.length;++s)a[r[s]]=i.get(s);var o=e.listeners[n];o&&(e.C=Xe(e,a,t.outs).then((function(n){n=o(n);for(var i=0;i<t.wants.length;++i){var s=a[r[i]];"object"==typeof s&&s.hasOwnProperty&&s.hasOwnProperty("delete")&&s.delete()}n&&(e.C=n)})))}}),e.i.attachMultiListener(i,a),i.delete()}function Ye(e){switch(void 0===e&&(e=0),e){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function Ze(e){var t=this;e=e||{},this.g=new Ge({locateFile:e.locateFile,files:function(e){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:Ye(e.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:$e},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:$e},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(e){return Ee(t,(function t(){var n,r,i,a=this;return S(t,(function(t){return 1==t.g?(n=Ye(e),r="third_party/mediapipe/modules/pose_landmark/"+n,x(t,qe(a.g,n),2)):(i=t.h,a.g.overrideFile(r,i),t.return(!0))}))}))}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}(t=Ge.prototype).close=function(){return this.i&&this.i.delete(),Promise.resolve()},t.reset=function(){return Ee(this,(function e(){var t=this;return S(e,(function(e){t.i&&(t.i.reset(),t.m={},t.s={}),e.g=0}))}))},t.setOptions=function(e,t){var n=this;if(t=t||this.g.options){for(var r=[],i=[],a={},s=o(Object.keys(e)),l=s.next();!l.done;a={K:a.K,L:a.L},l=s.next()){var u=l.value;u in this.j&&this.j[u]===e[u]||(this.j[u]=e[u],void 0!==(l=t[u])&&(l.onChange&&(a.K=l.onChange,a.L=e[u],r.push(function(e){return function(){return Ee(n,(function t(){var n=this;return S(t,(function(t){if(1==t.g)return x(t,e.K(e.L),2);!0===t.h&&(n.o=!0),t.g=0}))}))}}(a))),l.graphOptionXref&&(u={valueNumber:1===l.type?e[u]:0,valueBoolean:0===l.type&&e[u],valueString:2===l.type?e[u]:""},l=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),l.graphOptionXref),u),i.push(l))))}0===r.length&&0===i.length||(this.o=!0,this.A=(void 0===this.A?[]:this.A).concat(i),this.u=(void 0===this.u?[]:this.u).concat(r))}},t.initialize=function(){return Ee(this,(function e(){var t=this;return S(e,(function(e){return 1==e.g?x(e,je(t),2):3!=e.g?x(e,Ee(t,(function e(){var t,n,r,i,a,s,l,u,c=this;return S(e,(function(e){if(1==e.g)return c.g.graph&&c.g.graph.url&&c.P===c.g.graph.url?e.return():(c.o=!0,c.g.graph&&c.g.graph.url?(c.P=c.g.graph.url,x(e,qe(c,c.g.graph.url),3)):void(e.g=2));for(2!=e.g&&(t=e.h,c.i.loadGraph(t)),n=o(Object.keys(c.B)),r=n.next();!r.done;r=n.next())i=r.value,c.i.overrideFile(i,c.B[i]);if(c.B={},c.g.listeners)for(a=o(c.g.listeners),s=a.next();!s.done;s=a.next())l=s.value,Ke(c,l);u=c.j,c.j={},c.setOptions(u),e.g=0}))})),3):x(e,function(e){return Ee(e,(function e(){var t,n,r,i,a,s,l=this;return S(e,(function(e){switch(e.g){case 1:if(!l.o)return e.return();if(!l.u){e.g=2;break}t=o(l.u),n=t.next();case 3:if(n.done){e.g=5;break}return x(e,(0,n.value)(),4);case 4:n=t.next(),e.g=3;break;case 5:l.u=void 0;case 2:if(l.A){for(r=new l.h.GraphOptionChangeRequestList,i=o(l.A),a=i.next();!a.done;a=i.next())s=a.value,r.push_back(s);l.i.changeOptions(r),r.delete(),l.A=void 0}l.o=!1,e.g=0}}))}))}(t),0)}))}))},t.overrideFile=function(e,t){this.i?this.i.overrideFile(e,t):this.B[e]=t},t.clearOverriddenFiles=function(){this.B={},this.i&&this.i.clearOverriddenFiles()},t.send=function(e,t){return Ee(this,(function n(){var r,i,a,s,l,u,c,h,p,d=this;return S(n,(function(n){switch(n.g){case 1:return d.g.inputs?(r=1e3*(null==t?performance.now():t),x(n,d.C,2)):n.return();case 2:return x(n,d.initialize(),3);case 3:for(i=new d.h.PacketDataList,a=o(Object.keys(e)),s=a.next();!s.done;s=a.next())if(l=s.value,u=d.g.inputs[l]){e:{var f=d,m=e[l];switch(u.type){case"video":var g=f.m[u.stream];if(g||(g=new Be(f.h,f.D),f.m[u.stream]=g),0===(f=g).l&&(f.l=f.h.createTexture()),"undefined"!=typeof HTMLVideoElement&&m instanceof HTMLVideoElement){var y=m.videoWidth;g=m.videoHeight}else"undefined"!=typeof HTMLImageElement&&m instanceof HTMLImageElement?(y=m.naturalWidth,g=m.naturalHeight):(y=m.width,g=m.height);g={glName:f.l,width:y,height:g},(y=f.g).canvas.width=g.width,y.canvas.height=g.height,y.activeTexture(y.TEXTURE0),f.h.bindTexture2d(f.l),y.texImage2D(y.TEXTURE_2D,0,y.RGBA,y.RGBA,y.UNSIGNED_BYTE,m),f.h.bindTexture2d(0),f=g;break e;case"detections":for((g=f.m[u.stream])||(g=new Ue(f.h),f.m[u.stream]=g),(f=g).data||(f.data=new f.g.DetectionListData),f.data.reset(m.length),g=0;g<m.length;++g){y=m[g];var v=f.data,b=v.setBoundingBox,w=g,_=y.T,S=new Oe;ye(S,1,_.Z),ye(S,2,_.$),ye(S,3,_.height),ye(S,4,_.width),ye(S,5,_.rotation),ye(S,6,_.X);var T=_=new ee;re(T,1,fe(S,1)),re(T,2,fe(S,2)),re(T,3,fe(S,3)),re(T,4,fe(S,4)),re(T,5,fe(S,5));var E=fe(S,6);if(null!=E&&null!=E){X(T.g,48);var M=T.g,C=E;E=0>C;var I=(C=Math.abs(C))>>>0;for(C=Math.floor((C-I)/4294967296),C>>>=0,E&&(C=~C>>>0,4294967295<(I=1+(~I>>>0))&&(I=0,4294967295<++C&&(C=0))),E=U=I,I=C;0<I||127<E;)M.push(127&E|128),E=(E>>>7|I<<25)>>>0,I>>>=7;M.push(E)}if(Se(S,T),_=ne(_),b.call(v,w,_),y.O)for(v=0;v<y.O.length;++v)T=!!(S=y.O[v]).visibility,w=(b=f.data).addNormalizedLandmark,_=g,S=Object.assign(Object.assign({},S),{visibility:T?S.visibility:0}),ye(T=new Ae,1,S.x),ye(T,2,S.y),ye(T,3,S.z),S.visibility&&ye(T,4,S.visibility),re(M=S=new ee,1,fe(T,1)),re(M,2,fe(T,2)),re(M,3,fe(T,3)),re(M,4,fe(T,4)),re(M,5,fe(T,5)),Se(T,M),S=ne(S),w.call(b,_,S);if(y.M)for(v=0;v<y.M.length;++v){if(w=(b=f.data).addClassification,_=g,S=y.M[v],ye(T=new Me,2,S.Y),S.index&&ye(T,1,S.index),S.label&&ye(T,3,S.label),S.displayName&&ye(T,4,S.displayName),M=S=new ee,null!=(I=fe(T,1))&&null!=I)if(X(M.g,8),E=M.g,0<=I)X(E,I);else{for(C=0;9>C;C++)E.push(127&I|128),I>>=7;E.push(1)}re(M,2,fe(T,2)),null!=(E=fe(T,3))&&(E=R(E),X(M.g,26),X(M.g,E.length),te(M,M.g.end()),te(M,E)),null!=(E=fe(T,4))&&(E=R(E),X(M.g,34),X(M.g,E.length),te(M,M.g.end()),te(M,E)),Se(T,M),S=ne(S),w.call(b,_,S)}}f=f.data;break e;default:f={}}}switch(c=f,h=u.stream,u.type){case"video":i.pushTexture2d(Object.assign(Object.assign({},c),{stream:h,timestamp:r}));break;case"detections":(p=c).stream=h,p.timestamp=r,i.pushDetectionList(p);break;default:throw Error("Unknown input config type: '"+u.type+"'")}}return d.i.send(i),x(n,d.C,4);case 4:i.delete(),n.g=0}}))}))},t.onResults=function(e,t){this.listeners[t||"$"]=e},M("Solution",Ge),M("OptionType",{BOOL:0,NUMBER:1,aa:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(t=Ze.prototype).reset=function(){this.g.reset()},t.close=function(){return this.g.close(),Promise.resolve()},t.onResults=function(e){this.g.onResults(e)},t.initialize=function(){return Ee(this,(function e(){var t=this;return S(e,(function(e){return x(e,t.g.initialize(),0)}))}))},t.send=function(e,t){return Ee(this,(function n(){var r=this;return S(n,(function(n){return x(n,r.g.send(e,t),0)}))}))},t.setOptions=function(e){this.g.setOptions(e)},M("Pose",Ze),M("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),M("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),M("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),M("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),M("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),M("VERSION","0.4.1633558788")}).call(G_),(V_=U_||(U_={}))[V_.float32=0]="float32",V_[V_.int32=1]="int32",V_[V_.bool=2]="bool",V_[V_.string=3]="string",V_[V_.complex64=4]="complex64",(H_=W_||(W_={}))[H_.linear=0]="linear",H_[H_.relu=1]="relu",H_[H_.relu6=2]="relu6",H_[H_.prelu=3]="prelu",H_[H_.leakyrelu=4]="leakyrelu",H_[H_.sigmoid=5]="sigmoid",H_[H_.elu=6]="elu";const q_={kernelName:"_FusedMatMul",backendName:"wasm",setupFunc:function(e){j_=e.wasm.cwrap("_FusedMatMul",null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:i,b:a,bias:s,preluActivationWeights:o}=t;if("float32"!==i.dtype||"float32"!==a.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r,p=n.dataIdMap.get(i.dataId).id,d=n.dataIdMap.get(a.dataId).id;let f=0;if(null!=s){const e=n.dataIdMap.get(s.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=W_[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);const y=l?i.shape[2]:i.shape[1],x=u?a.shape[1]:a.shape[2],v=Ji.assertAndGetBroadcastShape(i.shape.slice(0,-2),a.shape.slice(0,-2)),b=n.makeOutput([...v,y,x],i.dtype),w=n.dataIdMap.get(b.dataId).id,_=new Uint8Array(new Int32Array(i.shape).buffer),S=new Uint8Array(new Int32Array(a.shape).buffer);return j_(p,_,i.shape.length,d,S,a.shape.length,l,u,g,f,m,h||0,w),b}};function X_(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:r,inputs:{x:i}}=e,a=r.dataIdMap.get(i.dataId).id,s=r.makeOutput(i.shape,t||i.dtype),o=r.dataIdMap.get(s.dataId).id;return 0===De.sizeFromShape(s.shape)||n(a,U_[i.dtype],o),s}}}const K_=X_("Abs");function Y_(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:i}=e,{a:a,b:s}=i,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=null!=n?n:a.dtype,c=Oa.assertAndGetBroadcastShape(a.shape,s.shape),h=t.makeOutput(c,u);if(0===De.sizeFromShape(c))return h;const p=new Uint8Array(new Int32Array(a.shape).buffer),d=new Uint8Array(new Int32Array(s.shape).buffer),f=t.dataIdMap.get(h.dataId).id;return r(o,p,a.shape.length,l,d,s.shape.length,U_[a.dtype],f),h}}}const Z_=Y_("Add");let J_;const Q_={kernelName:"AddN",backendName:"wasm",setupFunc:function(e){J_=e.wasm.cwrap("AddN",null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===De.sizeFromShape(r.shape))return r;const i=t.map((e=>n.dataIdMap.get(e.dataId).id)),a=new Uint8Array(new Int32Array(i).buffer),s=n.dataIdMap.get(r.dataId).id;return J_(a,i.length,U_[r.dtype],s),r}};function eS(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),i=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(i),r}const tS={kernelName:"Identity",backendName:"wasm",kernelFunc:eS};let nS;function rS(e){const{inputs:t,backend:n,attrs:r}=e,[i,a]=function(e,t){const n=[],r=[];for(let i=0;i<e.length;++i)1!==e[i]&&n.push(e[i]),1!==e[t[i]]&&r.push(t[i]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let s=!0;for(let e=0;e<a.length;e++)a[e]!==e&&(s=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:i,dtype:t.x.dtype};if(s){const e=eS({inputs:t,backend:n});return e.shape=o,e}const u=n.makeOutput(o,l.dtype),c=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),d=new Uint8Array(new Int32Array(l.shape).buffer);return nS(c,d,l.shape.length,U_[l.dtype],h,p,a.length),u}const iS={kernelName:"Transpose",backendName:"wasm",kernelFunc:rS,setupFunc:function(e){nS=e.wasm.cwrap("Transpose",null,["number","array","number","number","number","array","number"])}};function aS(e,t,n){const r=e.shape,i=e.shape.length,a=De.parseAxisParam(t,r);let s=a;const o=Oa.getAxesPermutation(s,i);let l=null,u=!1;if(null!=o){const t=new Array(i);for(let e=0;e<t.length;e++)t[e]=r[o[e]];s=Oa.getInnerMostAxes(s.length,i),l=rS({inputs:{x:e},attrs:{perm:o},backend:n});const a=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==a&&(u=!0)}return{transposed:l,originalAxes:a,axes:s,inputWasTransposed:u}}let sS;const oS={kernelName:"All",backendName:"wasm",setupFunc:function(e){sS=e.wasm.cwrap("All",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:i,keepDims:a}=r,{x:s}=n;let o=t.dataIdMap.get(s.dataId).id,l=s;const{transposed:u,axes:c,originalAxes:h,inputWasTransposed:p}=aS(s,i,t);if(p){l=u,o=t.dataIdMap.get(u.dataId).id}const d=l.shape.length;Oa.assertAxesAreInnerMostDims("all",c,d);const[f,m]=Oa.computeOutAndReduceShapes(l.shape,c),g=De.sizeFromShape(m),y=t.makeOutput(f,s.dtype);if(0!==De.sizeFromShape(l.shape)){const e=t.dataIdMap.get(y.dataId).id;sS(o,g,e)}if(p&&t.disposeData(u.dataId),a){const e=Oa.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}};let lS;const uS={kernelName:"Any",backendName:"wasm",setupFunc:function(e){lS=e.wasm.cwrap("Any",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:i,keepDims:a}=r,{x:s}=n;let o=t.dataIdMap.get(s.dataId).id,l=s;const{transposed:u,axes:c,originalAxes:h,inputWasTransposed:p}=aS(s,i,t);if(p){l=u,o=t.dataIdMap.get(u.dataId).id}const d=l.shape.length;Oa.assertAxesAreInnerMostDims("any",c,d);const[f,m]=Oa.computeOutAndReduceShapes(l.shape,c),g=De.sizeFromShape(m),y=t.makeOutput(f,s.dtype);if(0!==De.sizeFromShape(l.shape)){const e=t.dataIdMap.get(y.dataId).id;lS(o,g,e)}if(p&&t.disposeData(u.dataId),a){const e=Oa.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}};let cS;const hS={kernelName:"ArgMax",backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:i}=r,{x:a}=n,s=t.dataIdMap.get(a.dataId).id;let o=s,l=a;const{transposed:u,axes:c,inputWasTransposed:h}=aS(a,i,t);if(h){const e=t.dataIdMap.get(u.dataId).id;e!==s&&(l=u,o=e)}const p=l.shape.slice(0,-1),d=t.makeOutput(p,"int32"),f=t.dataIdMap.get(d.dataId).id,m=De.sizeFromShape(d.shape),g=l.shape[c[0]];return cS(o,U_[l.dtype],m,g,f),h&&t.disposeData(u.dataId),d},setupFunc:function(e){cS=e.wasm.cwrap("ArgMax",null,["number","number","number","number","number"])}};let pS;const dS={kernelName:"AvgPool",backendName:"wasm",setupFunc:function(e){pS=e.wasm.cwrap("AvgPool",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,i=t.x,a=r.dataIdMap.get(i.dataId).id,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=n,c=Oa.computePool2DInfo(i.shape,s,o,1,l,u),h=c.filterHeight,p=c.filterWidth,d=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,x=c.strideWidth,v=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const b=r.makeOutput(c.outShape,"float32"),w=r.dataIdMap.get(b.dataId).id;return pS(a,i.shape[0],i.shape[1],i.shape[2],h,p,d,f,m,g,y,x,v,w),b}};function fS(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:i}=n,a=De.sizeFromShape(r.shape),s=De.inferFromImplicitShape(i,a);return De.assert(a===De.sizeFromShape(s),(()=>`new shape: ${s}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:s,dtype:r.dtype}}const mS={kernelName:"Reshape",backendName:"wasm",kernelFunc:fS};let gS;const yS={kernelName:"BatchMatMul",backendName:"wasm",setupFunc:function(e){gS=e.wasm.cwrap("BatchMatMul",null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:i,b:a}=t,{transposeA:s,transposeB:o}=r;if("float32"!==i.dtype||"float32"!==a.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const l=i.shape.length,u=a.shape.length,c=s?i.shape[l-2]:i.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],p=s?i.shape[l-1]:i.shape[l-2],d=o?a.shape[u-2]:a.shape[u-1],f=i.shape.slice(0,-2),m=a.shape.slice(0,-2),g=De.sizeFromShape(f),y=De.sizeFromShape(m),x=Ji.assertAndGetBroadcastShape(i.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,d]);De.assert(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${i.shape} and ${a.shape} and transposeA=${s} and transposeB=${o} must match.`));const v=o?[y,d,h]:[y,h,d],b=fS({inputs:{x:i},backend:n,attrs:{shape:s?[g,c,p]:[g,p,c]}}),w=fS({inputs:{x:a},backend:n,attrs:{shape:v}}),_=n.dataIdMap.get(b.dataId).id,S=n.dataIdMap.get(w.dataId).id,T=s?b.shape[2]:b.shape[1],E=o?w.shape[1]:w.shape[2],M=Math.max(g,y),C=n.makeOutput([M,T,E],b.dtype),I=n.dataIdMap.get(C.dataId).id,k=new Uint8Array(new Int32Array(b.shape).buffer),A=new Uint8Array(new Int32Array(w.shape).buffer);return gS(_,k,b.shape.length,S,A,w.shape.length,s,o,I),n.disposeData(b.dataId),n.disposeData(w.dataId),C.shape=x,C}};function xS(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:i}=e,[a,s]=ga.parseSliceParams(t,n,r),o=ga.isSliceContinous(t.shape,a,s),l=i.readSync(t.dataId),u=i.makeOutput(s,t.dtype),c=De.computeStrides(t.shape),h=i.dataIdMap.get(u.dataId);if(o){const e=ga.computeFlatOffset(a,c);if("string"===t.dtype)h.stringBytes=l.slice(e,e+De.sizeFromShape(s));else{i.typedArrayFromHeap(u).set(l.subarray(e,e+De.sizeFromShape(s)))}return u}if("string"===t.dtype){const e=Fm(l,a,s,t.shape,t.dtype);return h.stringBytes=e,u}const p=i.typedArrayFromHeap(u),d=t.shape.length;if(2===d)!function(e,t,n,r,i){let a=0;const s=r[0],o=r[1],l=s+i[0];for(let r=s;r<l;r++){const s=r*t+o;n.set(e.subarray(s,s+i[1]),a),a+=i[1]}}(l,c[0],p,a,s);else if(3===d)!function(e,t,n,r,i,a){let s=0;const o=i[0],l=i[1],u=i[2],c=o+a[0],h=l+a[1];for(let i=o;i<c;i++)for(let o=l;o<h;o++){const l=i*t+o*n+u;r.set(e.subarray(l,l+a[2]),s),s+=a[2]}}(l,c[0],c[1],p,a,s);else if(4===d)!function(e,t,n,r,i,a,s){let o=0;const l=a[0],u=a[1],c=a[2],h=l+s[0],p=u+s[1],d=c+s[2],f=a[3];for(let a=l;a<h;a++)for(let l=u;l<p;l++)for(let u=c;u<d;u++){const c=a*t+l*n+u*r+f;i.set(e.subarray(c,c+s[3]),o),o+=s[3]}}(l,c[0],c[1],c[2],p,a,s);else{const e=Fm(l,a,s,t.shape,t.dtype);p.set(e)}return u}const vS={kernelName:"Slice",backendName:"wasm",kernelFunc:xS};const bS={kernelName:"BatchToSpaceND",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{blockShape:a,crops:s}=r,o=a.reduce(((e,t)=>e*t)),l=Oa.getReshaped(i.shape,a,o),u=Oa.getPermuted(l.length,a.length),c=Oa.getReshapedPermuted(i.shape,a,o),h=Oa.getSliceBeginCoords(s,a.length),p=Oa.getSliceSize(c,s,a.length),d=fS({inputs:{x:i},backend:n,attrs:{shape:l}}),f=rS({inputs:{x:d},backend:n,attrs:{perm:u}}),m=xS({inputs:{x:fS({inputs:{x:f},backend:n,attrs:{shape:c}})},backend:n,attrs:{begin:h,size:p}});return n.disposeData(d.dataId),n.disposeData(f.dataId),n.disposeData(d.dataId),m}};function wS(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,i=r.makeOutput(t.shape,n),a=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(i).set(a),i}const _S={kernelName:"Cast",backendName:"wasm",kernelFunc:wS},SS=X_("Ceil");let TS;const ES={kernelName:"ClipByValue",backendName:"wasm",setupFunc:function(e){TS=e.wasm.cwrap("ClipByValue",null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{clipValueMin:a,clipValueMax:s}=r,o=n.dataIdMap.get(i.dataId).id,l=n.makeOutput(i.shape,i.dtype),u=n.dataIdMap.get(l.dataId).id;return TS(o,a,s,u),l}};function MS(e){const{inputs:t,backend:n}=e,r=De.parseAxisParam(e.attrs.axis,t[0].shape)[0];let i=Oa.computeOutShape(t.map((e=>e.shape)),r);const a=t.filter((e=>De.sizeFromShape(e.shape)>0));if(1===a.length)return eS({inputs:{x:a[0]},backend:n});const s=n.makeOutput(i,t[0].dtype);if(0===De.sizeFromShape(i))return s;const o=a.map((e=>e.shape));if(Oa.assertParamsConsistent(o,r),"string"===a[0].dtype){const e=a.map((e=>{const t=De.sizeFromShape(e.shape.slice(r));return fS({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));i=Oa.computeOutShape(e.map((e=>e.shape)),1);const l=1===e[0].shape[0],u=sm(o,i,t[0].dtype,l),c=Oa.computeOutShape(a.map((e=>e.shape)),r);s.shape=c;return n.dataIdMap.get(s.dataId).stringBytes=Oa.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),s}const l=De.sizeFromShape(a[0].shape.slice(0,r));let u=0;const c=a.map((e=>{const t=De.sizeFromShape(e.shape.slice(r));return u+=t,t})),h=a.map((e=>n.typedArrayFromHeap(e))),p=n.typedArrayFromHeap(s);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<h.length;n++){const r=c[n],i=e*r,a=h[n].subarray(i,i+r);p.set(a,t),t+=r}}return s}const CS={kernelName:"Concat",backendName:"wasm",kernelFunc:MS};let IS;const kS={kernelName:"Conv2D",backendName:"wasm",setupFunc:function(e){IS=e.wasm.cwrap("Conv2D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:i,filter:a}=t,s=r.dataIdMap.get(i.dataId).id,o=r.dataIdMap.get(a.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:h,dataFormat:p}=n,d=Oa.convertConv2DDataFormat(p),f=Oa.computeConv2DInfo(i.shape,a.shape,l,u,c,h,!1,d),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,x=f.padInfo.right,v=f.padInfo.bottom,b=f.padInfo.left,w=f.dilationHeight,_=f.dilationWidth,S=f.strideHeight,T=f.strideWidth,E=f.inChannels,M=f.outChannels,C="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const I=r.makeOutput(f.outShape,"float32"),k=r.dataIdMap.get(I.dataId).id;return IS(s,i.shape[0],i.shape[1],i.shape[2],o,m,g,y,x,v,b,C,w,_,S,T,E,M,k),I}};let AS;const NS={kernelName:"Conv2DBackpropInput",backendName:"wasm",setupFunc:function(e){AS=e.wasm.cwrap("Conv2DBackpropInput",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:i,filter:a}=n,{strides:s,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:c}=r,h=Oa.convertConv2DDataFormat(l),p=Oa.computeConv2DInfo(c,a.shape,s,1,o,u,!1,h),{batchSize:d,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:x,outChannels:v,outHeight:b,outWidth:w,strideHeight:_,strideWidth:S}=p,T=f-1-p.padInfo.top,E=m-1-p.padInfo.left,M="channelsLast"===p.dataFormat,C=De.computeStrides(p.inShape),I=De.computeStrides(i.shape),[k,A,N]=De.computeStrides(a.shape),R=C[0],L=M?C[1]:C[2],O=M?C[2]:1,P=M?1:C[1],D=I[0],F=M?I[1]:I[2],$=M?I[2]:1,B=M?1:I[1],z=t.makeOutput(p.inShape,"float32"),U=t.dataIdMap.get(z.dataId).id,V=t.dataIdMap.get(i.dataId).id,W=t.dataIdMap.get(a.dataId).id;return AS(V,W,d,f,m,y,x,g,b,w,v,_,S,T,E,k,A,N,R,L,O,P,D,F,$,B,U),z}},RS=X_("Cos"),LS=X_("Cosh");var OS,PS;let DS;(PS=OS||(OS={}))[PS.bilinear=0]="bilinear",PS[PS.nearest=1]="nearest";const FS={kernelName:"CropAndResize",backendName:"wasm",setupFunc:function(e){DS=e.wasm.cwrap("CropAndResize",null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:i,extrapolationValue:a,cropSize:s}=r,{image:o,boxes:l,boxInd:u}=n,c=l.shape[0],[h,p]=s,d=[c,h,p,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=wS({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(l.dataId).id,x=t.dataIdMap.get(u.dataId).id,v=t.makeOutput(d,"float32"),b=t.dataIdMap.get(v.dataId).id,w=new Uint8Array(new Int32Array(o.shape).buffer);return DS(g,y,x,c,w,h,p,OS[i],a,b),null!=f&&t.disposeData(f.dataId),v}};let $S;const BS={kernelName:"Cumprod",backendName:"wasm",setupFunc:function(e){$S=e.wasm.cwrap("Cumprod",null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:a,exclusive:s,reverse:o}=r,l=i.shape.length;De.assert("float32"===i.dtype||"int32"===i.dtype,(()=>`cumprod does not support ${i.dtype} tensors in the WASM backend`));const u=Oa.getAxesPermutation([a],l);let c=i;null!==u&&(c=rS({inputs:{x:i},attrs:{perm:u},backend:n}));const h=Oa.getInnerMostAxes(1,l)[0];Oa.assertAxesAreInnerMostDims("cumprod",[h],l);const p=n.makeOutput(c.shape,c.dtype),d=c.shape[h],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(p.dataId).id;$S(f,s?1:0,o?1:0,d,m,U_[i.dtype]);let g=p;if(null!==u){g=rS({inputs:{x:p},attrs:{perm:Oa.getUndoAxesPermutation(u)},backend:n}),n.disposeData(c.dataId),n.disposeData(p.dataId)}return g}};let zS;const US={kernelName:"Cumsum",backendName:"wasm",setupFunc:function(e){zS=e.wasm.cwrap("Cumsum",null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:a,exclusive:s,reverse:o}=r,l=i.shape.length;De.assert("float32"===i.dtype||"int32"===i.dtype,(()=>`cumsum does not support ${i.dtype} tensors in the WASM backend`));const u=Oa.getAxesPermutation([a],l);let c=i;null!==u&&(c=rS({inputs:{x:i},attrs:{perm:u},backend:n}));const h=Oa.getInnerMostAxes(1,l)[0];Oa.assertAxesAreInnerMostDims("cumsum",[h],l);const p=n.makeOutput(c.shape,c.dtype),d=c.shape[h],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(p.dataId).id;zS(f,s?1:0,o?1:0,d,m,U_[i.dtype]);let g=p;if(null!==u){g=rS({inputs:{x:p},attrs:{perm:Oa.getUndoAxesPermutation(u)},backend:n}),n.disposeData(c.dataId),n.disposeData(p.dataId)}return g}};let VS;const WS={kernelName:"DepthToSpace",backendName:"wasm",setupFunc:function(e){VS=e.wasm.cwrap("DepthToSpace",null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:i}=n,{blockSize:a,dataFormat:s}=r,o=i.shape[0],l=("NHWC"===s?i.shape[1]:i.shape[2])*a,u=("NHWC"===s?i.shape[2]:i.shape[3])*a,c=("NHWC"===s?i.shape[3]:i.shape[1])/(a*a),h="NHWC"===s?[o,l,u,c]:[o,c,l,u],p=t.makeOutput(h,"float32"),d=t.dataIdMap.get(i.dataId).id,f=new Uint8Array(new Int32Array(De.computeStrides(i.shape)).buffer),m=new Uint8Array(new Int32Array(h).buffer),g=new Uint8Array(new Int32Array(De.computeStrides(h)).buffer),y=t.dataIdMap.get(p.dataId).id;return VS(d,a,"NHWC"===s?1:0,f,i.shape.length-1,m,g,h.length,y),p}};let HS;const GS={kernelName:"DepthwiseConv2dNative",backendName:"wasm",setupFunc:function(e){HS=e.wasm.cwrap("DepthwiseConv2dNative",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:i,filter:a}=t,s=r.dataIdMap.get(i.dataId).id,o=r.dataIdMap.get(a.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:h}=n,p=null==u?[1,1]:u,d=Oa.computeConv2DInfo(i.shape,a.shape,l,p,c,h,!0),f=d.filterHeight,m=d.filterWidth,g=d.padInfo.top,y=d.padInfo.right,x=d.padInfo.bottom,v=d.padInfo.left,b=d.dilationHeight,w=d.dilationWidth,_=d.strideHeight,S=d.strideWidth,T=d.inChannels,E=d.outChannels,M="SAME"===d.padInfo.type?1:0;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);const C=r.makeOutput(d.outShape,"float32"),I=r.dataIdMap.get(C.dataId).id;return HS(s,i.shape[0],i.shape[1],i.shape[2],o,f,m,g,y,x,v,M,b,w,_,S,T,E,I),C}},jS=X_("Elu"),qS=Y_("Equal",0,"bool"),XS=X_("Exp","float32");function KS(e){const{inputs:t,attrs:n,backend:r}=e,{input:i}=t,{dim:a}=n,s=i.shape.length,o=i.shape.slice();let l=a;return a<0&&(De.assert(-(s+1)<=a,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),l=s+a+1),o.splice(l,0,1),fS({inputs:{x:i},backend:r,attrs:{shape:o}})}const YS={kernelName:"ExpandDims",backendName:"wasm",kernelFunc:KS};function ZS(e){const{attrs:{shape:t,value:n,dtype:r},backend:i}=e,a=i.makeOutput(t,r);return i.typedArrayFromHeap(a).fill(n),a}const JS={kernelName:"Fill",backendName:"wasm",kernelFunc:ZS};let QS;const eT={kernelName:"FlipLeftRight",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,i=n.makeOutput(r.shape,r.dtype),a=n.dataIdMap.get(r.dataId).id,s=n.dataIdMap.get(i.dataId).id,[o,l,u,c]=r.shape;return QS(a,o,l,u,c,s),i},setupFunc:function(e){QS=e.wasm.cwrap("FlipLeftRight",null,["number","number","number","number","number","number"])}},tT=X_("Floor"),nT=Y_("FloorDiv");let rT;const iT={kernelName:"FusedBatchNorm",backendName:"wasm",setupFunc:function(e){rT=e.wasm.cwrap("FusedBatchNorm",null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:i}=r,{x:a,mean:s,variance:o,offset:l,scale:u}=n,c=t.dataIdMap.get(a.dataId).id,h=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(o.dataId).id,d=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(0===De.sizeFromShape(a.shape))return m;const g=t.dataIdMap.get(m.dataId).id;return rT(c,h,p,d,f,i,g),m}};let aT;const sT={kernelName:"FusedConv2D",backendName:"wasm",setupFunc:function(e){aT=e.wasm.cwrap("FusedConv2D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:i,filter:a,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dataFormat:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=n,m=Oa.computeConv2DInfo(i.shape,a.shape,l,c,u,p),g=W_[d];if(null==g)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);const y=r.dataIdMap.get(i.dataId).id,x=r.dataIdMap.get(a.dataId).id,v=m.outChannels;let b=0;if(null!=s){const e=r.dataIdMap.get(s.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==v)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${v})`);b=e.id}const w=m.filterHeight,_=m.filterWidth,S=m.padInfo.top,T=m.padInfo.right,E=m.padInfo.bottom,M=m.padInfo.left,C=m.dilationHeight,I=m.dilationWidth,k=m.strideHeight,A=m.strideWidth,N=m.inChannels,R="SAME"===m.padInfo.type?1:0,L=m.batchSize,O=m.inHeight,P=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const D=r.makeOutput(m.outShape,"float32"),F=r.dataIdMap.get(D.dataId).id,$=null==o?0:r.dataIdMap.get(o.dataId).id;return aT(y,L,O,P,x,w,_,b,S,T,E,M,R,C,I,k,A,N,v,g,$,f||0,F),D}};let oT;const lT={kernelName:"FusedDepthwiseConv2D",backendName:"wasm",setupFunc:function(e){oT=e.wasm.cwrap("FusedDepthwiseConv2D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:i,filter:a,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dataFormat:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=n,m=Oa.computeConv2DInfo(i.shape,a.shape,l,c,u,p,!0),g=W_[d];if(null==g)throw new Error(`${d} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=r.dataIdMap.get(i.dataId).id,x=r.dataIdMap.get(a.dataId).id,v=m.outChannels;let b=0;if(null!=s){const e=r.dataIdMap.get(s.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==v)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${v})`);b=e.id}const w=m.filterHeight,_=m.filterWidth,S=m.padInfo.top,T=m.padInfo.right,E=m.padInfo.bottom,M=m.padInfo.left,C=m.dilationHeight,I=m.dilationWidth,k=m.strideHeight,A=m.strideWidth,N=m.inChannels,R="SAME"===m.padInfo.type?1:0,L=m.batchSize,O=m.inHeight,P=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const D=r.makeOutput(m.outShape,"float32"),F=r.dataIdMap.get(D.dataId).id,$=null==o?0:r.dataIdMap.get(o.dataId).id;return oT(y,L,O,P,x,w,_,b,S,T,E,M,R,C,I,k,A,N,v,g,$,f||0,F),D}};let uT;const cT={kernelName:"GatherNd",backendName:"wasm",setupFunc:function(e){uT=e.wasm.cwrap("GatherNd",null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:i}=n,[a,s,o,l]=ca.prepareAndValidate(r,i),u=t.makeOutput(a,r.dtype);if(0===s)return u;const c=i.shape,h=c[c.length-1],p=t.dataIdMap.get(r.dataId).id,d=t.dataIdMap.get(i.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return uT(p,U_[r.dtype],d,s,h,o,f,m),u}};let hT;const pT={kernelName:"GatherV2",backendName:"wasm",setupFunc:function(e){hT=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:i,indices:a}=n,{axis:s,batchDims:o}=r,l=De.parseAxisParam(s,i.shape)[0],u=t.readSync(a.dataId),c=i.shape[l];for(let e=0;e<u.length;++e){const t=u[e];De.assert(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}const h=Oa.segment_util.collectGatherOpShapeInfo(i,a,l,o),p=fS({inputs:{x:i},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),d=De.sizeFromShape(a.shape),f=fS({inputs:{x:a},attrs:{shape:[h.batchSize,d/h.batchSize]},backend:t}),m=[h.batchSize,h.outerSize,d/h.batchSize,h.sliceSize],g=t.makeOutput(m,i.dtype);if(0===De.sizeFromShape(i.shape))return g;const y=p.shape.length-1,x=t.dataIdMap.get(p.dataId).id,v=t.dataIdMap.get(f.dataId).id,b=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array(De.computeStrides(p.shape)).buffer),_=new Uint8Array(new Int32Array(De.computeStrides(m)).buffer);return hT(x,U_[i.dtype],w,y,v,h.batchSize,_,b),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=h.outputShape,g}},dT=Y_("Greater",0,"bool"),fT=Y_("GreaterEqual",0,"bool");let mT;const gT={kernelName:"LeakyRelu",backendName:"wasm",setupFunc:function(e){mT=e.wasm.cwrap("LeakyRelu",null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,i=r.dataIdMap.get(t.dataId).id,a=r.makeOutput(t.shape,"float32");if(0!==De.sizeFromShape(t.shape)){const e=r.dataIdMap.get(a.dataId).id;mT(i,U_[t.dtype],n,e)}return a}},yT=Y_("Less",0,"bool"),xT=Y_("LessEqual",0,"bool"),vT=X_("Log"),bT=Y_("LogicalAnd",0,"bool"),wT=X_("LogicalNot"),_T=Y_("LogicalOr",0,"bool"),ST=Y_("LogicalXor",0,"bool");let TT;const ET={kernelName:"Max",backendName:"wasm",setupFunc:function(e){TT=e.wasm.cwrap("Max",null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:i,keepDims:a}=r,{x:s}=n;let o=t.dataIdMap.get(s.dataId).id,l=s;const{transposed:u,axes:c,originalAxes:h,inputWasTransposed:p}=aS(s,i,t);if(p){l=u,o=t.dataIdMap.get(u.dataId).id}const d=l.shape.length;Oa.assertAxesAreInnerMostDims("max",c,d);const[f,m]=Oa.computeOutAndReduceShapes(l.shape,c),g=De.sizeFromShape(m),y=t.makeOutput(f,s.dtype);if(0!==De.sizeFromShape(l.shape)){const e=t.dataIdMap.get(y.dataId).id;TT(o,U_[s.dtype],g,e)}if(p&&t.disposeData(u.dataId),a){const e=Oa.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},MT=Y_("Maximum");let CT;const IT={kernelName:"MaxPool",backendName:"wasm",setupFunc:function(e){CT=e.wasm.cwrap("MaxPool",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,i=t.x,a=r.dataIdMap.get(i.dataId).id;De.assert("float32"===i.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${i.dtype}.`));const{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=n,c=Oa.computePool2DInfo(i.shape,s,o,1,l,u),h=c.filterHeight,p=c.filterWidth,d=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,x=c.dilationWidth,v=c.strideHeight,b=c.strideWidth,w=c.inChannels,_=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);const S=r.makeOutput(c.outShape,"float32"),T=r.dataIdMap.get(S.dataId).id;return CT(a,i.shape[0],i.shape[1],i.shape[2],h,p,d,f,m,g,y,x,v,b,w,_,T),S}};let kT;const AT={kernelName:"Mean",backendName:"wasm",setupFunc:function(e){kT=e.wasm.cwrap("Mean",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:i,keepDims:a}=r,{x:s}=n,o=t.dataIdMap.get(s.dataId).id;let l=o,u=s;const{transposed:c,axes:h,originalAxes:p,inputWasTransposed:d}=aS(s,i,t);let f=h;if(d){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(u=c,l=e,f=Oa.getInnerMostAxes(f.length,u.shape.length))}Oa.assertAxesAreInnerMostDims("mean",f,u.shape.length);const[m,g]=Oa.computeOutAndReduceShapes(u.shape,f),y=De.sizeFromShape(g);let x=u;"float32"!==u.dtype&&(x=wS({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(x.dataId).id);const v=t.makeOutput(m,"float32");if(0!==De.sizeFromShape(u.shape)){const e=t.dataIdMap.get(v.dataId).id;kT(l,y,e)}if(d&&t.disposeData(c.dataId),a){const e=Oa.expandShapeToKeepDim(v.shape,p);v.shape=e}return"float32"!==u.dtype&&t.disposeData(x.dataId),v}};let NT;const RT={kernelName:"Min",backendName:"wasm",setupFunc:function(e){NT=e.wasm.cwrap("Min",null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:i,keepDims:a}=r,{x:s}=n,o=t.dataIdMap.get(s.dataId).id;let l=o,u=s;const{transposed:c,axes:h,originalAxes:p,inputWasTransposed:d}=aS(s,i,t);if(d){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(u=c,l=e)}const f=u.shape.length;Oa.assertAxesAreInnerMostDims("min",h,f);const[m,g]=Oa.computeOutAndReduceShapes(u.shape,h),y=De.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(0!==De.sizeFromShape(u.shape)){const e=t.dataIdMap.get(x.dataId).id;NT(l,U_[s.dtype],y,e)}if(d&&t.disposeData(c.dataId),a){const e=Oa.expandShapeToKeepDim(x.shape,p);x.shape=e}return x}},LT=Y_("Minimum");var OT,PT;let DT;(PT=OT||(OT={}))[PT.reflect=0]="reflect",PT[PT.symmetric=1]="symmetric";const FT={kernelName:"MirrorPad",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,mode:i}}=e,a=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),s=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),h=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(c).buffer),d=new Uint8Array(new Int32Array(h).buffer);return DT(s,u,t.shape.length,U_[t.dtype],p,d,OT[i],l),o},setupFunc:function(e){DT=e.wasm.cwrap("MirrorPad",null,["number","array","number","number","array","array","number","number"])}},$T=Y_("Multiply"),BT=X_("Neg");function zT(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],i=n[1],a=n[2],s=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:i,pSelectedScores:a,pValidOutputs:s}}let UT;const VT={kernelName:"NonMaxSuppressionV3",backendName:"wasm",setupFunc:function(e){UT=e.wasm.cwrap("NonMaxSuppressionV3","number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:i,maxOutputSize:a,scoreThreshold:s}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(l.dataId).id,h=UT(u,c,a,i,s),{pSelectedIndices:p,selectedSize:d,pSelectedScores:f,pValidOutputs:m}=zT(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([d],"int32",p)}};let WT;const HT={kernelName:"NonMaxSuppressionV4",backendName:"wasm",setupFunc:function(e){WT=e.wasm.cwrap("NonMaxSuppressionV4","number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:i,maxOutputSize:a,scoreThreshold:s,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,c=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=WT(c,h,a,i,s,o),{pSelectedIndices:d,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=zT(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",d),t.makeOutput([],"int32",g)]}};let GT;const jT={kernelName:"NonMaxSuppressionV5",backendName:"wasm",setupFunc:function(e){GT=e.wasm.cwrap("NonMaxSuppressionV5","number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:i,maxOutputSize:a,scoreThreshold:s,softNmsSigma:o}=r,{boxes:l,scores:u}=n,c=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=GT(c,h,a,i,s,o),{pSelectedIndices:d,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=zT(t,p);return t.wasm._free(g),[t.makeOutput([f],"int32",d),t.makeOutput([f],"float32",m)]}},qT=Y_("NotEqual",0,"bool");let XT;const KT={kernelName:"OneHot",backendName:"wasm",setupFunc:function(e){XT=e.wasm.cwrap("OneHot",null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:i}=t,{dtype:a,depth:s,onValue:o,offValue:l}=r,u=n.makeOutput([...i.shape,s],a),c=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(i.dataId).id;return XT(h,s,o,l,c),u}};const YT={kernelName:"OnesLike",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}};const ZT={kernelName:"Pack",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:i}=r;if(1===t.length)return KS({inputs:{input:t[0]},backend:n,attrs:{dim:i}});const a=t[0].shape,s=t[0].dtype;t.forEach((e=>{De.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),De.assert(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=MS({inputs:t.map((e=>{const t=KS({inputs:{input:e},backend:n,attrs:{dim:i}});return o.push(t),t})),backend:n,attrs:{axis:i}});return o.forEach((e=>n.disposeData(e.dataId))),l}};let JT;const QT={kernelName:"PadV2",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:i}}=e,a=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===De.sizeFromShape(t.shape))return ZS({backend:n,attrs:{shape:a,value:i,dtype:t.dtype}});const s=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),h=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(c).buffer),d=new Uint8Array(new Int32Array(h).buffer);return JT(s,u,t.shape.length,U_[t.dtype],p,d,i,l),o},setupFunc:function(e){JT=e.wasm.cwrap("PadV2",null,["number","array","number","number","array","array","number","number"])}},eE=Y_("Pow");let tE;const nE={kernelName:"Prelu",backendName:"wasm",setupFunc:function(e){tE=e.wasm.cwrap("Prelu",null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:i}=t,a=n.dataIdMap.get(r.dataId).id,s=n.dataIdMap.get(i.dataId).id;let o=a;const l=r;let u=l;"float32"!==l.dtype&&(u=wS({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);const c=n.makeOutput(r.shape,"float32"),h=n.dataIdMap.get(c.dataId).id;return tE(o,s,h),"float32"!==l.dtype&&n.disposeData(u.dataId),c}};let rE;const iE={kernelName:"Prod",backendName:"wasm",setupFunc:function(e){rE=e.wasm.cwrap("Prod",null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:i,keepDims:a}=r,{x:s}=n,o=t.dataIdMap.get(s.dataId).id;let l=o,u=s;const{transposed:c,axes:h,originalAxes:p,inputWasTransposed:d}=aS(s,i,t);let f=h;if(d){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(u=c,l=e,f=Oa.getInnerMostAxes(f.length,u.shape.length))}Oa.assertAxesAreInnerMostDims("prod",f,u.shape.length);const[m,g]=Oa.computeOutAndReduceShapes(u.shape,f),y=De.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(0!==De.sizeFromShape(u.shape)){const e=t.dataIdMap.get(x.dataId).id;rE(l,y,U_[x.dtype],e)}if(d&&t.disposeData(c.dataId),a){const e=Oa.expandShapeToKeepDim(x.shape,p);x.shape=e}return x}},aE={kernelName:"Range",backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:i,step:a,dtype:s}=n,o=Lm(r,i,a,s),l=t.makeOutput([o.length],s);return t.typedArrayFromHeap(l).set(o),l}},sE=Y_("RealDiv"),oE=X_("Relu"),lE=X_("Relu6");let uE;const cE={kernelName:"ResizeBilinear",backendName:"wasm",setupFunc:function(e){uE=e.wasm.cwrap("ResizeBilinear",null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:i}=n,{alignCorners:a,halfPixelCenters:s,size:o}=r,[l,u]=o,[c,h,p,d]=i.shape,f=[c,l,u,d];let m,g=t.dataIdMap.get(i.dataId);"float32"!==g.dtype&&(m=wS({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(m.dataId));const y=g.id,x=t.makeOutput(f,"float32");if(0===De.sizeFromShape(i.shape))return x;const v=t.dataIdMap.get(x.dataId).id;return uE(y,c,h,p,d,l,u,a?1:0,s?1:0,v),null!=m&&t.disposeData(m.dataId),x}};let hE;const pE={kernelName:"ResizeNearestNeighbor",backendName:"wasm",setupFunc:function(e){hE=e.wasm.cwrap("ResizeNearestNeighbor",null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:i}=n,{alignCorners:a,halfPixelCenters:s,size:o}=r,[l,u]=o,[c,h,p,d]=i.shape,f=[c,l,u,d],m=t.makeOutput(f,"float32");if(0===De.sizeFromShape(i.shape))return m;let g,y=t.dataIdMap.get(i.dataId);"float32"!==y.dtype&&(g=wS({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));const x=y.id,v=t.dataIdMap.get(m.dataId).id;return hE(x,c,h,p,d,l,u,a?1:0,s?1:0,v),null!=g&&t.disposeData(g.dataId),m}};let dE;const fE={kernelName:"Reverse",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{dims:a}=r,s=De.parseAxisParam(a,i.shape);if(0===i.shape.length)return eS({inputs:{x:i},backend:n});const o=n.makeOutput(i.shape,i.dtype),l=n.dataIdMap.get(i.dataId).id,u=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(s).buffer),h=new Uint8Array(new Int32Array(i.shape).buffer);dE(l,c,s.length,h,i.shape.length,u);const p=fS({inputs:{x:o},attrs:{shape:i.shape},backend:n});return n.disposeData(o.dataId),p},setupFunc:function(e){dE=e.wasm.cwrap("Reverse",null,["number","array","number","array","number","number"])}};let mE;const gE={kernelName:"RotateWithOffset",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:i}=t,{radians:a,fillValue:s,center:o}=r,l=n.makeOutput(i.shape,i.dtype),u=n.dataIdMap.get(i.dataId).id,c=n.dataIdMap.get(l.dataId).id,[h,p,d,f]=i.shape,[m,g]=Oa.getImageCenter(o,p,d),y="number"==typeof s?[s,s,s,0===s?0:255]:[...s,255],x=new Uint8Array(new Int32Array(y).buffer);return mE(u,h,p,d,f,a,m,g,x,y.length,c),l},setupFunc:function(e){mE=e.wasm.cwrap("RotateWithOffset",null,["number","number","number","number","number","number","number","number","array","number","number"])}},yE=X_("Round"),xE=X_("Rsqrt");let vE;const bE={kernelName:"ScatterNd",backendName:"wasm",setupFunc:function(e){vE=e.wasm.cwrap("ScatterNd",null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:i,updates:a}=n,{shape:s}=r,o=t.makeOutput(s,a.dtype);if(0===De.sizeFromShape(s))return o;const{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=pa.calculateShapes(a,i,s),d=t.dataIdMap.get(i.dataId).id,f=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return vE(d,f,U_[a.dtype],l,u,c,m,p,g),o}};let wE;const _E={kernelName:"Select",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:i,e:a}=t,s=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(i.dataId).id,l=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(i.shape,i.dtype),c=n.dataIdMap.get(u.dataId).id,h=r.shape.length,p=i.shape.length,d=0===h||h>1||1===p?1:De.sizeFromShape(i.shape.slice(1));return wE(s,o,l,d,c),u},setupFunc:function(e){wE=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};let SE;const TE={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){SE=e.wasm.cwrap("Sigmoid",null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,i=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(i.dataId).id;return 0===De.sizeFromShape(i.shape)||SE(r,a),i}},EE=X_("Sin");let ME;const CE={kernelName:"Softmax",backendName:"wasm",setupFunc:function(e){ME=e.wasm.cwrap("Softmax",null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,i=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id,o=n.shape[r],l=De.sizeFromShape(n.shape)/o;return 0===De.sizeFromShape(a.shape)||ME(i,s,o,l),a}};const IE={kernelName:"SpaceToBatchND",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{blockShape:a,paddings:s}=r,o=De.sizeFromShape(a),l=[[0,0]];l.push(...s);for(let e=1+a.length;e<i.shape.length;++e)l.push([0,0]);const u=QT.kernelFunc({inputs:{x:i},backend:n,attrs:{paddings:l,constantValue:0}}),c=Oa.getReshaped(u.shape,a,o,!1),h=Oa.getPermuted(c.length,a.length,!1),p=Oa.getReshapedPermuted(u.shape,a,o,!1),d=fS({inputs:{x:u},backend:n,attrs:{shape:c}}),f=rS({inputs:{x:d},backend:n,attrs:{perm:h}}),m=fS({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeData(u.dataId),n.disposeData(d.dataId),n.disposeData(f.dataId),m}};let kE;const AE={kernelName:"SparseFillEmptyRows",backendName:"wasm",setupFunc:function(e){kE=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{indices:r,values:i,denseShape:a,defaultValue:s}=n,o=r.shape[0],l=r.shape[1],u=t.readSync(a.dataId)[0],c=[o+u,l],h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=t.makeOutput(c,r.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(c.slice(0,1),i.dtype),y=t.dataIdMap.get(g.dataId).id,x=t.makeOutput([u],"bool"),v=t.dataIdMap.get(x.dataId).id,b=t.makeOutput([o],r.dtype),w=t.dataIdMap.get(b.dataId).id,_=t.makeOutput([4],"int32"),S=t.dataIdMap.get(_.dataId).id,T=kE(h,p,U_[i.dtype],o,u,l,d,m,y,v,w,S),E=t.readSync(_.dataId);let M;switch(E[0]){case 1:M=Oa.getSparseFillEmptyRowsIndicesDenseShapeMismatch(E[1]);break;case 2:M=Oa.getSparseFillEmptyRowsNegativeIndexErrorMessage(E[1],E[2]);break;case 3:M=Oa.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(E[1],E[2],E[3]);break;default:M=""}if(t.disposeData(_.dataId),M)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(x.dataId),t.disposeData(b.dataId),new Error(M);let C=f,I=g;return T!==c[0]&&(C=xS({inputs:{x:f},attrs:{begin:0,size:[T,l]},backend:t}),I=xS({inputs:{x:g},attrs:{begin:0,size:T},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[C,I,x,b]}};let NE;const RE={kernelName:"SparseReshape",backendName:"wasm",setupFunc:function(e){NE=e.wasm.cwrap("SparseReshape",null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{inputIndices:r,inputShape:i,newShape:a}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==i.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${i.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const s=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(i.dataId).id,l=t.dataIdMap.get(a.dataId).id,u=r.shape[0],c=De.sizeFromShape(a.shape),h=t.makeOutput([u,c],r.dtype),p=t.dataIdMap.get(h.dataId).id,d=t.makeOutput([c],a.dtype),f=t.dataIdMap.get(d.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;NE(s,o,l,u,p,f,g);const y=t.readSync(m.dataId);let x;switch(y[0]){case 0:x=Oa.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break;case 1:x=Oa.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break;case 2:x=Oa.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{const e=Array.from(t.readSync(i.dataId)),n=Array.from(t.readSync(d.dataId));x=Oa.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{const e=Array.from(t.readSync(i.dataId)),n=Array.from(t.readSync(d.dataId));x=Oa.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:x=""}if(t.disposeData(m.dataId),x)throw t.disposeData(h.dataId),t.disposeData(d.dataId),new Error(x);return[h,d]}};let LE;function OE(e){LE=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function PE(e,t){const{backend:n,inputs:r}=e,{data:i,indices:a,segmentIds:s}=r,o=a.shape[0],l=n.readSync(s.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(Oa.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const c=i.shape.slice();c[0]=u;const h=n.dataIdMap.get(i.dataId).id,p=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id,f=n.makeOutput(c,i.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;LE(h,U_[i.dtype],i.shape[0],p,d,m,y,t,0);const x=n.readSync(g.dataId);let v;switch(x[0]){case 0:v=Oa.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:v=Oa.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:v=Oa.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:v=Oa.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:v=""}if(n.disposeData(g.dataId),v)throw n.disposeData(f.dataId),new Error(v);return f}const DE={kernelName:"SparseSegmentMean",backendName:"wasm",setupFunc:OE,kernelFunc:function(e){return PE(e,!0)}};const FE={kernelName:"SparseSegmentSum",backendName:"wasm",setupFunc:OE,kernelFunc:function(e){return PE(e,!1)}};const $E={kernelName:"SplitV",backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:i}=t,{numOrSizeSplits:a,axis:s}=n,o=De.parseAxisParam(s,i.shape)[0],l=Oa.prepareSplitSize(i,a,o),u=new Array(i.shape.length).fill(0),c=i.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const n=xS({inputs:{x:i},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n}))}},BE=X_("Sqrt"),zE=X_("Square"),UE=Y_("SquaredDifference");let VE;const WE={kernelName:"Step",backendName:"wasm",setupFunc:function(e){VE=e.wasm.cwrap("Step",null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:i}=r,{x:a}=n,s=t.dataIdMap.get(a.dataId).id,o=t.makeOutput(a.shape,a.dtype),l=t.dataIdMap.get(o.dataId).id;return VE(s,i,U_[a.dtype],l),o}};let HE;const GE={kernelName:"StridedSlice",backendName:"wasm",setupFunc:function(e){HE=e.wasm.cwrap("StridedSlice",null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:i}=n,{begin:a,end:s,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:v,strides:b}=ga.sliceInfo(i.shape,a,s,o,l,u,c,h,p);let w;if(m)w=fS({inputs:{x:i},backend:t,attrs:{shape:f}});else if(g||y){De.assert(i.shape.length>=1,(()=>`Input must have rank at least 1, got: ${i.shape.length}`));const e=ga.computeOutShape(x,v,b),n=xS({inputs:{x:i},backend:t,attrs:{begin:x,size:e}});w=fS({inputs:{x:n},backend:t,attrs:{shape:f}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(d,"float32"),n=t.dataIdMap.get(i.dataId).id,r=new Uint8Array(new Int32Array(De.computeStrides(i.shape)).buffer),a=new Uint8Array(new Int32Array(x).buffer),s=new Uint8Array(new Int32Array(v).buffer),o=new Uint8Array(new Int32Array(b).buffer),l=new Uint8Array(new Int32Array(d).buffer),u=new Uint8Array(new Int32Array(De.computeStrides(d)).buffer),c=t.dataIdMap.get(e.dataId).id;HE(n,r,i.shape.length,a,s,o,l,u,d.length,c),w=fS({inputs:{x:e},backend:t,attrs:{shape:f}}),t.disposeData(e.dataId)}return w}};const jE={kernelName:"StringNGrams",backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{data:i,dataSplits:a}=n,{separator:s,nGramWidths:o,leftPad:l,rightPad:u,padWidth:c,preserveShortSequences:h}=r,p=t.readSync(i.dataId),d=t.readSync(a.dataId),[f,m]=Gm(p,d,s,o,l,u,c,h),g=t.makeOutput([f.length],"string");t.dataIdMap.get(g.dataId).stringBytes=f;const y=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(y).set(m),[g,y]}};const qE={kernelName:"StringSplit",backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{input:i,delimiter:a}=n,{skipEmpty:s}=r,o=t.readSync(i.dataId),l=t.readSync(a.dataId),[u,c,h]=qm(o,l[0],s),p=c.length,d=t.makeOutput([p,2],"int32");t.typedArrayFromHeap(d).set(u);const f=t.makeOutput([p],"string");t.dataIdMap.get(f.dataId).stringBytes=c;const m=t.makeOutput([2],"int32");return t.typedArrayFromHeap(m).set(h),[d,f,m]}};const XE={kernelName:"StringToHashBucketFast",backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{input:i}=n,{numBuckets:a}=r,s=Xm(t.readSync(i.dataId),a),o=t.makeOutput(i.shape,"int32");return t.typedArrayFromHeap(o).set(s),o}},KE=Y_("Sub");let YE;const ZE={kernelName:"Sum",backendName:"wasm",setupFunc:function(e){YE=e.wasm.cwrap("Sum",null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:i,keepDims:a}=r,{x:s}=n,o=t.dataIdMap.get(s.dataId).id;let l=o,u=s;const{transposed:c,axes:h,originalAxes:p,inputWasTransposed:d}=aS(s,i,t);let f=h;if(d){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(u=c,l=e,f=Oa.getInnerMostAxes(f.length,u.shape.length))}Oa.assertAxesAreInnerMostDims("sum",f,u.shape.length);const[m,g]=Oa.computeOutAndReduceShapes(u.shape,f),y=De.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(0!==De.sizeFromShape(u.shape)){const e=t.dataIdMap.get(x.dataId).id;YE(l,y,U_[x.dtype],e)}if(d&&t.disposeData(c.dataId),a){const e=Oa.expandShapeToKeepDim(x.shape,p);x.shape=e}return x}},JE=X_("Tan"),QE=X_("Tanh");let eM;let tM;let nM;const rM=[q_,K_,Z_,Q_,oS,uS,hS,dS,yS,bS,_S,SS,ES,CS,kS,NS,RS,LS,FS,BS,US,WS,GS,jS,qS,XS,YS,JS,eT,tT,nT,iT,sT,lT,cT,pT,dT,fT,tS,gT,yT,xT,vT,bT,wT,_T,ST,ET,MT,IT,AT,RT,LT,FT,$T,BT,VT,HT,jT,qT,KT,YT,ZT,QT,eE,nE,iE,aE,sE,oE,lE,mS,cE,pE,fE,gE,yE,xE,bE,_E,TE,EE,vS,CE,IE,AE,RE,DE,FE,$E,BE,zE,UE,WE,GE,jE,qE,XE,KE,ZE,JE,QE,{kernelName:"Tile",backendName:"wasm",setupFunc:function(e){eM=e.wasm.cwrap("Tile",null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,a=n.dataIdMap.get(i.dataId).id,{reps:s}=r,o=new Array(i.shape.length);for(let e=0;e<o.length;e++)o[e]=i.shape[e]*s[e];const l=new Uint8Array(new Int32Array(i.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,i.dtype),h=n.dataIdMap.get(c.dataId).id;return eM(a,l,i.shape.length,u,o.length,U_[c.dtype],h),c}},{kernelName:"TopK",backendName:"wasm",setupFunc:function(e){tM=e.wasm.cwrap("TopK",null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{k:i,sorted:a}=n,s=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=i;const u=t.makeOutput(l,r.dtype),c=t.dataIdMap.get(u.dataId).id,h=t.makeOutput(l,"int32"),p=t.dataIdMap.get(h.dataId).id;return tM(s,o,r.shape.length,U_[r.dtype],i,a,c,p),[u,h]}},{kernelName:"Transform",backendName:"wasm",setupFunc:function(e){nM=e.wasm.cwrap("Transform",null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:i,transforms:a}=n,{interpolation:s,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,p,d]=i.shape,[f,m]=null!=u?u:[h,p],g=[c,f,m,d],y=new Uint8Array(new Int32Array(De.computeStrides(i.shape)).buffer),x=new Uint8Array(new Int32Array(De.computeStrides(g)).buffer),v=t.makeOutput(g,i.dtype),b=t.dataIdMap.get(v.dataId).id,w=t.dataIdMap.get(i.dataId).id,_=t.dataIdMap.get(a.dataId).id,S="nearest"===s?1:2;let T;switch(o){case"constant":default:T=1;break;case"reflect":T=2;break;case"wrap":T=3;break;case"nearest":T=4}return nM(w,_,a.shape[0]>1,c,f,m,d,p,h,y,i.shape.length-1,x,g.length-1,S,T,l,b),v}},iS,{kernelName:"Unpack",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:i}=t;let{axis:a}=r;a<0&&(a+=i.shape.length);const s=i.shape[a],o=i.shape.length,l=new Array(o-1);let u=0;for(let e=0;e<o;e++)e!==a&&(l[u++]=i.shape[e]);const c=new Array(s),h=new Array(o).fill(0),p=i.shape.slice();p[a]=1;for(let e=0;e<c.length;e++)h[a]=e,c[e]=xS({inputs:{x:i},attrs:{begin:h,size:p},backend:n});return c.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l})))}},{kernelName:"ZerosLike",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const e of rM)Oe(e);const iM=se();iM.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),iM.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(iM.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var aM,sM,oM=(sM=(sM="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js",function(t){function n(){return R.buffer!=z&&K(R.buffer),U}function r(){return R.buffer!=z&&K(R.buffer),V}function i(){return R.buffer!=z&&K(R.buffer),W}function s(){return R.buffer!=z&&K(R.buffer),H}var o,l,u,c=void 0!==(t=t||{})?t:{};c.ready=new Promise((function(e,t){o=e,l=t})),void 0!==ce&&ce.listeners&&(u={uncaughtException:ce.listeners("uncaughtException"),unhandledRejection:ce.listeners("unhandledRejection")});var h,p,d,f,m,g,y=Object.assign({},c),x=[],v=(e,t)=>{throw t},b="object"==typeof window,w="function"==typeof importScripts,_="object"==typeof ce&&"object"==typeof ce.versions&&"string"==typeof ce.versions.node,S=c.ENVIRONMENT_IS_PTHREAD||!1,T="";function E(e){return c.locateFile?c.locateFile(e,T):T+e}if(_){let t;T=w?a("kjyEk").dirname(T)+"/":"node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/",g=()=>{m||(f=a("kjyEk"),m=a("kjyEk"))},h=function(e,t){return g(),e=m.normalize(e),f.readFileSync(e,t?void 0:"utf8")},d=e=>{var t=h(e,!0);return t.buffer||(t=new Uint8Array(t)),t},p=(e,t,n)=>{g(),e=m.normalize(e),f.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},ce.argv.length>1&&ce.argv[1].replace(/\\/g,"/"),x=ce.argv.slice(2),ce.on("uncaughtException",(function(e){if(!(e instanceof ut))throw e})),ce.on("unhandledRejection",(function(e){throw e})),v=(e,t)=>{if(ne())throw ce.exitCode=e,t;var n;(n=t)instanceof ut||A("exiting due to exception: "+n),ce.exit(e)},c.inspect=function(){return"[Emscripten Module object]"};try{t=a("kjyEk")}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}e.Worker=t.Worker}else(b||w)&&(w?T=self.location.href:"undefined"!=typeof document&&document.currentScript&&(T=document.currentScript.src),void 0!==sM&&sM&&(T=sM),T=0!==T.indexOf("blob:")?T.substr(0,T.replace(/[?#].*/,"").lastIndexOf("/")+1):"",_||(h=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},w&&(d=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),p=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));_&&"undefined"==typeof performance&&(e.performance=a("kjyEk").performance);var M=console.log.bind(console),C=console.warn.bind(console);_&&(g(),M=e=>f.writeSync(1,e+"\n"),C=e=>f.writeSync(2,e+"\n"));var I,k=c.print||M,A=c.printErr||C;function N(e){N.shown||(N.shown={}),N.shown[e]||(N.shown[e]=1,A(e))}Object.assign(c,y),y=null,c.arguments&&(x=c.arguments),c.thisProgram&&c.thisProgram,c.quit&&(v=c.quit),Atomics.load,Atomics.store,Atomics.compareExchange,c.wasmBinary&&(I=c.wasmBinary);var R,L,O=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&le("no native wasm support detected");var P,D=!1;function F(e){return c["_"+e]}function $(e,t,r,i,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);X(e,t=ot(n),n)}return t},array:function(e){var t=ot(e.length);return function(e,t){n().set(e,t)}(e,t),t}},o=F(e),l=[],u=0;if(i)for(var c=0;c<i.length;c++){var h=s[r[c]];h?(0===u&&(u=at()),l[c]=h(i[c])):l[c]=i[c]}var p=o.apply(null,l);return p=function(e){return 0!==u&&st(u),function(e){return"string"===t?q(e):"boolean"===t?Boolean(e):e}(e)}(p)}function B(e){var t=new TextDecoder(e);this.decode=e=>(e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e))}var z,U,V,W,H,G="undefined"!=typeof TextDecoder?new B("utf8"):void 0;function j(e,t,n){for(var r=t+n,i=t;e[i]&&!(i>=r);)++i;if(i-t>16&&e.subarray&&G)return G.decode(e.subarray(t,i));for(var a="";t<i;){var s=e[t++];if(128&s){var o=63&e[t++];if(192!=(224&s)){var l=63&e[t++];if((s=224==(240&s)?(15&s)<<12|o<<6|l:(7&s)<<18|o<<12|l<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|o)}else a+=String.fromCharCode(s)}return a}function q(e,t){return e?j(r(),e,t):""}function X(e,t,n){return function(e,t,n,r){if(!(r>0))return 0;for(var i=n,a=n+r-1,s=0;s<e.length;++s){var o=e.charCodeAt(s);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++s)),o<=127){if(n>=a)break;t[n++]=o}else if(o<=2047){if(n+1>=a)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=a)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=a)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-i}(e,r(),t,n)}function K(e){z=e,c.HEAP8=U=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=W=new Int32Array(e),c.HEAPU8=V=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=H=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new B("utf-16le"),S&&(z=c.buffer);var Y,Z=c.INITIAL_MEMORY||16777216;if(S)R=c.wasmMemory,z=c.buffer;else if(c.wasmMemory)R=c.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:Z/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw A("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),_&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");R&&(z=R.buffer),Z=z.byteLength,K(z);var J=[],Q=[],ee=[],te=[];function ne(){return O||!1}function re(){S||fe(Q)}var ie,ae=0,se=null,oe=null;function le(e){S?postMessage({cmd:"onAbort",arg:e}):c.onAbort&&c.onAbort(e),A(e="Aborted("+e+")"),D=!0,P=1,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function ue(e){return e.startsWith("data:application/octet-stream;base64,")}function he(e){return e.startsWith("file://")}function pe(e){try{if(e==ie&&I)return new Uint8Array(I);if(d)return d(e);throw"both async and sync fetching of the wasm failed"}catch(e){le(e)}}c.preloadedImages={},c.preloadedAudios={},ue(ie="tfjs-backend-wasm-threaded-simd.wasm")||(ie=E(ie));var de={};function fe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?_e(n)():_e(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(c)}}function me(e){var t=at(),n=e();return st(t),n}function ge(e){var t=xe.pthreads[e];if(t){i()[e>>2]=0;var n=t.worker;xe.returnWorkerToPool(n)}}function ye(e){!function(e,t){if(P=e,!t&&S)throw ve(e),"unwind";var n;ne()||S||xe.terminateAllThreads(),P=n=e,ne()||(xe.terminateAllThreads(),c.onExit&&c.onExit(n),D=!0),v(n,new ut(n))}(e)}var xe={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){S?xe.initWorker():xe.initMainThread()},initMainThread:function(){for(var e=0;e<8;++e)xe.allocateUnusedWorker()},initWorker:function(){O=!1},pthreads:{},setExitStatus:function(e){P=e},terminateAllThreads:function(){for(var e in xe.pthreads){var t=xe.pthreads[e];t&&t.worker&&xe.returnWorkerToPool(t.worker)}for(var n=0;n<xe.unusedWorkers.length;++n)xe.unusedWorkers[n].terminate();xe.unusedWorkers=[]},returnWorkerToPool:function(e){xe.runWithoutMainThreadQueuedCalls((function(){delete xe.pthreads[e.pthread.threadInfoStruct],xe.unusedWorkers.push(e),xe.runningWorkers.splice(xe.runningWorkers.indexOf(e),1),rt(e.pthread.threadInfoStruct),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){i()[lt>>2]=0;try{e()}finally{i()[lt>>2]=1}},receiveObjectTransfer:function(e){},threadInit:function(){for(var e in xe.tlsInitFunctions)xe.tlsInitFunctions[e]()},loadWasmModuleToWorker:function(e,t){e.onmessage=n=>{var r,a=n.data,s=a.cmd;if(e.pthread&&(xe.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),a.targetThread&&a.targetThread!=Ze()){var o=xe.pthreads[a.targetThread];return o?o.worker.postMessage(a,a.transferList):A('Internal error! Worker sent a message "'+s+'" to target pthread '+a.targetThread+", but that thread no longer exists!"),void(xe.currentProxiedOperationCallerThread=void 0)}"processQueuedMainThreadWork"===s?Je():"spawnThread"===s?Te(a):"cleanupThread"===s?ge(a.thread):"killThread"===s?function(e){i()[e>>2]=0;var t=xe.pthreads[e];delete xe.pthreads[e],t.worker.terminate(),rt(e),xe.runningWorkers.splice(xe.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}(a.thread):"cancelThread"===s?(r=a.thread,xe.pthreads[r].worker.postMessage({cmd:"cancel"})):"loaded"===s?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):"print"===s?k("Thread "+a.threadId+": "+a.text):"printErr"===s?A("Thread "+a.threadId+": "+a.text):"alert"===s?alert("Thread "+a.threadId+": "+a.text):"setimmediate"===a.target?e.postMessage(a):"onAbort"===s?c.onAbort&&c.onAbort(a.arg):A("worker sent an unknown command "+s),xe.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw A("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},_&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){}))),e.postMessage({cmd:"load",urlOrBlob:c.mainScriptUrlOrBlob||sM,wasmMemory:R,wasmModule:L})},allocateUnusedWorker:function(){var e=E("tfjs-backend-wasm-threaded-simd.worker.js");xe.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==xe.unusedWorkers.length&&(xe.allocateUnusedWorker(),xe.loadWasmModuleToWorker(xe.unusedWorkers[0])),xe.unusedWorkers.pop()}};function ve(e){if(S)return Me(1,0,e);try{ye(e)}catch(e){!function(e){if(e instanceof ut||"unwind"==e)return P;v(1,e)}(e)}}c.establishStackSpace=function(){var e=Ze(),t=i()[e+44>>2],n=i()[e+48>>2];it(t,t-n),st(t)};var be,we=[];function _e(e){var t=we[e];return t||(e>=we.length&&(we.length=e+1),we[e]=t=Y.get(e)),t}function Se(e,t){var n,r;if(0===e)n=Date.now();else{if(1!==e&&4!==e)return r=28,i()[Ye()>>2]=r,-1;n=be()}return i()[t>>2]=n/1e3|0,i()[t+4>>2]=n%1e3*1e6|0,0}function Te(e){var t=xe.getNewWorker();if(!t)return 6;xe.runningWorkers.push(t);var n=xe.pthreads[e.pthread_ptr]={worker:t,threadInfoStruct:e.pthread_ptr};t.pthread=n;var r={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr};return t.runPthread=()=>{r.time=performance.now(),t.postMessage(r,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread),0}function Ee(){return 2147483648}function Me(e,t){var n=arguments.length-2,r=arguments;return me((function(){for(var i=n,a=ot(8*i),o=a>>3,l=0;l<n;l++){var u=r[2+l];s()[o+l]=u}return tt(e,i,a,t)}))}c.invokeEntryPoint=function(e,t){return _e(e)(t)},be=_?()=>{var e=ce.hrtime();return 1e3*e[0]+e[1]/1e6}:S?()=>performance.now()-c.__performance_now_clock_drift:()=>performance.now();var Ce=[];function Ie(e){try{return R.grow(e-z.byteLength+65535>>>16),K(R.buffer),1}catch(e){}}var ke={inEventHandler:0,removeAllEventListeners:function(){for(var e=ke.eventHandlers.length-1;e>=0;--e)ke._removeHandler(e);ke.eventHandlers=[],ke.deferredCalls=[]},registerRemoveEventListeners:function(){ke.removeEventListenersRegistered||(ee.push(ke.removeAllEventListeners),ke.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var i in ke.deferredCalls){var a=ke.deferredCalls[i];if(a.targetFunction==e&&r(a.argsList,n))return}ke.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),ke.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<ke.deferredCalls.length;++t)ke.deferredCalls[t].targetFunction==e&&(ke.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return ke.inEventHandler&&ke.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(ke.canPerformEventHandlerRequests())for(var e=0;e<ke.deferredCalls.length;++e){var t=ke.deferredCalls[e];ke.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<ke.eventHandlers.length;++n)ke.eventHandlers[n].target!=e||t&&t!=ke.eventHandlers[n].eventTypeString||ke._removeHandler(n--)},_removeHandler:function(e){var t=ke.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),ke.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++ke.inEventHandler,ke.currentEventHandler=e,ke.runDeferredCalls(),e.handlerFunc(t),ke.runDeferredCalls(),--ke.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),ke.eventHandlers.push(e),ke.registerRemoveEventListeners();else for(var n=0;n<ke.eventHandlers.length;++n)ke.eventHandlers[n].target==e.target&&ke.eventHandlers[n].eventTypeString==e.eventTypeString&&ke._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){me((function(){var s=ot(12);i()[s>>2]=n,i()[s+4>>2]=r,i()[s+8>>2]=a,nt(e,637534208,t,r,s)}))},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return xe.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Ae(e,t,n,r){me((function(){var a,s,o,l=ot(12),u=0;t&&(s=function(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}(a=t)+1,o=Xe(s),X(a,o,s),u=o),i()[l>>2]=u,i()[l+4>>2]=n,i()[l+8>>2]=r,nt(e,657457152,0,u,l)}))}var Ne=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function Re(e){var t;return e=(t=e)>2?q(t):t,Ne[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function Le(e){return Re(e)}function Oe(e,t,n){var r=Le(e);if(!r)return-4;if(r.canvasSharedPtr&&(i()[r.canvasSharedPtr>>2]=t,i()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(function(e,t,n,r){Ae(e,t=t?q(t):"",n,r)}(i()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var s=r.GLctxObject.GLctx.getParameter(2978);a=0===s[0]&&0===s[1]&&s[2]===r.width&&s[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function Pe(e,t,n){return S?Me(2,1,e,t,n):Oe(e,t,n)}var De,Fe={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(e){Fe.lastError||(Fe.lastError=e)},getNewId:function(e){for(var t=Fe.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",s=0;s<t;++s){var o=r?i()[r+4*s>>2]:-1;a+=q(i()[n+4*s>>2],o<0?void 0:o)}return a},createContext:function(e,t){e.getContextSafariWebGL2Fixed||(e.getContextSafariWebGL2Fixed=e.getContext,e.getContext=function(t,n){var r=e.getContextSafariWebGL2Fixed(t,n);return"webgl"==t==r instanceof WebGLRenderingContext?r:null});var n=e.getContext("webgl",t);return n?Fe.registerContext(n,t):0},registerContext:function(e,t){var n=Xe(8);i()[n+4>>2]=Ze();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),Fe.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&Fe.initExtensions(r),n},makeContextCurrent:function(e){return Fe.currentContext=Fe.contexts[e],c.ctx=De=Fe.currentContext&&Fe.currentContext.GLctx,!(e&&!De)},getContext:function(e){return Fe.contexts[e]},deleteContext:function(e){Fe.currentContext===Fe.contexts[e]&&(Fe.currentContext=null),"object"==typeof ke&&ke.removeAllHandlersOnTarget(Fe.contexts[e].GLctx.canvas),Fe.contexts[e]&&Fe.contexts[e].GLctx.canvas&&(Fe.contexts[e].GLctx.canvas.GLctxObject=void 0),Ke(Fe.contexts[e].handle),Fe.contexts[e]=null},initExtensions:function(e){if(e||(e=Fe.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t,n=e.GLctx;!function(e){var t=e.getExtension("ANGLE_instanced_arrays");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,a){t.drawElementsInstancedANGLE(e,n,r,i,a)})}(n),function(e){var t=e.getExtension("OES_vertex_array_object");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(n),function(e){var t=e.getExtension("WEBGL_draw_buffers");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(n),n.disjointTimerQueryExt=n.getExtension("EXT_disjoint_timer_query"),(t=n).multiDrawWebgl=t.getExtension("WEBGL_multi_draw"),(n.getSupportedExtensions()||[]).forEach((function(e){e.includes("lose_context")||e.includes("debug")||n.getExtension(e)}))}}},$e=["default","low-power","high-performance"],Be={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Be.buffers[e];0===t||10===t?((1===e?k:A)(j(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Be.varargs+=4,i()[Be.varargs-4>>2]},getStr:function(e){return q(e)},get64:function(e,t){return e}};function ze(e){return S?Me(3,1,e):0}function Ue(e,t,n,r,i){if(S)return Me(4,1,e,t,n,r,i)}function Ve(e,t,n,a){if(S)return Me(5,1,e,t,n,a);for(var s=0,o=0;o<n;o++){var l=i()[t>>2],u=i()[t+4>>2];t+=8;for(var c=0;c<u;c++)Be.printChar(e,r()[l+c]);s+=u}return i()[a>>2]=s,0}xe.init();var We,He,Ge,je=[null,ve,Pe,ze,Ue,Ve],qe={__clock_gettime:function(e,t){return Se(e,t)},__emscripten_init_main_thread_js:function(e){Qe(e,!w,1,!b),xe.threadInit()},__emscripten_thread_cleanup:function(e){S?postMessage({cmd:"cleanupThread",thread:e}):ge(e)},__pthread_create_js:function(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return A("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var i=[];if(S&&0===i.length)return et(687865856,e,t,n,r);var a={startRoutine:n,pthread_ptr:e,arg:r,transferList:i};return S?(a.cmd="spawnThread",postMessage(a,i),0):Te(a)},_emscripten_default_pthread_stack_size:function(){return 2097152},_emscripten_notify_thread_queue:function(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(S)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=xe.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1},abort:function(){le("")},emscripten_check_blocking_allowed:function(){_||w||N("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_get_heap_max:Ee,emscripten_get_now:be,emscripten_memcpy_big:function(e,t,n){r().copyWithin(e,t,t+n)},emscripten_num_logical_cores:function(){return _?a("kjyEk").cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){Ce.length=t;for(var r=n>>3,i=0;i<t;i++)Ce[i]=s()[r+i];return(e<0?de[-e-1]:je[e]).apply(null,Ce)},emscripten_resize_heap:function(e){var t=r().length;if((e>>>=0)<=t)return!1;var n,i,a=2147483648;if(e>a)return!1;for(var s=1;s<=4;s*=2){var o=t*(1+.2/s);if(o=Math.min(o,e+100663296),Ie(Math.min(a,((n=Math.max(e,o))%(i=65536)>0&&(n+=i-n%i),n))))return!0}return!1},emscripten_set_canvas_element_size:function(e,t,n){return Le(e)?Oe(e,t,n):Pe(e,t,n)},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},emscripten_webgl_create_context:function(e,t){return n=e,r=t>>2,a=i()[r+6],s={alpha:!!i()[r+0],depth:!!i()[r+1],stencil:!!i()[r+2],antialias:!!i()[r+3],premultipliedAlpha:!!i()[r+4],preserveDrawingBuffer:!!i()[r+5],powerPreference:$e[a],failIfMajorPerformanceCaveat:!!i()[r+7],majorVersion:i()[r+8],minorVersion:i()[r+9],enableExtensionsByDefault:i()[r+10],explicitSwapControl:i()[r+11],proxyContextToMainThread:i()[r+12],renderViaOffscreenBackBuffer:i()[r+13]},(o=Le(n))?s.explicitSwapControl?0:Fe.createContext(o,s):0;var n,r,a,s,o},exit:ye,fd_close:ze,fd_seek:Ue,fd_write:Ve,memory:R||c.wasmMemory,setTempRet0:function(e){}},Xe=(function(){var e={env:qe,wasi_snapshot_preview1:qe};function t(e,t){var n,r,i=e.exports;if(c.asm=i,n=c.asm.emscripten_tls_init,xe.tlsInitFunctions.push(n),Y=c.asm.__indirect_function_table,r=c.asm.__wasm_call_ctors,Q.unshift(r),L=t,!S){var a=xe.unusedWorkers.length;xe.unusedWorkers.forEach((function(e){xe.loadWasmModuleToWorker(e,(function(){--a||function(e){if(ae--,c.monitorRunDependencies&&c.monitorRunDependencies(ae),0==ae&&(null!==se&&(clearInterval(se),se=null),oe)){var t=oe;oe=null,t()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!I&&(b||w)){if("function"==typeof fetch&&!he(ie))return fetch(ie,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ie+"'";return e.arrayBuffer()})).catch((function(){return pe(ie)}));if(p)return new Promise((function(e,t){p(ie,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return pe(ie)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){A("failed to asynchronously prepare wasm: "+e),le(e)}))}if(S||(ae++,c.monitorRunDependencies&&c.monitorRunDependencies(ae)),c.instantiateWasm)try{return c.instantiateWasm(e,t)}catch(e){return A("Module.instantiateWasm callback failed with error: "+e),!1}(I||"function"!=typeof WebAssembly.instantiateStreaming||ue(ie)||he(ie)||"function"!=typeof fetch?r(n):fetch(ie,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return A("wasm streaming compile failed: "+e),A("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(l)}(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.__wasm_call_ctors).apply(null,arguments)},c._init=function(){return(c._init=c.asm.init).apply(null,arguments)},c._init_with_threads_count=function(){return(c._init_with_threads_count=c.asm.init_with_threads_count).apply(null,arguments)},c._get_threads_count=function(){return(c._get_threads_count=c.asm.get_threads_count).apply(null,arguments)},c._register_tensor=function(){return(c._register_tensor=c.asm.register_tensor).apply(null,arguments)},c._dispose_data=function(){return(c._dispose_data=c.asm.dispose_data).apply(null,arguments)},c._dispose=function(){return(c._dispose=c.asm.dispose).apply(null,arguments)},c._Abs=function(){return(c._Abs=c.asm.Abs).apply(null,arguments)},c._Add=function(){return(c._Add=c.asm.Add).apply(null,arguments)},c._AddN=function(){return(c._AddN=c.asm.AddN).apply(null,arguments)},c._All=function(){return(c._All=c.asm.All).apply(null,arguments)},c._Any=function(){return(c._Any=c.asm.Any).apply(null,arguments)},c._ArgMax=function(){return(c._ArgMax=c.asm.ArgMax).apply(null,arguments)},c._AvgPool=function(){return(c._AvgPool=c.asm.AvgPool).apply(null,arguments)},c._BatchMatMul=function(){return(c._BatchMatMul=c.asm.BatchMatMul).apply(null,arguments)},c._Ceil=function(){return(c._Ceil=c.asm.Ceil).apply(null,arguments)},c._ClipByValue=function(){return(c._ClipByValue=c.asm.ClipByValue).apply(null,arguments)},c._Conv2D=function(){return(c._Conv2D=c.asm.Conv2D).apply(null,arguments)},c._Conv2DBackpropInput=function(){return(c._Conv2DBackpropInput=c.asm.Conv2DBackpropInput).apply(null,arguments)},c._Cos=function(){return(c._Cos=c.asm.Cos).apply(null,arguments)},c._Cosh=function(){return(c._Cosh=c.asm.Cosh).apply(null,arguments)},c._CropAndResize=function(){return(c._CropAndResize=c.asm.CropAndResize).apply(null,arguments)},c._Cumprod=function(){return(c._Cumprod=c.asm.Cumprod).apply(null,arguments)},c._Cumsum=function(){return(c._Cumsum=c.asm.Cumsum).apply(null,arguments)},c._DepthToSpace=function(){return(c._DepthToSpace=c.asm.DepthToSpace).apply(null,arguments)},c._DepthwiseConv2dNative=function(){return(c._DepthwiseConv2dNative=c.asm.DepthwiseConv2dNative).apply(null,arguments)},c._Elu=function(){return(c._Elu=c.asm.Elu).apply(null,arguments)},c._Equal=function(){return(c._Equal=c.asm.Equal).apply(null,arguments)},c._Exp=function(){return(c._Exp=c.asm.Exp).apply(null,arguments)},c._FlipLeftRight=function(){return(c._FlipLeftRight=c.asm.FlipLeftRight).apply(null,arguments)},c._Floor=function(){return(c._Floor=c.asm.Floor).apply(null,arguments)},c._FloorDiv=function(){return(c._FloorDiv=c.asm.FloorDiv).apply(null,arguments)},c._FusedBatchNorm=function(){return(c._FusedBatchNorm=c.asm.FusedBatchNorm).apply(null,arguments)},c._FusedConv2D=function(){return(c._FusedConv2D=c.asm.FusedConv2D).apply(null,arguments)},c._FusedDepthwiseConv2D=function(){return(c._FusedDepthwiseConv2D=c.asm.FusedDepthwiseConv2D).apply(null,arguments)},c._Gather=function(){return(c._Gather=c.asm.Gather).apply(null,arguments)},c._GatherNd=function(){return(c._GatherNd=c.asm.GatherNd).apply(null,arguments)},c._Greater=function(){return(c._Greater=c.asm.Greater).apply(null,arguments)},c._GreaterEqual=function(){return(c._GreaterEqual=c.asm.GreaterEqual).apply(null,arguments)},c._LeakyRelu=function(){return(c._LeakyRelu=c.asm.LeakyRelu).apply(null,arguments)},c._Less=function(){return(c._Less=c.asm.Less).apply(null,arguments)},c._LessEqual=function(){return(c._LessEqual=c.asm.LessEqual).apply(null,arguments)},c._Log=function(){return(c._Log=c.asm.Log).apply(null,arguments)},c._LogicalAnd=function(){return(c._LogicalAnd=c.asm.LogicalAnd).apply(null,arguments)},c._LogicalNot=function(){return(c._LogicalNot=c.asm.LogicalNot).apply(null,arguments)},c._LogicalOr=function(){return(c._LogicalOr=c.asm.LogicalOr).apply(null,arguments)},c._LogicalXor=function(){return(c._LogicalXor=c.asm.LogicalXor).apply(null,arguments)},c._Max=function(){return(c._Max=c.asm.Max).apply(null,arguments)},c._MaxPool=function(){return(c._MaxPool=c.asm.MaxPool).apply(null,arguments)},c._Maximum=function(){return(c._Maximum=c.asm.Maximum).apply(null,arguments)},c._Mean=function(){return(c._Mean=c.asm.Mean).apply(null,arguments)},c._Min=function(){return(c._Min=c.asm.Min).apply(null,arguments)},c._Minimum=function(){return(c._Minimum=c.asm.Minimum).apply(null,arguments)},c._MirrorPad=function(){return(c._MirrorPad=c.asm.MirrorPad).apply(null,arguments)},c._Multiply=function(){return(c._Multiply=c.asm.Multiply).apply(null,arguments)},c._Neg=function(){return(c._Neg=c.asm.Neg).apply(null,arguments)},c._NonMaxSuppressionV3=function(){return(c._NonMaxSuppressionV3=c.asm.NonMaxSuppressionV3).apply(null,arguments)},c._NonMaxSuppressionV4=function(){return(c._NonMaxSuppressionV4=c.asm.NonMaxSuppressionV4).apply(null,arguments)},c._NonMaxSuppressionV5=function(){return(c._NonMaxSuppressionV5=c.asm.NonMaxSuppressionV5).apply(null,arguments)},c._NotEqual=function(){return(c._NotEqual=c.asm.NotEqual).apply(null,arguments)},c._OneHot=function(){return(c._OneHot=c.asm.OneHot).apply(null,arguments)},c._PadV2=function(){return(c._PadV2=c.asm.PadV2).apply(null,arguments)},c._Pow=function(){return(c._Pow=c.asm.Pow).apply(null,arguments)},c._Prelu=function(){return(c._Prelu=c.asm.Prelu).apply(null,arguments)},c._Prod=function(){return(c._Prod=c.asm.Prod).apply(null,arguments)},c._RealDiv=function(){return(c._RealDiv=c.asm.RealDiv).apply(null,arguments)},c._Relu=function(){return(c._Relu=c.asm.Relu).apply(null,arguments)},c._Relu6=function(){return(c._Relu6=c.asm.Relu6).apply(null,arguments)},c._ResizeBilinear=function(){return(c._ResizeBilinear=c.asm.ResizeBilinear).apply(null,arguments)},c._ResizeNearestNeighbor=function(){return(c._ResizeNearestNeighbor=c.asm.ResizeNearestNeighbor).apply(null,arguments)},c._Reverse=function(){return(c._Reverse=c.asm.Reverse).apply(null,arguments)},c._RotateWithOffset=function(){return(c._RotateWithOffset=c.asm.RotateWithOffset).apply(null,arguments)},c._Round=function(){return(c._Round=c.asm.Round).apply(null,arguments)},c._Rsqrt=function(){return(c._Rsqrt=c.asm.Rsqrt).apply(null,arguments)},c._ScatterNd=function(){return(c._ScatterNd=c.asm.ScatterNd).apply(null,arguments)},c._SelectV2=function(){return(c._SelectV2=c.asm.SelectV2).apply(null,arguments)},c._Sigmoid=function(){return(c._Sigmoid=c.asm.Sigmoid).apply(null,arguments)},c._Sin=function(){return(c._Sin=c.asm.Sin).apply(null,arguments)},c._Softmax=function(){return(c._Softmax=c.asm.Softmax).apply(null,arguments)},c._SparseFillEmptyRows=function(){return(c._SparseFillEmptyRows=c.asm.SparseFillEmptyRows).apply(null,arguments)},c._SparseReshape=function(){return(c._SparseReshape=c.asm.SparseReshape).apply(null,arguments)},c._SparseSegmentReduction=function(){return(c._SparseSegmentReduction=c.asm.SparseSegmentReduction).apply(null,arguments)},c._Sqrt=function(){return(c._Sqrt=c.asm.Sqrt).apply(null,arguments)},c._Square=function(){return(c._Square=c.asm.Square).apply(null,arguments)},c._SquaredDifference=function(){return(c._SquaredDifference=c.asm.SquaredDifference).apply(null,arguments)},c._Step=function(){return(c._Step=c.asm.Step).apply(null,arguments)},c._StridedSlice=function(){return(c._StridedSlice=c.asm.StridedSlice).apply(null,arguments)},c._Sub=function(){return(c._Sub=c.asm.Sub).apply(null,arguments)},c._Sum=function(){return(c._Sum=c.asm.Sum).apply(null,arguments)},c._Tan=function(){return(c._Tan=c.asm.Tan).apply(null,arguments)},c._Tanh=function(){return(c._Tanh=c.asm.Tanh).apply(null,arguments)},c._Tile=function(){return(c._Tile=c.asm.Tile).apply(null,arguments)},c._TopK=function(){return(c._TopK=c.asm.TopK).apply(null,arguments)},c._Transform=function(){return(c._Transform=c.asm.Transform).apply(null,arguments)},c._Transpose=function(){return(c._Transpose=c.asm.Transpose).apply(null,arguments)},c.__FusedMatMul=function(){return(c.__FusedMatMul=c.asm._FusedMatMul).apply(null,arguments)},c._malloc=function(){return(Xe=c._malloc=c.asm.malloc).apply(null,arguments)}),Ke=c._free=function(){return(Ke=c._free=c.asm.free).apply(null,arguments)},Ye=(c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.emscripten_tls_init).apply(null,arguments)},c.___errno_location=function(){return(Ye=c.___errno_location=c.asm.__errno_location).apply(null,arguments)}),Ze=c._pthread_self=function(){return(Ze=c._pthread_self=c.asm.pthread_self).apply(null,arguments)},Je=c._emscripten_main_thread_process_queued_calls=function(){return(Je=c._emscripten_main_thread_process_queued_calls=c.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},Qe=(c.__emscripten_thread_crashed=function(){return(c.__emscripten_thread_crashed=c.asm._emscripten_thread_crashed).apply(null,arguments)},c.__emscripten_thread_init=function(){return(Qe=c.__emscripten_thread_init=c.asm._emscripten_thread_init).apply(null,arguments)}),et=(c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},c._emscripten_main_browser_thread_id=function(){return(c._emscripten_main_browser_thread_id=c.asm.emscripten_main_browser_thread_id).apply(null,arguments)},c._emscripten_sync_run_in_main_thread_2=function(){return(c._emscripten_sync_run_in_main_thread_2=c.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},c._emscripten_sync_run_in_main_thread_4=function(){return(et=c._emscripten_sync_run_in_main_thread_4=c.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)}),tt=c._emscripten_run_in_main_runtime_thread_js=function(){return(tt=c._emscripten_run_in_main_runtime_thread_js=c.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},nt=c._emscripten_dispatch_to_thread_=function(){return(nt=c._emscripten_dispatch_to_thread_=c.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},rt=c.__emscripten_thread_free_data=function(){return(rt=c.__emscripten_thread_free_data=c.asm._emscripten_thread_free_data).apply(null,arguments)},it=(c.__emscripten_thread_exit=function(){return(c.__emscripten_thread_exit=c.asm._emscripten_thread_exit).apply(null,arguments)},c._memalign=function(){return(c._memalign=c.asm.memalign).apply(null,arguments)},c._emscripten_stack_set_limits=function(){return(it=c._emscripten_stack_set_limits=c.asm.emscripten_stack_set_limits).apply(null,arguments)}),at=c.stackSave=function(){return(at=c.stackSave=c.asm.stackSave).apply(null,arguments)},st=c.stackRestore=function(){return(st=c.stackRestore=c.asm.stackRestore).apply(null,arguments)},ot=c.stackAlloc=function(){return(ot=c.stackAlloc=c.asm.stackAlloc).apply(null,arguments)},lt=(c.dynCall_iijjiiii=function(){return(c.dynCall_iijjiiii=c.asm.dynCall_iijjiiii).apply(null,arguments)},c.dynCall_jiji=function(){return(c.dynCall_jiji=c.asm.dynCall_jiji).apply(null,arguments)},c.__emscripten_allow_main_runtime_queued_calls=21672);function ut(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ct(e){if(e=e||x,!(ae>0)){if(S)return o(c),re(),void postMessage({cmd:"loaded"});!function(){if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)e=c.preRun.shift(),J.unshift(e);var e;fe(J)}(),ae>0||(c.setStatus?(c.setStatus("Running..."),setTimeout((function(){setTimeout((function(){c.setStatus("")}),1),t()}),1)):t())}function t(){We||(We=!0,c.calledRun=!0,D||(re(),o(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),function(){if(!S){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;)e=c.postRun.shift(),te.unshift(e);var e;fe(te)}}()))}}if(c.cwrap=function(e,t,n,r){var i=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&i&&!r?F(e):function(){return $(e,t,n,arguments)}},c.keepRuntimeAlive=ne,c.PThread=xe,c.PThread=xe,c.wasmMemory=R,c.ExitStatus=ut,oe=function e(){We||ct(),We||(oe=e)},c.run=ct,c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);c.preInit.length>0;)c.preInit.pop()();if(ct(),u&&(He={uncaughtException:ce.listeners("uncaughtException").filter((function(e){return!u.uncaughtException.indexOf(e)>-1})),unhandledRejection:ce.listeners("unhandledRejection").filter((function(e){return!u.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Ge=WasmBackendModule;else{if(void 0===t)throw new Error("Could not find wasm module in post.js");Ge=t}if(He){var ht=Ge._dispose;Ge._dispose=function(){ht(),He.uncaughtException.forEach((function(e){ce.removeListener("uncaughtException",e)})),He.unhandledRejection.forEach((function(e){ce.removeListener("unhandledRejection",e)}))}}return t.ready});aM=oM;var lM,uM=(()=>{var e="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return e=e||"node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js",function(t){var n,r,i,s=void 0!==(t=t||{})?t:{};s.ready=new Promise((function(e,t){n=e,r=t})),void 0!==ce&&ce.listeners&&(i={uncaughtException:ce.listeners("uncaughtException"),unhandledRejection:ce.listeners("unhandledRejection")});var o,l,u,c,h,p,d=Object.assign({},s),f=[],m="object"==typeof window,g="function"==typeof importScripts,y="object"==typeof ce&&"object"==typeof ce.versions&&"string"==typeof ce.versions.node,x="";y?(x=g?a("kjyEk").dirname(x)+"/":"node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/",p=()=>{h||(c=a("kjyEk"),h=a("kjyEk"))},o=function(e,t){return p(),e=h.normalize(e),c.readFileSync(e,t?void 0:"utf8")},u=e=>{var t=o(e,!0);return t.buffer||(t=new Uint8Array(t)),t},l=(e,t,n)=>{p(),e=h.normalize(e),c.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},ce.argv.length>1&&ce.argv[1].replace(/\\/g,"/"),f=ce.argv.slice(2),ce.on("uncaughtException",(function(e){if(!(e instanceof le))throw e})),ce.on("unhandledRejection",(function(e){throw e})),(e,t)=>{if(B())throw ce.exitCode=e,t;!function(e){if(e instanceof le)return;b("exiting due to exception: "+e)}(t),ce.exit(e)},s.inspect=function(){return"[Emscripten Module object]"}):(m||g)&&(g?x=self.location.href:"undefined"!=typeof document&&document.currentScript&&(x=document.currentScript.src),e&&(x=e),x=0!==x.indexOf("blob:")?x.substr(0,x.replace(/[?#].*/,"").lastIndexOf("/")+1):"",o=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},g&&(u=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),l=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var v=s.print||console.log.bind(console),b=s.printErr||console.warn.bind(console);Object.assign(s,d),d=null,s.arguments&&(f=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit;var w;s.wasmBinary&&(w=s.wasmBinary);var _,S=s.noExitRuntime||!0;"object"!=typeof WebAssembly&&W("no native wasm support detected");var T=!1;function E(e){return s["_"+e]}function M(e,t,n,r,i){var a={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);(function(e,t,n){(function(e,t,n,r){if(!(r>0))return 0;for(var i=n,a=n+r-1,s=0;s<e.length;++s){var o=e.charCodeAt(s);if(o>=55296&&o<=57343)o=65536+((1023&o)<<10)|1023&e.charCodeAt(++s);if(o<=127){if(n>=a)break;t[n++]=o}else if(o<=2047){if(n+1>=a)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=a)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=a)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}t[n]=0})(e,R,t,n)})(e,t=oe(n),n)}return t},array:function(e){var t=oe(e.length);return function(e,t){N.set(e,t)}(e,t),t}};var s=E(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var c=a[n[u]];c?(0===l&&(l=ae()),o[u]=c(r[u])):o[u]=r[u]}var h=s.apply(null,o);return h=function(e){return 0!==l&&se(l),function(e){return"string"===t?k(e):"boolean"===t?Boolean(e):e}(e)}(h)}var C="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function I(e,t,n){for(var r=t+n,i=t;e[i]&&!(i>=r);)++i;if(i-t>16&&e.subarray&&C)return C.decode(e.subarray(t,i));for(var a="";t<i;){var s=e[t++];if(128&s){var o=63&e[t++];if(192!=(224&s)){var l=63&e[t++];if((s=224==(240&s)?(15&s)<<12|o<<6|l:(7&s)<<18|o<<12|l<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|o)}else a+=String.fromCharCode(s)}return a}function k(e,t){return e?I(R,e,t):""}var A,N,R,L;"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le");function O(e){A=e,s.HEAP8=N=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=L=new Int32Array(e),s.HEAPU8=R=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var P,D=[],F=[],$=[];function B(){return S||!1}var z=0,U=null,V=null;function W(e){s.onAbort&&s.onAbort(e),b(e="Aborted("+e+")"),T=!0,1,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw r(t),t}s.preloadedImages={},s.preloadedAudios={};var H,G;function j(e){return e.startsWith("data:application/octet-stream;base64,")}function q(e){return e.startsWith("file://")}function X(e){try{if(e==H&&w)return new Uint8Array(w);if(u)return u(e);throw"both async and sync fetching of the wasm failed"}catch(e){W(e)}}function K(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?Z(n)():Z(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}j(H="tfjs-backend-wasm.wasm")||(G=H,H=s.locateFile?s.locateFile(G,x):x+G);var Y=[];function Z(e){var t=Y[e];return t||(e>=Y.length&&(Y.length=e+1),Y[e]=t=P.get(e)),t}function J(){return 2147483648}function Q(e){try{return _.grow(e-A.byteLength+65535>>>16),O(_.buffer),1}catch(e){}}var ee={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=ee.buffers[e];0===t||10===t?((1===e?v:b)(I(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return ee.varargs+=4,L[ee.varargs-4>>2]},getStr:function(e){return k(e)},get64:function(e,t){return e}};var te,ne,re,ie={abort:function(){W("")},emscripten_get_heap_max:J,emscripten_memcpy_big:function(e,t,n){R.copyWithin(e,t,t+n)},emscripten_resize_heap:function(e){var t,n,r=R.length,i=2147483648;if((e>>>=0)>i)return!1;for(var a=1;a<=4;a*=2){var s=r*(1+.2/a);if(s=Math.min(s,e+100663296),Q(Math.min(i,((t=Math.max(e,s))%(n=65536)>0&&(t+=n-t%n),t))))return!0}return!1},fd_close:function(e){return 0},fd_seek:function(e,t,n,r,i){},fd_write:function(e,t,n,r){for(var i=0,a=0;a<n;a++){var s=L[t>>2],o=L[t+4>>2];t+=8;for(var l=0;l<o;l++)ee.printChar(e,R[s+l]);i+=o}return L[r>>2]=i,0},setTempRet0:function(e){e}},ae=(function(){var e={env:ie,wasi_snapshot_preview1:ie};function t(e,t){var n,r=e.exports;s.asm=r,O((_=s.asm.memory).buffer),P=s.asm.__indirect_function_table,n=s.asm.__wasm_call_ctors,F.unshift(n),function(e){if(z--,s.monitorRunDependencies&&s.monitorRunDependencies(z),0==z&&(null!==U&&(clearInterval(U),U=null),V)){var t=V;V=null,t()}}()}function n(e){t(e.instance)}function i(t){return function(){if(!w&&(m||g)){if("function"==typeof fetch&&!q(H))return fetch(H,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+H+"'";return e.arrayBuffer()})).catch((function(){return X(H)}));if(l)return new Promise((function(e,t){l(H,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return X(H)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){b("failed to asynchronously prepare wasm: "+e),W(e)}))}if(z++,s.monitorRunDependencies&&s.monitorRunDependencies(z),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return b("Module.instantiateWasm callback failed with error: "+e),!1}(w||"function"!=typeof WebAssembly.instantiateStreaming||j(H)||q(H)||"function"!=typeof fetch?i(n):fetch(H,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return b("wasm streaming compile failed: "+e),b("falling back to ArrayBuffer instantiation"),i(n)}))}))).catch(r)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._LogicalNot=function(){return(s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},s._LogicalOr=function(){return(s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},s._LogicalXor=function(){return(s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._ResizeNearestNeighbor=function(){return(s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)},s._emscripten_main_thread_process_queued_calls=function(){return(s._emscripten_main_thread_process_queued_calls=s.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},s.stackSave=function(){return(ae=s.stackSave=s.asm.stackSave).apply(null,arguments)}),se=s.stackRestore=function(){return(se=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},oe=s.stackAlloc=function(){return(oe=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)};function le(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ue(e){function t(){te||(te=!0,s.calledRun=!0,T||(!0,K(F),n(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)e=s.postRun.shift(),$.unshift(e);var e;K($)}()))}e=e||f,z>0||(!function(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)e=s.preRun.shift(),D.unshift(e);var e;K(D)}(),z>0||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),t()}),1)):t()))}if(s.cwrap=function(e,t,n,r){var i=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&i&&!r?E(e):function(){return M(e,t,n,arguments)}},V=function e(){te||ue(),te||(V=e)},s.run=ue,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(ue(),i&&(ne={uncaughtException:ce.listeners("uncaughtException").filter((function(e){return!i.uncaughtException.indexOf(e)>-1})),unhandledRejection:ce.listeners("unhandledRejection").filter((function(e){return!i.unhandledRejection.indexOf(e)>-1}))}),void 0!==t)re=t;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");re=WasmBackendModuleThreadedSimd}if(ne){var he=re._dispose;re._dispose=function(){he(),ne.uncaughtException.forEach((function(e){ce.removeListener("uncaughtException",e)})),ne.unhandledRejection.forEach((function(e){ce.removeListener("unhandledRejection",e)}))}}return t.ready}})();const cM=aM.default||aM,hM=(lM=uM).default||lM;class pM extends o{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(wM),_M=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new s(this,wu())}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=De.now();e();return{kernelMs:De.now()-t}}move(e,t,n,r,i){const a=this.dataIdNextNumber++;if("string"===r){const s=t;return void this.dataIdMap.set(e,{id:a,stringBytes:s,shape:n,dtype:r,memoryOffset:null,refCount:i})}const s=De.sizeFromShape(n),o=s*De.bytesPerElement(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:r,refCount:i}),this.wasm.tfjs.registerTensor(a,s,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){const{memoryOffset:r,dtype:i,shape:a,stringBytes:s}=this.dataIdMap.get(e);if("string"===i)return null!=t&&0!==t||!(null==n||n>=s.length)?s.slice(t,n):s;t=t||0,n=n||De.sizeFromShape(a);const o=De.bytesPerElement(i);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,i)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){if(this.dataIdMap.has(e)){return this.dataIdMap.get(e).refCount}return 0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const i=this.dataIdNextNumber++;r={id:i},this.dataIdMap.set(r,{id:i,memoryOffset:n,shape:e,dtype:t,refCount:1});const a=De.sizeFromShape(e);this.wasm.tfjs.registerTensor(i,a,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:i}=this.dataIdMap.get(n),a=De.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,i,a);case"int32":return new Int32Array(r,i,a);case"bool":return new Uint8Array(r,i,a);default:throw new Error(`Unknown dtype ${t}`)}}}function dM(e,t,n){if(null!=gM)return gM;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=xM&&null!=xM[r]?xM[r]:n+r}async function fM(){const[e,t]=await Promise.all([se().getAsync("WASM_HAS_SIMD_SUPPORT"),se().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const i={};var a;i.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});'.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?dM(e,t,null!=yM?yM:r):r+n},bM&&(i.instantiateWasm=(a=dM(e,t,null!=yM?yM:""),(e,t)=>(De.fetch(a,{credentials:"same-origin"}).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${a}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let s,o=!1;i.onAbort=()=>{if(o)return;if(vM)return;vM=!0;r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})},t&&e&&null==gM?(i.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+cM.toString()],{type:"text/javascript"}),s=cM(i)):s=hM(i),s.then((e=>{o=!0,vM=!1;e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})})).catch(r)}))}const mM=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let gM=null,yM=null,xM={},vM=!1,bM=!1;let wM=-1,_M=-1;Mu("wasm",(async()=>{const{wasm:e}=await fM();return new pM(e)}),2);var SM,TM,EM;se().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),(TM=SM||(SM={}))[TM.DT_INVALID=0]="DT_INVALID",TM[TM.DT_FLOAT=1]="DT_FLOAT",TM[TM.DT_DOUBLE=2]="DT_DOUBLE",TM[TM.DT_INT32=3]="DT_INT32",TM[TM.DT_UINT8=4]="DT_UINT8",TM[TM.DT_INT16=5]="DT_INT16",TM[TM.DT_INT8=6]="DT_INT8",TM[TM.DT_STRING=7]="DT_STRING",TM[TM.DT_COMPLEX64=8]="DT_COMPLEX64",TM[TM.DT_INT64=9]="DT_INT64",TM[TM.DT_BOOL=10]="DT_BOOL",TM[TM.DT_QINT8=11]="DT_QINT8",TM[TM.DT_QUINT8=12]="DT_QUINT8",TM[TM.DT_QINT32=13]="DT_QINT32",TM[TM.DT_BFLOAT16=14]="DT_BFLOAT16",TM[TM.DT_QINT16=15]="DT_QINT16",TM[TM.DT_QUINT16=16]="DT_QUINT16",TM[TM.DT_UINT16=17]="DT_UINT16",TM[TM.DT_COMPLEX128=18]="DT_COMPLEX128",TM[TM.DT_HALF=19]="DT_HALF",TM[TM.DT_RESOURCE=20]="DT_RESOURCE",TM[TM.DT_VARIANT=21]="DT_VARIANT",TM[TM.DT_UINT32=22]="DT_UINT32",TM[TM.DT_UINT64=23]="DT_UINT64",TM[TM.DT_FLOAT_REF=101]="DT_FLOAT_REF",TM[TM.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",TM[TM.DT_INT32_REF=103]="DT_INT32_REF",TM[TM.DT_UINT8_REF=104]="DT_UINT8_REF",TM[TM.DT_INT16_REF=105]="DT_INT16_REF",TM[TM.DT_INT8_REF=106]="DT_INT8_REF",TM[TM.DT_STRING_REF=107]="DT_STRING_REF",TM[TM.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",TM[TM.DT_INT64_REF=109]="DT_INT64_REF",TM[TM.DT_BOOL_REF=110]="DT_BOOL_REF",TM[TM.DT_QINT8_REF=111]="DT_QINT8_REF",TM[TM.DT_QUINT8_REF=112]="DT_QUINT8_REF",TM[TM.DT_QINT32_REF=113]="DT_QINT32_REF",TM[TM.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",TM[TM.DT_QINT16_REF=115]="DT_QINT16_REF",TM[TM.DT_QUINT16_REF=116]="DT_QUINT16_REF",TM[TM.DT_UINT16_REF=117]="DT_UINT16_REF",TM[TM.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",TM[TM.DT_HALF_REF=119]="DT_HALF_REF",TM[TM.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",TM[TM.DT_VARIANT_REF=121]="DT_VARIANT_REF",TM[TM.DT_UINT32_REF=122]="DT_UINT32_REF",TM[TM.DT_UINT64_REF=123]="DT_UINT64_REF",function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(EM||(EM={}));
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const MM={};function CM(e){return MM[e]}function IM(e,t,n,r,i){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,s=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return kM(t.inputNames[a.inputIndexStart],n,r,i);if("tensors"===a.type){return t.inputNames.slice(e,s).map((e=>kM(e,n,r,i)))}const o=kM(t.inputNames.slice(e)[0],n,r,i),l=o.dataSync();return"number"===a.type?l[0]:De.toNestedArray(o.shape,l)}const s=t.attrParams[e];return s&&s.value}function kM(e,t,n,r){const[i,a]=LM(e);if(null!=r){const e=r.getHashTableHandleByName(i);if(null!=e)return e}const s=n.currentContextIds.find((e=>!!t[RM(i,e)]));return void 0!==s?t[RM(i,s)][a]:void 0}function AM(e,t,n){return t[RM(e,n.currentContextId)]}function NM(e,t){const[n,r,i]=LM(e);return[RM(n,t&&t.currentContextId),r,i]}function RM(e,t){return t?`${e}-${t}`:e}function LM(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function OM(e,t,n){let r=IM("pad",e,t,n);if("explicit"===r){r=IM("explicitPaddings",e,t,n);const i=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)i[e][0]=r[2*e],i[e][1]=r[2*e+1];return i}return r}function PM(e){return e.kept?e:ki(e)}var DM={};t(DM,"json",(()=>FM));const FM=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var $M={};t($M,"json",(()=>BM));const BM=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var zM={};t(zM,"json",(()=>UM));const UM=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var VM={};t(VM,"json",(()=>WM));const WM=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var HM={};t(HM,"json",(()=>GM));const GM=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var jM={};t(jM,"json",(()=>qM));const qM=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var XM={};t(XM,"json",(()=>KM));const KM=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var YM={};t(YM,"json",(()=>ZM));const ZM=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var JM={};t(JM,"json",(()=>QM));const QM=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var eC={};t(eC,"json",(()=>tC));const tC=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var nC={};t(nC,"json",(()=>rC));const rC=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var iC={};t(iC,"json",(()=>aC));const aC=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var sC={};t(sC,"json",(()=>oC));const oC=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var lC={};t(lC,"json",(()=>uC));const uC=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var cC={};t(cC,"json",(()=>hC));const hC=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var pC={};t(pC,"json",(()=>dC));const dC=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var fC={};t(fC,"json",(()=>mC));const mC=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var gC={};t(gC,"json",(()=>yC));const yC=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var xC={};t(xC,"json",(()=>vC));const vC=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var bC=kn;class wC{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[DM,$M,zM,VM,HM,jM,XM,YM,JM,eC,nC,iC,sC,lC,cC,pC,fC,gC,xC].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],i=[],a=[],s=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?i.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(s);h.forEach((e=>{const t=s[e];t.inputNames.forEach(((e,n)=>{const[r,,i]=NM(e),a=s[r];if(null!=a.outputs){const e=a.outputs.indexOf(i);if(-1!==e){const i=`${r}:${e}`;t.inputNames[n]=i}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=s[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=NM(e),n=s[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=NM(e),n=s[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:s,inputs:o,outputs:l,weights:i,placeholders:r,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=CM(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let i;switch(n.type){case"string":i=SC(e.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=SC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":i=LC(e.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=LC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":i=EC(e.attr,n.tfName,n.defaultValue||0),void 0===i&&n.tfDeprecatedName&&(i=EC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":i=RC(e.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=RC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":i=TC(e.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=TC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":i=PC(e.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=PC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":i=NC(e.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=NC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":i=OC(e.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=OC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":i=IC(e.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=IC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":i=kC(e.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=kC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":i=CC(e.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=CC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:i,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const i=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=NM(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:MC(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,i.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[i,,a]=NM(e),s=r[i];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const r=`${i}:${e}`;t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))}));const s=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=NM(s[e.name]),i=r[t];null!=i&&(i.defaultOutput=n,a.push(i))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:i,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function _C(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=se().global;if(void 0!==t.atob)return t.atob(e);if(void 0!==bC)return new bC(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function SC(e,t,n,r=!1){const i=e[t];return null!=i?_C(i.s,r):n}function TC(e,t,n){const r=e[t];return r?r.b:n}function EC(e,t,n){const r=e[t]||{},i=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof i?i:parseInt(i,10)}function MC(e){switch("string"==typeof e&&(e=SM[e]),e){case SM.DT_FLOAT:case SM.DT_HALF:return"float32";case SM.DT_INT32:case SM.DT_INT64:case SM.DT_INT8:case SM.DT_UINT8:return"int32";case SM.DT_BOOL:return"bool";case SM.DT_DOUBLE:return"float32";case SM.DT_STRING:return"string";default:return null}}function CC(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function IC(e,t,n){const r=e[t];return r&&r.type?MC(r.type):n}function kC(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>MC(e))):n}function AC(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function NC(e,t,n){const r=e[t];return r&&r.shape?AC(r.shape):n}function RC(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function LC(e,t,n,r=!1){const i=e[t];return i&&i.list&&i.list.s?i.list.s.map((e=>_C(e,r))):n}function OC(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>AC(e))):n}function PC(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class DC{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return kM(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return kM(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return EC(this.node.rawAttrs,e,t);if(null!=n.s)return SC(this.node.rawAttrs,e,t);if(null!=n.b)return TC(this.node.rawAttrs,e,t);if(null!=n.shape)return NC(this.node.rawAttrs,e,t);if(null!=n.type)return IC(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return RC(this.node.rawAttrs,e,t);if(null!=n.list.s)return LC(this.node.rawAttrs,e,t);if(null!=n.list.shape)return OC(this.node.rawAttrs,e,t);if(null!=n.list.b)return PC(this.node.rawAttrs,e,t);if(null!=n.list.type)return kC(this.node.rawAttrs,e,t)}return t}}var FC={};n(FC,Ko);function $C(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){De.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const i=e[r],a=t[r];De.assert(i<0||a<0||i===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function BC(e){return"number"!=typeof e&&!e.some((e=>e<0))}function zC(e,t,n){let r=UC(e,n);const i=!BC(r);if(i&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(i&&t.forEach((e=>{r=UC(e.shape,r)})),!BC(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function UC(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const i=e[r],a=t[r];if(i>=0&&a>=0&&i!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=i>=0?i:a}return n}class VC{constructor(e,t,n,r,i,a,s){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=i,this.dynamicSize=a,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.idTensor=ol(0),Tu(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),$C(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Tu(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Cn([],[0].concat(this.elementShape));const n=this.readMany(e);return $C(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),su(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Cn([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return $C(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Yo(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,ou(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const i=0===n?0:t.size/n,a=[];_u((()=>{t=_s(t,[1,n,i]);for(let n=0;n<e.length;++n){const s=[0,0===n?0:r[n-1],0],o=[1,e[n],i];a[n]=_s(Qo(t,s,o),this.elementShape)}return a}));const s=[];for(let t=0;t<e.length;t++)s[t]=t;this.writeMany(s,a)}}class WC{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);$C(t,e.shape,"TensorList shape mismatch: "),Tu(e)})),this.idTensor=ol(0),this.maxNumElements=r,Tu(this.idTensor)}get id(){return this.idTensor.id}copy(){return new WC([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);$C(e,this.elementShape,"TensorList shape mismatch: ");const r=zC(this.elementShape,this.tensors,e);return _u((()=>{const e=this.tensors.map((e=>_s(e,r)));return su(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=zC(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,$C(r.shape,e,"TensorList shape mismatch: "),_s(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if($C(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Tu(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new WC([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);$C(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=zC(this.elementShape,this.tensors,t);return _s(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);$C(this.elementShape,t.shape,"TensorList shape mismatch: "),Tu(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);$C(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=zC(this.elementShape,this.tensors,n);return 0===e.length?Cn([],[0].concat(r)):_u((()=>{const t=e.map((e=>_s(this.tensors[e],r)));return su(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);$C(this.elementShape,t,"TensorList shape mismatch: ");const n=zC(this.elementShape,this.tensors,t);return 0===this.size()?Cn([],[0].concat(n)):_u((()=>{const e=this.tensors.map((e=>_s(e,n)));return Yo(e,0)}))}}function HC(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);$C(e.shape.slice(1),t,"TensorList shape mismatch: ");const i=ou(e);return new WC(i,t,r)}function GC(e,t,n,r){return new WC([],e,t,r)}function jC(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const i=Math.max(...t);if(null!=r&&-1!==r&&i>=r)throw new Error(`Max index must be < array size (${i}  vs. ${r})`);const a=new WC([],n,e.dtype,r),s=ou(e,0);return t.forEach(((e,t)=>{a.setItem(e,s[t])})),a}function qC(e,t,n){let r=0;const i=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=UC(e.shape.slice(1),n),s=0===r?0:e.size/r,o=_u((()=>{const n=[];e=_s(e,[1,r,s]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:i[r-1],0],l=[1,t[r],s];n[r]=_s(Qo(e,o,l),a)}return e.dispose(),n})),l=new WC([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}const XC=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=IM("thenBranch",e,t,n),i=IM("elseBranch",e,t,n),a=IM("cond",e,t,n),s=IM("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap):n.functionMap[i].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=IM("body",e,t,n),i=IM("cond",e,t,n),a=IM("args",e,t,n),s=await n.functionMap[i].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let l=await s[0].data();s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=a;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[i].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[PM(IM("pred",e,t,n))];case"Switch":{const r=IM("pred",e,t,n);let i=IM("data",e,t,n);return i.kept||(i=PM(i)),(await r.data())[0]?[void 0,i]:[i,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==kM(e,t,n)));if(r){return[PM(kM(r,t,n))]}return}case"Enter":{const r=IM("frameName",e,t,n),i=IM("tensor",e,t,n);return n.enterFrame(r),[PM(i)]}case"Exit":{const r=IM("tensor",e,t,n);return n.exitFrame(),[PM(r)]}case"NextIteration":{const r=IM("tensor",e,t,n);return n.nextIteration(),[PM(r)]}case"TensorArrayV3":{const r=IM("size",e,t,n),i=IM("dtype",e,t,n),a=IM("elementShape",e,t,n),s=IM("dynamicSize",e,t,n),o=IM("clearAfterRead",e,t,n),l=IM("identicalElementShapes",e,t,n),u=IM("name",e,t,n),c=new VC(u,i,r,a,l,s,o);return n.addTensorArray(c),[c.idTensor,ol(1)]}case"TensorArrayWriteV3":{const r=IM("tensorArrayId",e,t,n),i=IM("index",e,t,n),a=IM("tensor",e,t,n),s=n.getTensorArray(r.id);return s.write(i,a),[s.idTensor]}case"TensorArrayReadV3":{const r=IM("tensorArrayId",e,t,n),i=IM("index",e,t,n);return[n.getTensorArray(r.id).read(i)]}case"TensorArrayGatherV3":{const r=IM("tensorArrayId",e,t,n),i=IM("indices",e,t,n),a=IM("dtype",e,t,n);return[n.getTensorArray(r.id).gather(i,a)]}case"TensorArrayScatterV3":{const r=IM("tensorArrayId",e,t,n),i=IM("indices",e,t,n),a=IM("tensor",e,t,n),s=n.getTensorArray(r.id);return s.scatter(i,a),[s.idTensor]}case"TensorArrayConcatV3":{const r=IM("tensorArrayId",e,t,n),i=n.getTensorArray(r.id),a=IM("dtype",e,t,n);return[i.concat(a)]}case"TensorArraySplitV3":{const r=IM("tensorArrayId",e,t,n),i=IM("tensor",e,t,n),a=IM("lengths",e,t,n),s=n.getTensorArray(r.id);return s.split(a,i),[s.idTensor]}case"TensorArraySizeV3":{const r=IM("tensorArrayId",e,t,n);return[ol(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=IM("tensorArrayId",e,t,n),i=n.getTensorArray(r.id);return i.clearAndClose(),[i.idTensor]}case"TensorListSetItem":{const r=IM("tensorListId",e,t,n),i=IM("index",e,t,n),a=IM("tensor",e,t,n),s=n.getTensorList(r.id);return s.setItem(i,a),[s.idTensor]}case"TensorListGetItem":{const r=IM("tensorListId",e,t,n),i=IM("index",e,t,n),a=IM("elementShape",e,t,n),s=IM("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(i,a,s)]}case"TensorListScatterV2":case"TensorListScatter":{const r=IM("indices",e,t,n),i=jC(IM("tensor",e,t,n),r,IM("elementShape",e,t,n),IM("numElements",e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=IM("elementShape",e,t,n),i=IM("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const s=IM(a,e,t,n),o=GC(r,i,0,"TensorListReserve"===e.op?-1:s);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=IM("tensorListId",e,t,n),i=IM("indices",e,t,n),a=IM("elementShape",e,t,n),s=IM("elementDType",e,t,n);return[n.getTensorList(r.id).gather(i,s,a)]}case"TensorListStack":{const r=IM("tensorListId",e,t,n),i=IM("elementShape",e,t,n),a=IM("elementDType",e,t,n),s=IM("numElements",e,t,n);return[n.getTensorList(r.id).stack(i,a,s)]}case"TensorListFromTensor":{const r=HC(IM("tensor",e,t,n),IM("elementShape",e,t,n),IM("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=IM("tensorListId",e,t,n),i=n.getTensorList(r.id),a=IM("dtype",e,t,n),s=IM("elementShape",e,t,n);return[i.concat(a,s)]}case"TensorListPushBack":{const r=IM("tensorListId",e,t,n),i=IM("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(i),[a.idTensor]}case"TensorListPopBack":{const r=IM("tensorListId",e,t,n),i=IM("elementShape",e,t,n),a=IM("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(i,a)]}case"TensorListSplit":{const r=IM("tensor",e,t,n),i=IM("elementShape",e,t,n),a=qC(r,IM("lengths",e,t,n),i);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=IM("tensorListId",e,t,n);return[ol(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=IM("tensorListId",e,t,n),i=IM("size",e,t,n),a=n.getTensorList(r.id).resize(i);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function KC(e,t,n){const[r,i]=IM("fusedOps",e,t,n),a="biasadd"===r,s=!a,o="prelu"===i,l="fusedbatchnorm"===r,u=IM("numArgs",e,t,n);if(a){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=IM("strides",e,t,n),h=OM(e,t,n),p=IM("dataFormat",e,t,n).toUpperCase(),d=IM("dilations",e,t,n);let[f,m]=IM("args",e,t,n);s&&(m=f,f=void 0);return{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:i,leakyreluAlpha:IM("leakyreluAlpha",e,t,n)}}function YC(e,t,n){return{boxes:IM("boxes",e,t,n),scores:IM("scores",e,t,n),maxOutputSize:IM("maxOutputSize",e,t,n),iouThreshold:IM("iouThreshold",e,t,n),scoreThreshold:IM("scoreThreshold",e,t,n),softNmsSigma:IM("softNmsSigma",e,t,n)}}class ZC{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ol(0),this.tensorMap=new Map,Tu(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ol(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),_u((()=>{const e=ou(t),r=n.length,i=e.length;De.assert(r===i,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${i} elements.`));for(let t=0;t<r;t++){const r=n[t],i=e[t];Tu(i),this.tensorMap.set(r,i)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return _u((()=>{const e=[];for(let r=0;r<n.length;r++){const i=n[r],a=this.findWithDefault(i,t);e.push(a)}return su(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function JC(e,t,n,r,i=_u){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(IM("a",e,t,n),IM("b",e,t,n))];case"AddN":return[r.addN(IM("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(IM("a",e,t,n),IM("b",e,t,n))];case"Mul":return[r.mul(IM("a",e,t,n),IM("b",e,t,n))];case"RealDiv":case"Div":return[r.div(IM("a",e,t,n),IM("b",e,t,n))];case"DivNoNan":return[r.divNoNan(IM("a",e,t,n),IM("b",e,t,n))];case"FloorDiv":return[r.floorDiv(IM("a",e,t,n),IM("b",e,t,n))];case"Sub":return[r.sub(IM("a",e,t,n),IM("b",e,t,n))];case"Minimum":return[r.minimum(IM("a",e,t,n),IM("b",e,t,n))];case"Maximum":return[r.maximum(IM("a",e,t,n),IM("b",e,t,n))];case"Pow":return[r.pow(IM("a",e,t,n),IM("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(IM("a",e,t,n),IM("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(IM("x",e,t,n))];case"Acos":return[r.acos(IM("x",e,t,n))];case"Acosh":return[r.acosh(IM("x",e,t,n))];case"Asin":return[r.asin(IM("x",e,t,n))];case"Asinh":return[r.asinh(IM("x",e,t,n))];case"Atan":return[r.atan(IM("x",e,t,n))];case"Atan2":return[r.atan2(IM("x",e,t,n),IM("y",e,t,n))];case"Atanh":return[r.atanh(IM("x",e,t,n))];case"Ceil":return[r.ceil(IM("x",e,t,n))];case"Complex":return[r.complex(IM("real",e,t,n),IM("imag",e,t,n))];case"Cos":return[r.cos(IM("x",e,t,n))];case"Cosh":return[r.cosh(IM("x",e,t,n))];case"Elu":return[r.elu(IM("x",e,t,n))];case"Erf":return[r.erf(IM("x",e,t,n))];case"Exp":return[r.exp(IM("x",e,t,n))];case"Expm1":return[r.expm1(IM("x",e,t,n))];case"Floor":return[r.floor(IM("x",e,t,n))];case"Log":return[r.log(IM("x",e,t,n))];case"Log1p":return[r.log1p(IM("x",e,t,n))];case"Imag":return[r.imag(IM("x",e,t,n))];case"Neg":return[r.neg(IM("x",e,t,n))];case"Reciprocal":return[r.reciprocal(IM("x",e,t,n))];case"Real":return[r.real(IM("x",e,t,n))];case"Relu":return[r.relu(IM("x",e,t,n))];case"Round":return[r.round(IM("x",e,t,n))];case"Selu":return[r.selu(IM("x",e,t,n))];case"Sigmoid":return[r.sigmoid(IM("x",e,t,n))];case"Sin":return[r.sin(IM("x",e,t,n))];case"Sign":return[r.sign(IM("x",e,t,n))];case"Sinh":return[r.sinh(IM("x",e,t,n))];case"Softplus":return[r.softplus(IM("x",e,t,n))];case"Sqrt":return[r.sqrt(IM("x",e,t,n))];case"Square":return[r.square(IM("x",e,t,n))];case"Tanh":return[r.tanh(IM("x",e,t,n))];case"Tan":return[r.tan(IM("x",e,t,n))];case"ClipByValue":return[r.clipByValue(IM("x",e,t,n),IM("clipValueMin",e,t,n),IM("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(IM("x",e,t,n))];case"Rsqrt":return[r.rsqrt(kM(e.inputNames[0],t,n))];case"Prod":return[r.prod(IM("x",e,t,n),IM("axes",e,t,n))];case"LeakyRelu":return[r.leakyRelu(IM("x",e,t,n),IM("alpha",e,t,n))];case"Prelu":return[r.prelu(IM("x",e,t,n),IM("alpha",e,t,n))];case"IsNan":return[r.isNaN(kM(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return XC(e,t,n);case"convolution":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"Conv1D":{const i=IM("stride",e,t,n),a=IM("pad",e,t,n),s=IM("dataFormat",e,t,n).toUpperCase(),o=IM("dilation",e,t,n);return[r.conv1d(IM("x",e,t,n),IM("filter",e,t,n),i,a,s,o)]}case"Conv2D":{const i=IM("strides",e,t,n),a=OM(e,t,n),s=IM("dataFormat",e,t,n).toUpperCase(),o=IM("dilations",e,t,n);return[r.conv2d(IM("x",e,t,n),IM("filter",e,t,n),[i[1],i[2]],a,s,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:i,pad:a,dataFormat:s,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=KC(e,t,n);return[r.fused.conv2d({x:IM("x",e,t,n),filter:IM("filter",e,t,n),strides:[i[1],i[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:i,pad:a,dataFormat:s,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=KC(e,t,n);return[r.fused.depthwiseConv2d({x:IM("x",e,t,n),filter:IM("filter",e,t,n),strides:[i[1],i[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const i=IM("outputShape",e,t,n),a=IM("strides",e,t,n),s=OM(e,t,n);return[r.conv2dTranspose(IM("x",e,t,n),IM("filter",e,t,n),i,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const i=IM("strides",e,t,n),a=OM(e,t,n),s=IM("dilations",e,t,n),o=IM("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(IM("input",e,t,n),IM("filter",e,t,n),[i[1],i[2]],a,o,[s[1],s[2]])]}case"Conv3D":{const i=IM("strides",e,t,n),a=IM("pad",e,t,n),s=IM("dataFormat",e,t,n).toUpperCase(),o=IM("dilations",e,t,n);return[r.conv3d(IM("x",e,t,n),IM("filter",e,t,n),[i[1],i[2],i[3]],a,s,[o[1],o[2],o[3]])]}case"AvgPool":{const i=IM("strides",e,t,n),a=IM("pad",e,t,n),s=IM("kernelSize",e,t,n);return[r.avgPool(IM("x",e,t,n),[s[1],s[2]],[i[1],i[2]],a)]}case"MaxPool":{const i=IM("strides",e,t,n),a=IM("pad",e,t,n),s=IM("kernelSize",e,t,n);return[r.maxPool(IM("x",e,t,n),[s[1],s[2]],[i[1],i[2]],a)]}case"MaxPoolWithArgmax":{const i=IM("strides",e,t,n),a=IM("pad",e,t,n),s=IM("kernelSize",e,t,n),o=IM("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(IM("x",e,t,n),[s[1],s[2]],[i[1],i[2]],a,o);return[l,u]}case"AvgPool3D":{const i=IM("strides",e,t,n),a=IM("pad",e,t,n),s=IM("kernelSize",e,t,n);return[r.avgPool3d(IM("x",e,t,n),[s[1],s[2],s[3]],[i[1],i[2],i[3]],a)]}case"MaxPool3D":{const i=IM("strides",e,t,n),a=IM("pad",e,t,n),s=IM("kernelSize",e,t,n);return[r.maxPool3d(IM("x",e,t,n),[s[1],s[2],s[3]],[i[1],i[2],i[3]],a)]}case"Dilation2D":{const i=IM("strides",e,t,n),a=IM("pad",e,t,n),s=IM("dilations",e,t,n),o=i[1],l=i[2],u=s[1],c=s[2];return[r.dilation2d(IM("x",e,t,n),IM("filter",e,t,n),[o,l],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"Fill":{const i=IM("shape",e,t,n),a=IM("dtype",e,t,n),s=IM("value",e,t,n);return[r.fill(i,s,a)]}case"LinSpace":{const i=IM("start",e,t,n),a=IM("stop",e,t,n),s=IM("num",e,t,n);return[r.linspace(i,a,s)]}case"Multinomial":{const i=IM("logits",e,t,n),a=IM("numSamples",e,t,n),s=IM("seed",e,t,n);return[r.multinomial(i,a,s)]}case"OneHot":{const i=IM("indices",e,t,n),a=IM("depth",e,t,n),s=IM("onValue",e,t,n),o=IM("offValue",e,t,n),l=IM("dtype",e,t,n);return[r.oneHot(i,a,s,o,l)]}case"Ones":return[r.ones(IM("shape",e,t,n),IM("dtype",e,t,n))];case"OnesLike":return[r.onesLike(IM("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(IM("shape",e,t,n),IM("dtype",e,t,n),IM("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(IM("shape",e,t,n),IM("minval",e,t,n),IM("maxval",e,t,n),IM("dtype",e,t,n))];case"Range":{const i=IM("start",e,t,n),a=IM("stop",e,t,n),s=IM("step",e,t,n);return[r.range(i,a,s,IM("dtype",e,t,n))]}case"TruncatedNormal":{const i=IM("shape",e,t,n),a=IM("mean",e,t,n),s=IM("stdDev",e,t,n),o=IM("seed",e,t,n);return[r.truncatedNormal(i,a,s,IM("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(IM("shape",e,t,n),IM("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(IM("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,i=FC)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=YC(e,t,n),c=await i.image.nonMaxSuppressionWithScoreAsync(r,a,s,o,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:l}=YC(e,t,n),u=IM("padToMaxOutputSize",e,t,n),c=await i.image.nonMaxSuppressionPaddedAsync(r,a,s,o,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:l}=YC(e,t,n);return[await i.image.nonMaxSuppressionAsync(r,a,s,o,l)]}case"Where":{const r=i.cast(IM("condition",e,t,n),"bool"),a=[await i.whereAsync(r)];return r.dispose(),a}case"ListDiff":return i.setdiff1dAsync(IM("x",e,t,n),IM("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"LowerBound":{const i=IM("sortedSequence",e,t,n),a=IM("values",e,t,n);return[r.lowerBound(i,a)]}case"TopKV2":{const i=IM("x",e,t,n),a=IM("k",e,t,n),s=IM("sorted",e,t,n),o=r.topk(i,a,s);return[o.values,o.indices]}case"UpperBound":{const i=IM("sortedSequence",e,t,n),a=IM("values",e,t,n);return[r.upperBound(i,a)]}case"Unique":{const i=IM("x",e,t,n),a=r.unique(i);return[a.values,a.indices]}case"UniqueV2":{const i=IM("x",e,t,n),a=IM("axis",e,t,n),s=r.unique(i,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"ResizeBilinear":{const i=IM("images",e,t,n),a=IM("size",e,t,n),s=IM("alignCorners",e,t,n),o=IM("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(i,[a[0],a[1]],s,o)]}case"ResizeNearestNeighbor":{const i=IM("images",e,t,n),a=IM("size",e,t,n),s=IM("alignCorners",e,t,n),o=IM("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(i,[a[0],a[1]],s,o)]}case"CropAndResize":{const i=IM("image",e,t,n),a=IM("boxes",e,t,n),s=IM("boxInd",e,t,n),o=IM("cropSize",e,t,n),l=IM("method",e,t,n),u=IM("extrapolationValue",e,t,n);return[r.image.cropAndResize(i,a,s,o,l,u)]}case"ImageProjectiveTransformV3":{const i=IM("images",e,t,n),a=IM("transforms",e,t,n),s=IM("outputShape",e,t,n),o=IM("fillValue",e,t,n),l=IM("interpolation",e,t,n),u=IM("fillMode",e,t,n);return[r.image.transform(i,a,l.toLowerCase(),u.toLowerCase(),o,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const i=IM("default",e,t,n);return[kM(e.name,t,n)||i];case"Placeholder":return[kM(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[PM(IM("x",e,t,n))];case"IdentityN":return IM("x",e,t,n).map((e=>PM(e)));case"Shape":return[r.tensor1d(IM("x",e,t,n).shape,"int32")];case"ShapeN":return IM("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(IM("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(IM("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=IM("x",e,t,n),s=IM("data",e,t,n),o=IM("message",e,t,n),l=IM("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"Equal":return[r.equal(IM("a",e,t,n),IM("b",e,t,n))];case"NotEqual":return[r.notEqual(IM("a",e,t,n),IM("b",e,t,n))];case"Greater":return[r.greater(IM("a",e,t,n),IM("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(IM("a",e,t,n),IM("b",e,t,n))];case"Less":return[r.less(IM("a",e,t,n),IM("b",e,t,n))];case"LessEqual":return[r.lessEqual(IM("a",e,t,n),IM("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(IM("a",e,t,n),IM("b",e,t,n))];case"LogicalNot":return[r.logicalNot(IM("a",e,t,n))];case"LogicalOr":return[r.logicalOr(IM("a",e,t,n),IM("b",e,t,n))];case"Select":case"SelectV2":return[r.where(IM("condition",e,t,n),IM("a",e,t,n),IM("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(IM("a",e,t,n),IM("b",e,t,n),IM("transposeA",e,t,n),IM("transposeB",e,t,n))];case"Einsum":return[r.einsum(IM("equation",e,t,n),...IM("tensors",e,t,n))];case"Transpose":return[r.transpose(IM("x",e,t,n),IM("perm",e,t,n))];case"_FusedMatMul":const[i,a]=IM("fusedOps",e,t,n),s="biasadd"===i,o="prelu"===a,l=IM("numArgs",e,t,n),u=IM("leakyreluAlpha",e,t,n);if(s){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=IM("args",e,t,n);return[r.fused.matMul({a:IM("a",e,t,n),b:IM("b",e,t,n),transposeA:IM("transposeA",e,t,n),transposeB:IM("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(IM("x",e,t,n),IM("axis",e,t,n),IM("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(IM("x",e,t,n),IM("mean",e,t,n),IM("variance",e,t,n),IM("offset",e,t,n),IM("scale",e,t,n),IM("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(IM("x",e,t,n),IM("radius",e,t,n),IM("bias",e,t,n),IM("alpha",e,t,n),IM("beta",e,t,n))];case"Softmax":return[r.softmax(IM("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(IM("x",e,t,n))];case"SparseToDense":return[r.sparseToDense(IM("sparseIndices",e,t,n),IM("outputShape",e,t,n),IM("sparseValues",e,t,n),IM("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"Max":{const i=IM("axis",e,t,n),a=IM("keepDims",e,t,n);return[r.max(IM("x",e,t,n),i,a)]}case"Mean":{const i=IM("axis",e,t,n),a=IM("keepDims",e,t,n);return[r.mean(IM("x",e,t,n),i,a)]}case"Min":{const i=IM("axis",e,t,n),a=IM("keepDims",e,t,n);return[r.min(IM("x",e,t,n),i,a)]}case"Sum":{const i=IM("axis",e,t,n),a=IM("keepDims",e,t,n);return[r.sum(IM("x",e,t,n),i,a)]}case"All":{const i=IM("axis",e,t,n),a=IM("keepDims",e,t,n);return[r.all(IM("x",e,t,n),i,a)]}case"Any":{const i=IM("axis",e,t,n),a=IM("keepDims",e,t,n);return[r.any(IM("x",e,t,n),i,a)]}case"ArgMax":{const i=IM("axis",e,t,n);return[r.argMax(IM("x",e,t,n),i)]}case"ArgMin":{const i=IM("axis",e,t,n);return[r.argMin(IM("x",e,t,n),i)]}case"Prod":{const i=IM("axis",e,t,n),a=IM("keepDims",e,t,n);return[r.prod(IM("x",e,t,n),i,a)]}case"Cumprod":{const i=IM("axis",e,t,n),a=IM("exclusive",e,t,n),s=IM("reverse",e,t,n);return[r.cumprod(IM("x",e,t,n),i,a,s)]}case"Cumsum":{const i=IM("axis",e,t,n),a=IM("exclusive",e,t,n),s=IM("reverse",e,t,n);return[r.cumsum(IM("x",e,t,n),i,a,s)]}case"Bincount":const i=IM("x",e,t,n),a=IM("weights",e,t,n),s=IM("size",e,t,n);return[r.bincount(i,a,s)];case"DenseBincount":{const i=IM("x",e,t,n),a=IM("weights",e,t,n),s=IM("size",e,t,n),o=IM("binaryOutput",e,t,n);return[r.denseBincount(i,a,s,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"ConcatV2":case"Concat":{const i=IM("n",e,t,n),a=IM("axis",e,t,n);let s=IM("tensors",e,t,n);return s=s.slice(0,i),[r.concat(s,a)]}case"Gather":{const i=IM("x",e,t,n),a=IM("indices",e,t,n);return[r.gather(i,r.cast(a,"int32"),0)]}case"GatherV2":{const i=IM("axis",e,t,n),a=IM("batchDims",e,t,n),s=IM("x",e,t,n),o=IM("indices",e,t,n);return[r.gather(s,r.cast(o,"int32"),i,a)]}case"Reverse":{const i=IM("dims",e,t,n),a=[];for(let e=0;e<i.length;e++)i[e]&&a.push(e);const s=IM("x",e,t,n);return[r.reverse(s,a)]}case"ReverseV2":{const i=IM("axis",e,t,n),a=IM("x",e,t,n);return[r.reverse(a,i)]}case"Slice":{const i=IM("begin",e,t,n),a=IM("size",e,t,n);return[r.slice(IM("x",e,t,n),i,a)]}case"StridedSlice":{const i=IM("begin",e,t,n),a=IM("end",e,t,n),s=IM("strides",e,t,n),o=IM("beginMask",e,t,n),l=IM("endMask",e,t,n),u=IM("ellipsisMask",e,t,n),c=IM("newAxisMask",e,t,n),h=IM("shrinkAxisMask",e,t,n),p=IM("x",e,t,n);return[r.stridedSlice(p,i,a,s,o,l,u,c,h)]}case"Pack":return _u((()=>{const i=IM("axis",e,t,n),a=IM("tensors",e,t,n),s=a[0].shape,o=r.squeeze(a[0]).shape,l=a.map((e=>{const t=De.arraysEqual(e.shape,s);if(!t&&!De.arraysEqual(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,s)}));return[r.stack(l,i)]}));case"Unpack":{const i=IM("axis",e,t,n),a=IM("tensor",e,t,n);return r.unstack(a,i)}case"Tile":{const i=IM("reps",e,t,n);return[r.tile(IM("x",e,t,n),i)]}case"Split":case"SplitV":{const i=IM("axis",e,t,n),a=IM("numOrSizeSplits",e,t,n),s=IM("x",e,t,n);return r.split(s,a,i)}case"ScatterNd":{const i=IM("indices",e,t,n),a=IM("values",e,t,n),s=IM("shape",e,t,n);return[r.scatterND(i,a,s)]}case"GatherNd":{const i=IM("x",e,t,n),a=IM("indices",e,t,n);return[r.gatherND(i,a)]}case"SparseToDense":{const i=IM("sparseIndices",e,t,n),a=IM("outputShape",e,t,n),s=IM("sparseValues",e,t,n),o=IM("defaultValue",e,t,n);return[r.sparseToDense(i,s,a,s.dtype===o.dtype?o:r.cast(o,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:i,outputValues:a,emptyRowIndicator:s,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(IM("indices",e,t,n),IM("values",e,t,n),IM("denseShape",e,t,n),IM("defaultValue",e,t,n));return[i,a,s,o]}case"SparseReshape":{const{outputIndices:i,outputShape:a}=r.sparse.sparseReshape(IM("inputIndices",e,t,n),IM("inputShape",e,t,n),IM("newShape",e,t,n));return[i,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(IM("data",e,t,n),IM("indices",e,t,n),IM("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(IM("data",e,t,n),IM("indices",e,t,n),IM("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"FFT":return[r.fft(IM("x",e,t,n))];case"IFFT":return[r.ifft(IM("x",e,t,n))];case"RFFT":return[r.rfft(IM("x",e,t,n))];case"IRFFT":return[r.irfft(IM("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"StringNGrams":{const{nGrams:i,nGramsSplits:a}=r.string.stringNGrams(IM("data",e,t,n),IM("dataSplits",e,t,n),IM("separator",e,t,n),IM("nGramWidths",e,t,n),IM("leftPad",e,t,n),IM("rightPad",e,t,n),IM("padWidth",e,t,n),IM("preserveShortSequences",e,t,n));return[i,a]}case"StringSplit":{const{indices:i,values:a,shape:s}=r.string.stringSplit(IM("input",e,t,n),IM("delimiter",e,t,n),IM("skipEmpty",e,t,n));return[i,a,s]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(IM("input",e,t,n),IM("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return i((()=>((e,t,n,r=FC)=>{switch(e.op){case"Cast":return[r.cast(IM("x",e,t,n),IM("dtype",e,t,n))];case"ExpandDims":{const i=IM("axis",e,t,n);return[r.expandDims(IM("x",e,t,n),i)]}case"Squeeze":{const i=IM("axis",e,t,n);return[r.squeeze(IM("x",e,t,n),i)]}case"Reshape":return[r.reshape(IM("x",e,t,n),IM("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(IM("x",e,t,n),IM("padding",e,t,n),IM("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(IM("x",e,t,n),IM("padding",e,t,n),IM("constantValue",e,t,n))];case"SpaceToBatchND":{const i=IM("blockShape",e,t,n),a=IM("paddings",e,t,n);return[r.spaceToBatchND(IM("x",e,t,n),i,a)]}case"BatchToSpaceND":{const i=IM("blockShape",e,t,n),a=IM("crops",e,t,n);return[r.batchToSpaceND(IM("x",e,t,n),i,a)]}case"DepthToSpace":{const i=IM("blockSize",e,t,n),a=IM("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(IM("x",e,t,n),i,a)]}case"BroadcastTo":return[r.broadcastTo(IM("x",e,t,n),IM("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(IM("s0",e,t,n),IM("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const i=IM("keyDType",e,t,n),a=IM("valueDType",e,t,n),s=new ZC(i,a);return r.addHashTable(e.name,s),[s.handle]}case"LookupTableImport":case"LookupTableImportV2":{const i=IM("tableHandle",e,t,n,r),a=IM("keys",e,t,n),s=IM("values",e,t,n),o=r.getHashTableById(i.id);return[await o.import(a,s)]}case"LookupTableFind":case"LookupTableFindV2":{const i=IM("tableHandle",e,t,n,r),a=IM("keys",e,t,n),s=IM("defaultValue",e,t,n),o=r.getHashTableById(i.id);return[await o.find(a,s)]}case"LookupTableSize":case"LookupTableSizeV2":{const i=IM("tableHandle",e,t,n,r);return[r.getHashTableById(i.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=CM(e.op);if(a&&a.customExecutor)return a.customExecutor(new DC(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return De.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class QC{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function eI(e,t,n,r){const i=new Set,a=[];let s=null,o=null;const l=new Set,u=Object.keys(e).map((e=>LM(e)[0]));let c=[];null!=r&&(c=r.map((e=>LM(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(aI(e)||sI(e)||oI(e))&&null==s&&(s=e,o=s.children.map((e=>e.name)).filter((e=>i.has(e)))),i.add(e.name),null==n[e.name]&&(-1===u.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:i,missingInputs:a,dynamicNode:s,syncInputs:o}}function tI(e,t,n){const{usedNodes:r,inputs:i}=n,a=[],s=Object.keys(i).map((e=>LM(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;s.forEach((e=>{r.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&a.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&a.push(e)}));const l=new Set,u=[];for(;a.length>0;){const e=a.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&a.push(e)}))}return u}const nI=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],rI=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],iI=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function aI(e){return nI.indexOf(e.op)>=0}function sI(e){return rI.indexOf(e.op)>=0}function oI(e){return iI.indexOf(e.op)>=0}class lI{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new lI(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=eI(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:i,syncInputs:a}=n;if(null!=i)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),i=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${i}]. Missing the following inputs: [${r}]`)}return tI(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[LM(e)[0]])),i=t.map((e=>LM(e)[0]));let a=i.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===a.length&&(a=this._outputs);const s=this.getCompilationKey(r,a);let o=this.compiledMap.get(s);null==o&&(o=this.compile(e,a),this.compiledMap.set(s,o));const l={},u={};return _u((()=>{const n=new QC(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,i]=LM(t),a=[];a[i]=e[t],r[n]=a}));const a=this.getFrozenTensorIds(r),s={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=JC(t,r,n,this._resourceManager);if(De.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,a,i,s)}}return null==this.parent&&n.dispose(a),t.map((e=>kM(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,i,a,s){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(s[e.id]=(s[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const a=AM(e.name,n,r);null!=a&&a.forEach((e=>{if(e&&!e.kept&&!i.has(e.id)){const n=s[e.id];if(1===n){if(this.keepTensorForDebug){const[n,i]=NM(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][i]=e}else e.dispose();delete s[e.id]}else null!=n&&s[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},i={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=se().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const a=new QC(this.weightMap,r,i,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);const s=t.map((e=>kM(e,this.tensorsMap,a))),o=s.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&a.dispose(this.keepIds),s}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const i=Object.keys(e),a=i.map((e=>this.graph.nodes[LM(e)[0]])),s=n.map((e=>LM(e)[0]));let o=s.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=eI(e,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=LM(t),i=[];i[r]=e[t],d[n]=i}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(a,p,t,d,g,m,s,f,l);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!aI(e)&&!kM(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${i}]. Consider providing the following inputs: [${u}]. ${e}`)}return d}processStack(e,t,n,r,i,a,s,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&IM("isConstant",e.node,r,n)&&([c]=NM(e.node.name,n)),null==r[e.node.name]){const h=JC(e.node,r,n,this._resourceManager);c||([c]=NM(e.node.name,n));const p=n.currentContext;De.isPromise(h)?u.push(h.then((u=>(r[c]=u,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,a,s,o),this.processChildNodes(e.node,t,n,r,i,l),u)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,a,s,o),this.processChildNodes(e.node,t,n,r,i,l))}else this.processChildNodes(e.node,t,n,r,i,l)}return u}processChildNodes(e,t,n,r,i,a){e.children.forEach((e=>{const[s]=NM(e.name,n);!i[s]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!kM(e,r,n)))&&(i[s]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!kM(e,r,n)))&&(i[s]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=LM(t),i=this.graph.nodes[r];if(i.attrParams.shape&&i.attrParams.shape.value){const e=i.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));De.assert(t,(()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}i.attrParams.dtype&&i.attrParams.dtype.value&&De.assert(n.dtype===i.attrParams.dtype.value,(()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=LM(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=LM(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class uI{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class cI{constructor(e,t={},n=Ni){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new uI}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return De.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new lI(wC.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=wC.Instance.transformGraph(e.modelInitializer);this.initializer=new lI(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){const n=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){const e={};return(n instanceof Vt?[n]:n).forEach(((t,n)=>e[this.structuredOutputKeys[n]]=t)),e}return n}normalizeInputs(e){if(!(e instanceof Vt||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function hI(e,t={},n=Ni){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return`${e}model.json?tfjs-format=file`}
/** @license See the LICENSE file. */(e));const r=new cI(e,t,n);return await r.load(),r}var pI=function(e,t){return(pI=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function dI(e,t){function n(){this.constructor=e}pI(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var fI=function(){return(fI=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};function mI(e,t,n,r){return new(n||(n=Promise))((function(i,a){function s(e){try{l(r.next(e))}catch(e){a(e)}}function o(e){try{l(r.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}l((r=r.apply(e,t||[])).next())}))}function gI(e,t){var n,r,i,a,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(i=2&a[0]?r.return:a[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,a[1])).done)return i;switch(r=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,r=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){s.label=a[1];break}if(6===a[0]&&s.label<i[1]){s.label=i[1],i=a;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(a);break}i[2]&&s.ops.pop(),s.trys.pop();continue}a=t.call(e,s)}catch(e){a=[6,e],r=0}finally{n=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}}function yI(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),i=0;for(t=0;t<n;t++)for(var a=arguments[t],s=0,o=a.length;s<o;s++,i++)r[i]=a[s];return r}var xI=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],vI=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"],bI={left:[1,2,3,7,9,11,13,15,17,19,21,23,25,27,29,31],right:[4,5,6,8,10,12,14,16,18,20,22,24,26,28,30,32],middle:[0]},wI={left:[1,3,5,7,9,11,13,15],right:[2,4,6,8,10,12,14,16],middle:[0]},_I=[[0,1],[0,2],[1,3],[2,4],[5,6],[5,7],[5,11],[6,8],[6,12],[7,9],[8,10],[11,12],[11,13],[12,14],[13,15],[14,16]],SI=[[0,1],[0,4],[1,2],[2,3],[3,7],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[11,23],[12,14],[14,16],[12,24],[13,15],[15,17],[16,18],[16,20],[15,17],[15,19],[15,21],[16,22],[17,19],[18,20],[23,25],[23,24],[24,26],[25,27],[26,28],[27,29],[28,30],[27,31],[28,32],[29,31],[30,32]];function TI(e){return e instanceof SVGAnimatedLength?e.baseVal.value:e}function EI(e){return mI(this,void 0,void 0,(function(){var t,n;return gI(this,(function(r){switch(r.label){case 0:return t=document.createElement("canvas"),e instanceof Vt?[4,na.toPixels(e,t)]:[3,2];case 1:return r.sent(),[3,3];case 2:t.width=TI(e.width),t.height=TI(e.height),n=t.getContext("2d"),e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0),r.label=3;case 3:return[2,t]}}))}))}function MI(e){return mI(this,void 0,void 0,(function(){var t,n,r,i,a,s;return gI(this,(function(o){switch(o.label){case 0:return e instanceof Vt?(t=e.shape.slice(0,2),n=t[0],r=t[1],i=ImageData.bind,[4,na.toPixels(e)]):[3,2];case 1:return[2,new(i.apply(ImageData,[void 0,o.sent(),r,n]))];case 2:return a=document.createElement("canvas"),s=a.getContext("2d"),a.width=TI(e.width),a.height=TI(e.height),s.drawImage(e,0,0),[2,s.getImageData(0,0,a.width,a.height)]}}))}))}function CI(e){return mI(this,void 0,void 0,(function(){var t;return gI(this,(function(n){switch(n.label){case 0:return e instanceof SVGImageElement||e instanceof OffscreenCanvas?[4,EI(e)]:[3,2];case 1:return t=n.sent(),[3,3];case 2:t=e,n.label=3;case 3:return[2,na.fromPixels(t,4)]}}))}))}function II(e){if(e<0||e>=256)throw new Error("Mask value must be in range [0, 255] but got "+e);if(!Number.isInteger(e))throw new Error("Mask value must be an integer but got "+e)}var kI={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},AI=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return mI(this,void 0,void 0,(function(){return gI(this,(function(e){return[2,this.mask]}))}))},e.prototype.toImageData=function(){return mI(this,void 0,void 0,(function(){return gI(this,(function(e){return[2,MI(this.mask)]}))}))},e.prototype.toTensor=function(){return mI(this,void 0,void 0,(function(){return gI(this,(function(e){return[2,CI(this.mask)]}))}))},e.prototype.getUnderlyingType=function(){return"canvasimagesource"},e}();function NI(e){return II(e),"person"}var RI=function(){function e(e){var t,n=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new(0,G_.Pose)({locateFile:function(t,n){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+t:n+"/"+t}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults((function(e){if(n.height=e.image.height,n.width=e.image.width,null==e.poseLandmarks)n.poses=[];else{var t=n.translateOutput(e.poseLandmarks,e.poseWorldLandmarks);e.segmentationMask&&(t.segmentation={maskValueToLabel:NI,mask:new AI(e.segmentationMask)}),n.poses=[t]}}))}return e.prototype.translateOutput=function(e,t){var n=this,r={keypoints:e.map((function(e,t){return{x:e.x*n.width,y:e.y*n.height,z:e.z,score:e.visibility,name:vI[t]}}))};return null!=t&&(r.keypoints3D=t.map((function(e,t){return{x:e.x,y:e.y,z:e.z,score:e.visibility,name:vI[t]}}))),r},e.prototype.estimatePoses=function(e,t,n){return mI(this,void 0,void 0,(function(){var r,i;return gI(this,(function(a){switch(a.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Vt?(i=ImageData.bind,[4,na.toPixels(e)]):[3,2];case 1:return r=new(i.apply(ImageData,[void 0,a.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,a.label=3;case 3:return e=r,[4,this.poseSolution.send({image:e},n)];case 4:return a.sent(),[2,this.poses]}}))}))},e.prototype.dispose=function(){this.poseSolution.close()},e.prototype.reset=function(){this.poseSolution.reset()},e.prototype.initialize=function(){return this.poseSolution.initialize()},e}();function LI(e){return mI(this,void 0,void 0,(function(){var t,n;return gI(this,(function(r){switch(r.label){case 0:return t=function(e){if(null==e)return fI({},kI);var t=fI({},e);return t.runtime="mediapipe",null==t.enableSegmentation&&(t.enableSegmentation=kI.enableSegmentation),null==t.enableSmoothing&&(t.enableSmoothing=kI.enableSmoothing),null==t.smoothSegmentation&&(t.smoothSegmentation=kI.smoothSegmentation),null==t.modelType&&(t.modelType=kI.modelType),t}(e),[4,(n=new RI(t)).initialize()];case 1:return r.sent(),[2,n]}}))}))}function OI(e){return e instanceof Vt?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function PI(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function DI(e){return e instanceof Vt?e:na.fromPixels(e)}function FI(e,t,n){return $I(n,"inputResolution"),[1/n.width*e[0][0]*t.width,1/n.height*e[0][1]*t.width,e[0][3]*t.width,1/n.width*e[1][0]*t.height,1/n.height*e[1][1]*t.height,e[1][3]*t.height,0,0]}function $I(e,t){De.assert(0!==e.width,(function(){return t+" width cannot be 0."})),De.assert(0!==e.height,(function(){return t+" height cannot be 0."}))}function BI(e,t,n){var r=n.rotationVectorStartKeypointIndex,i=n.rotationVectorEndKeypointIndex,a=e.locationData,s=a.relativeKeypoints[r].x*t.width,o=a.relativeKeypoints[r].y*t.height,l=a.relativeKeypoints[i].x*t.width,u=a.relativeKeypoints[i].y*t.height,c=2*Math.sqrt((l-s)*(l-s)+(u-o)*(u-o)),h=function(e,t,n){var r,i=e.locationData,a=n.rotationVectorStartKeypointIndex,s=n.rotationVectorEndKeypointIndex;r=n.rotationVectorTargetAngle?n.rotationVectorTargetAngle:Math.PI*n.rotationVectorTargetAngleDegree/180;var o=i.relativeKeypoints[a].x*t.width,l=i.relativeKeypoints[a].y*t.height,u=i.relativeKeypoints[s].x*t.width,c=i.relativeKeypoints[s].y*t.height;return PI(r-Math.atan2(-(c-l),u-o))}(e,t,n);return{xCenter:s/t.width,yCenter:o/t.height,width:c/t.width,height:c/t.height,rotation:h}}function zI(e){if(16!==e.length)throw new Error("Array length must be 16 but got "+e.length);return[[e[0],e[1],e[2],e[3]],[e[4],e[5],e[6],e[7]],[e[8],e[9],e[10],e[11]],[e[12],e[13],e[14],e[15]]]}function UI(e,t,n,r,i,a,s){return e[t][i]*(e[n][a]*e[r][s]-e[n][s]*e[r][a])}function VI(e,t,n){var r=(t+1)%4,i=(t+2)%4,a=(t+3)%4,s=(n+1)%4,o=(n+2)%4,l=(n+3)%4;return UI(e,r,i,a,s,o,l)+UI(e,i,a,r,s,o,l)+UI(e,a,r,i,s,o,l)}function WI(e,t,n){void 0===n&&(n={ignoreRotation:!1});for(var r=[],i=0,a=e;i<a.length;i++){var s=a[i],o=s.x-.5,l=s.y-.5,u=n.ignoreRotation?0:t.rotation,c=Math.cos(u)*o-Math.sin(u)*l,h=Math.sin(u)*o+Math.cos(u)*l;c=c*t.width+t.xCenter,h=h*t.height+t.yCenter;var p=s.z*t.width,d=fI({},s);d.x=c,d.y=h,d.z=p,r.push(d)}return r}function HI(e,t){var n=function(e,t,n,r){var i=(r-n)/255;return{scale:i,offset:n-0*i}}(0,0,t[0],t[1]);return _u((function(){return hl(xs(e,n.scale),n.offset)}))}function GI(e,t,n){var r,i,a,s,o,l,u,c,h,p,d,f,m=t.outputTensorSize,g=t.keepAspectRatio,y=t.borderMode,x=t.outputTensorFloatRange,v=OI(e),b=function(e,t){return t?{xCenter:t.xCenter*e.width,yCenter:t.yCenter*e.height,width:t.width*e.width,height:t.height*e.height,rotation:t.rotation}:{xCenter:.5*e.width,yCenter:.5*e.height,width:e.width,height:e.height,rotation:0}}(v,n),w=function(e,t,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var r=t.height,i=t.width;$I(t,"targetSize"),$I(e,"roi");var a,s,o=r/i,l=e.height/e.width,u=0,c=0;return o>l?(a=e.width,s=e.width*o,c=(1-l/o)/2):(a=e.height/o,s=e.height,u=(1-o/l)/2),e.width=a,e.height=s,{top:c,left:u,right:u,bottom:c}}(b,m,g),_=(r=b,i=v.width,a=v.height,!1,s=r.width,o=r.height,1,l=Math.cos(r.rotation),u=Math.sin(r.rotation),c=r.xCenter,h=r.yCenter,p=1/i,d=1/a,(f=new Array(16))[0]=s*l*1*p,f[1]=-o*u*p,f[2]=0,f[3]=(-.5*s*l*1+.5*o*u+c)*p,f[4]=s*u*1*d,f[5]=o*l*d,f[6]=0,f[7]=(-.5*o*l-.5*s*u*1+h)*d,f[8]=0,f[9]=0,f[10]=s*p,f[11]=0,f[12]=0,f[13]=0,f[14]=0,f[15]=1,zI(f));return{imageTensor:_u((function(){var t=DI(e),n=kl(FI(_,v,m),[1,8]),r="zero"===y?"constant":"nearest",i=Kp.transform(Cu(Ii(t,"float32")),n,"bilinear",r,0,[m.height,m.width]);return null!=x?HI(i,x):i})),padding:w,transformationMatrix:_}}function jI(e,t,n,r){return 1===r?.5*(e+t):e+(t-e)*n/(r-1)}function qI(e){return null!=e&&null!=e.currentTime}function XI(e){for(var t={locationData:{relativeKeypoints:[]}},n=Number.MAX_SAFE_INTEGER,r=Number.MIN_SAFE_INTEGER,i=Number.MAX_SAFE_INTEGER,a=Number.MIN_SAFE_INTEGER,s=0;s<e.length;++s){var o=e[s];n=Math.min(n,o.x),r=Math.max(r,o.x),i=Math.min(i,o.y),a=Math.max(a,o.y),t.locationData.relativeKeypoints.push({x:o.x,y:o.y})}return t.locationData.relativeBoundingBox={xMin:n,yMin:i,xMax:r,yMax:a,width:r-n,height:a-i},t}function KI(e,t,n,r){return mI(this,void 0,void 0,(function(){var r,i,a,s,o;return gI(this,(function(l){switch(l.label){case 0:return e.sort((function(e,t){return Math.max.apply(Math,t.score)-Math.max.apply(Math,e.score)})),r=kl(e.map((function(e){return[e.locationData.relativeBoundingBox.yMin,e.locationData.relativeBoundingBox.xMin,e.locationData.relativeBoundingBox.yMax,e.locationData.relativeBoundingBox.xMax]}))),i=Sl(e.map((function(e){return e.score[0]}))),[4,Kp.nonMaxSuppressionAsync(r,i,t,n)];case 1:return[4,(a=l.sent()).array()];case 2:return s=l.sent(),o=e.filter((function(e,t){return s.indexOf(t)>-1})),Su([r,i,a]),[2,o]}}))}))}function YI(e,t){return e.map((function(e){var n=fI(fI({},e),{x:e.x*t.width,y:e.y*t.height});return null!=e.z&&(n.z=e.z*t.width),n}))}function ZI(e,t,n){return mI(this,void 0,void 0,(function(){var r,i,a,s,o,l,u,c,h,p,d,f,m,g,y,x,v,b,w,_,S,T,E,M;return gI(this,(function(C){switch(C.label){case 0:if(r=xu(t,[0]),i=r.shape,a=i[0],s=i[1],o=i[2],e.length!==o)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+e.length+", heatmap length: "+o);return l=[],[4,r.buffer()];case 1:for(u=C.sent(),c=0;c<e.length;c++)if(h=e[c],p=fI({},h),l.push(p),d=Math.trunc(p.x*s),f=Math.trunc(p.y*a),!(d<0||d>=s||f<0||d>=a)){for(m=Math.trunc((n.kernelSize-1)/2),g=Math.max(0,d-m),y=Math.min(s,d+m+1),x=Math.max(0,f-m),v=Math.min(a,f+m+1),b=0,w=0,_=0,S=0,T=x;T<v;++T)for(E=g;E<y;++E)M=u.get(T,E,c),b+=M,S=Math.max(S,M),w+=E*M,_+=T*M;S>=n.minConfidenceToRefine&&b>0&&(p.x=w/s/b,p.y=_/a/b)}return r.dispose(),[2,l]}}))}))}function JI(e,t){var n=t.left,r=t.top,i=t.left+t.right,a=t.top+t.bottom;return e.map((function(e){return fI(fI({},e),{x:(e.x-n)/(1-i),y:(e.y-r)/(1-a),z:e.z/(1-i)})}))}function QI(e,t,n){return"webgl"===Eu()?function(e,t,n){var r=n.combineWithPreviousRatio.toFixed(2),i={variableNames:["prevMask","newMask"],outputShape:e.shape,userCode:"\n  void main() {\n      ivec2 coords = getOutputCoords();\n      int height = coords[0];\n      int width = coords[1];\n\n      float prevMaskValue = getPrevMask(height, width);\n      float newMaskValue = getNewMask(height, width);\n\n      /*\n      * Assume p := newMaskValue\n      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)\n      * uncertainty alpha(p) =\n      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the\n      * uncertainty]\n      *\n      * The following polynomial approximates uncertainty alpha as a\n      * function of (p + 0.5):\n      */\n      const float c1 = 5.68842;\n      const float c2 = -0.748699;\n      const float c3 = -57.8051;\n      const float c4 = 291.309;\n      const float c5 = -624.717;\n      float t = newMaskValue - 0.5;\n      float x = t * t;\n\n      float uncertainty =\n        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));\n\n      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *\n                             (uncertainty * "+r+");\n\n      setOutput(outputValue);\n    }\n"},a=hn.backend;return _u((function(){var n=a.compileAndRun(i,[e,t]);return wu().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}))}(e,t,n):_u((function(){var r=Zl(t,.5),i=mu(r),a=Zl(1,Wu(1,xs(i,hl(5.68842,xs(i,hl(-.748699,xs(i,hl(-57.8051,xs(i,hl(291.309,xs(i,-624.717)))))))))));return hl(t,xs(Zl(e,t),xs(a,n.combineWithPreviousRatio)))}))}function ek(e,t,n){return mI(this,void 0,void 0,(function(){var r,i,a,s,o;return gI(this,(function(l){switch(l.label){case 0:return r=e[0],i=e[1],a=function(e,t,n){return _u((function(){var r,i,a,s;n.reverseOutputOrder?(i=xu(Qo(e,[0,n.boxCoordOffset+0],[-1,1])),r=xu(Qo(e,[0,n.boxCoordOffset+1],[-1,1])),s=xu(Qo(e,[0,n.boxCoordOffset+2],[-1,1])),a=xu(Qo(e,[0,n.boxCoordOffset+3],[-1,1]))):(r=xu(Qo(e,[0,n.boxCoordOffset+0],[-1,1])),i=xu(Qo(e,[0,n.boxCoordOffset+1],[-1,1])),a=xu(Qo(e,[0,n.boxCoordOffset+2],[-1,1])),s=xu(Qo(e,[0,n.boxCoordOffset+3],[-1,1]))),i=hl(xs(Yl(i,n.xScale),t.w),t.x),r=hl(xs(Yl(r,n.yScale),t.h),t.y),n.applyExponentialOnBoxSize?(a=xs(Ku(Yl(a,n.hScale)),t.h),s=xs(Ku(Yl(s,n.wScale)),t.w)):(a=xs(Yl(a,n.hScale),t.h),s=xs(Yl(s,n.wScale),t.h));var o=Zl(r,Yl(a,2)),l=Zl(i,Yl(s,2)),u=hl(r,Yl(a,2)),c=hl(i,Yl(s,2)),h=Yo([_s(o,[n.numBoxes,1]),_s(l,[n.numBoxes,1]),_s(u,[n.numBoxes,1]),_s(c,[n.numBoxes,1])],1);if(n.numKeypoints)for(var p=0;p<n.numKeypoints;++p){var d=n.keypointCoordOffset+p*n.numValuesPerKeypoint,f=void 0,m=void 0;n.reverseOutputOrder?(f=xu(Qo(e,[0,d],[-1,1])),m=xu(Qo(e,[0,d+1],[-1,1]))):(m=xu(Qo(e,[0,d],[-1,1])),f=xu(Qo(e,[0,d+1],[-1,1])));var g=hl(xs(Yl(f,n.xScale),t.w),t.x),y=hl(xs(Yl(m,n.yScale),t.h),t.y);h=Yo([h,_s(g,[n.numBoxes,1]),_s(y,[n.numBoxes,1])],1)}return h}))}(i,t,n),s=_u((function(){var e=r;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(e=Nc(r,-n.scoreClippingThresh,n.scoreClippingThresh)),e=Ss(e)):e})),[4,tk(a,s,n)];case 1:return o=l.sent(),Su([a,s]),[2,o]}}))}))}function tk(e,t,n){return mI(this,void 0,void 0,(function(){var r,i,a,s,o,l,u,c,h,p,d,f;return gI(this,(function(m){switch(m.label){case 0:return r=[],[4,e.data()];case 1:return i=m.sent(),[4,t.data()];case 2:for(a=m.sent(),s=0;s<n.numBoxes;++s)if(!(null!=n.minScoreThresh&&a[s]<n.minScoreThresh||(o=s*n.numCoords,l=nk(i[o+0],i[o+1],i[o+2],i[o+3],a[s],n.flipVertically,s),(u=l.locationData.relativeBoundingBox).width<0||u.height<0))){if(n.numKeypoints>0)for((c=l.locationData).relativeKeypoints=[],h=n.numKeypoints*n.numValuesPerKeypoint,p=0;p<h;p+=n.numValuesPerKeypoint)d=o+n.keypointCoordOffset+p,f={x:i[d+0],y:n.flipVertically?1-i[d+1]:i[d+1]},c.relativeKeypoints.push(f);r.push(l)}return[2,r]}}))}))}function nk(e,t,n,r,i,a,s){return{score:[i],ind:s,locationData:{relativeBoundingBox:{xMin:t,yMin:a?1-n:e,xMax:r,yMax:a?1-e:n,width:r-t,height:n-e}}}}function rk(e,t){return"none"===e?t:function(e){return 1/(1+Math.exp(-e))}(t)}function ik(e,t,n,r){return mI(this,void 0,void 0,(function(){var i,a,s,o,l,u,c,h;return gI(this,(function(p){switch(p.label){case 0:return n=n||t.flipHorizontally||!1,r=r||t.flipVertically||!1,i=e.size,a=i/t.numLandmarks,[4,e.data()];case 1:for(s=p.sent(),o=[],l=0;l<t.numLandmarks;++l)u=l*a,(h={x:0,y:0}).x=n?t.inputImageWidth-s[u]:s[u],a>1&&(h.y=r?t.inputImageHeight-s[u+1]:s[u+1]),a>2&&(h.z=s[u+2]),a>3&&(h.score=rk(t.visibilityActivation,s[u+3])),o.push(h);for(c=0;c<o.length;++c)(h=o[c]).x=h.x/t.inputImageWidth,h.y=h.y/t.inputImageHeight,h.z=h.z/t.inputImageWidth/(t.normalizeZ||1);return[2,o]}}))}))}function ak(e,t,n){var r=e.width,i=e.height,a=e.rotation;if(null==n.rotation&&null==n.rotationDegree||(a=function(e,t){return null!=t.rotation?e+=t.rotation:null!=t.rotationDegree&&(e+=Math.PI*t.rotationDegree/180),PI(e)}(a,n)),0===a)e.xCenter=e.xCenter+r*n.shiftX,e.yCenter=e.yCenter+i*n.shiftY;else{var s=(t.width*r*n.shiftX*Math.cos(a)-t.height*i*n.shiftY*Math.sin(a))/t.width,o=(t.width*r*n.shiftX*Math.sin(a)+t.height*i*n.shiftY*Math.cos(a))/t.height;e.xCenter=e.xCenter+s,e.yCenter=e.yCenter+o}if(n.squareLong){var l=Math.max(r*t.width,i*t.height);r=l/t.width,i=l/t.height}else if(n.squareShort){var u=Math.min(r*t.width,i*t.height);r=u/t.width,i=u/t.height}return e.width=r*n.scaleX,e.height=i*n.scaleY,e}function sk(e,t){return e.map((function(e){var n=fI(fI({},e),{x:e.x/t.width,y:e.y/t.height});return null!=e.z&&(e.z=e.z/t.width),n}))}var ok=function(){function e(e){this.alpha=e,this.initialized=!1}return e.prototype.apply=function(e,t){var n;return this.initialized?n=null==t?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(n=e,this.initialized=!0),this.rawValue=e,this.storedValue=n,n},e.prototype.applyWithAlpha=function(e,t,n){return this.alpha=t,this.apply(e,n)},e.prototype.hasLastRawValue=function(){return this.initialized},e.prototype.lastRawValue=function(){return this.rawValue},e.prototype.reset=function(){this.initialized=!1},e}(),lk=function(){function e(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new ok(this.getAlpha(this.minCutOff)),this.dx=new ok(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return e.prototype.apply=function(e,t,n){if(null==e)return e;var r=Math.trunc(t);if(this.lastTimestamp>=r)return e;0!==this.lastTimestamp&&0!==r&&(this.frequency=1/(1e-6*(r-this.lastTimestamp))),this.lastTimestamp=r;var i=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*n*this.frequency:0,a=this.dx.applyWithAlpha(i,this.getAlpha(this.derivateCutOff)),s=this.minCutOff+this.beta*Math.abs(a),o=null!=this.thresholdCutOff?this.thresholdCutOff+this.thresholdBeta*Math.abs(a):null;return this.x.applyWithAlpha(e,this.getAlpha(s),o)},e.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},e}(),uk=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var r=this;if(null==e)return this.reset(),null;this.initializeFiltersIfEmpty(e);var i=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return yI(e);i=1/n}return e.map((function(e,n){var a=fI(fI({},e),{x:r.xFilters[n].apply(e.x,t,i),y:r.yFilters[n].apply(e.y,t,i)});return null!=e.z&&(a.z=r.zFilters[n].apply(e.z,t,i)),a}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new lk(t.config)})),this.yFilters=e.map((function(e){return new lk(t.config)})),this.zFilters=e.map((function(e){return new lk(t.config)})))},e}(),ck=function(){function e(e){this.config=e,this.window=[],this.lowPassFilter=new ok(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return e.prototype.apply=function(e,t,n){if(null==e)return e;var r,i=Math.trunc(t);if(this.lastTimestamp>=i)return e;if(-1===this.lastTimestamp)r=1;else{for(var a=e*n-this.lastValue*this.lastValueScale,s=i-this.lastTimestamp,o=a,l=s,u=(1+this.window.length)*(1e6/30),c=0,h=this.window;c<h.length;c++){var p=h[c];if(l+p.duration>u)break;o+=p.distance,l+=p.duration}var d=o/(1e-6*l);r=1-1/(1+this.config.velocityScale*Math.abs(d)),this.window.unshift({distance:a,duration:s}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=n,this.lastTimestamp=i,this.lowPassFilter.applyWithAlpha(e,r)},e}(),hk=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var r=this;if(null==e)return this.reset(),null;var i=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return yI(e);i=1/n}return this.initializeFiltersIfEmpty(e),e.map((function(e,n){var a=fI(fI({},e),{x:r.xFilters[n].apply(e.x,t,i),y:r.yFilters[n].apply(e.y,t,i)});return null!=e.z&&(a.z=r.zFilters[n].apply(e.z,t,i)),a}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new ck(t.config)})),this.yFilters=e.map((function(e){return new ck(t.config)})),this.zFilters=e.map((function(e){return new ck(t.config)})))},e}(),pk=function(){function e(e){if(null!=e.velocityFilter)this.keypointsFilter=new hk(e.velocityFilter);else{if(null==e.oneEuroFilter)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+e+".");this.keypointsFilter=new uk(e.oneEuroFilter)}}return e.prototype.apply=function(e,t,n,r,i){if(void 0===r&&(r=!1),null==e)return this.keypointsFilter.reset(),null;var a=null!=i?function(e,t){return(e.width*t.width+e.height*t.height)/2}(i,n):1,s=r?YI(e,n):e,o=this.keypointsFilter.apply(s,t,a);return r?sk(o,n):o},e}(),dk=function(){function e(e){this.alpha=e.alpha}return e.prototype.apply=function(e){var t=this;if(null==e)return this.visibilityFilters=null,null;null!=this.visibilityFilters&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map((function(e){return new ok(t.alpha)})));for(var n=[],r=0;r<e.length;++r){var i=e[r],a=fI({},i);a.score=this.visibilityFilters[r].apply(i.score),n.push(a)}return n},e}(),fk={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},mk={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},gk={maxPoses:1,flipHorizontal:!1},yk={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},xk={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},vk={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},bk={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},wk={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},_k={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},Sk={kernelSize:7,minConfidenceToRefine:.5},Tk={alpha:.1},Ek={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},Mk={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},Ck={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},Ik={activation:"none"},kk={combineWithPreviousRatio:.7},Ak=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return mI(this,void 0,void 0,(function(){return gI(this,(function(e){return[2,EI(this.mask)]}))}))},e.prototype.toImageData=function(){return mI(this,void 0,void 0,(function(){return gI(this,(function(e){return[2,MI(this.mask)]}))}))},e.prototype.toTensor=function(){return mI(this,void 0,void 0,(function(){return gI(this,(function(e){return[2,this.mask]}))}))},e.prototype.getUnderlyingType=function(){return"tensor"},e}();function Nk(e){return II(e),"person"}var Rk=function(){function e(e,t,n,r,i,a){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=n,this.enableSegmentation=r,this.smoothSegmentation=i,this.modelType=a,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(e){null==e.reduceBoxesInLowestLayer&&(e.reduceBoxesInLowestLayer=!1),null==e.interpolatedScaleAspectRatio&&(e.interpolatedScaleAspectRatio=1),null==e.fixedAnchorSize&&(e.fixedAnchorSize=!1);for(var t=[],n=0;n<e.numLayers;){for(var r=[],i=[],a=[],s=[],o=n;o<e.strides.length&&e.strides[o]===e.strides[n];){var l=jI(e.minScale,e.maxScale,o,e.strides.length);if(0===o&&e.reduceBoxesInLowestLayer)a.push(1),a.push(2),a.push(.5),s.push(.1),s.push(l),s.push(l);else{for(var u=0;u<e.aspectRatios.length;++u)a.push(e.aspectRatios[u]),s.push(l);if(e.interpolatedScaleAspectRatio>0){var c=o===e.strides.length-1?1:jI(e.minScale,e.maxScale,o+1,e.strides.length);s.push(Math.sqrt(l*c)),a.push(e.interpolatedScaleAspectRatio)}}o++}for(var h=0;h<a.length;++h){var p=Math.sqrt(a[h]);r.push(s[h]/p),i.push(s[h]*p)}var d=0,f=0;if(e.featureMapHeight.length>0)d=e.featureMapHeight[n],f=e.featureMapWidth[n];else{var m=e.strides[n];d=Math.ceil(e.inputSizeHeight/m),f=Math.ceil(e.inputSizeWidth/m)}for(var g=0;g<d;++g)for(var y=0;y<f;++y)for(var x=0;x<r.length;++x){var v={xCenter:(y+e.anchorOffsetX)/f,yCenter:(g+e.anchorOffsetY)/d,width:0,height:0};e.fixedAnchorSize?(v.width=1,v.height=1):(v.width=i[x],v.height=r[x]),t.push(v)}n=o}return t}(fk);var s=Sl(this.anchors.map((function(e){return e.width}))),o=Sl(this.anchors.map((function(e){return e.height}))),l=Sl(this.anchors.map((function(e){return e.xCenter}))),u=Sl(this.anchors.map((function(e){return e.yCenter})));this.anchorTensor={x:l,y:u,w:s,h:o},this.prevFilteredSegmentationMask=this.enableSegmentation?kl([],[0,0]):null}return e.prototype.estimatePoses=function(e,t,n){return mI(this,void 0,void 0,(function(){var r,i,a,s,o,l,u,c,h,p,d,f,m,g,y,x,v,b,w,_,S,T,E;return gI(this,(function(M){switch(M.label){case 0:return r=function(e){var t;if(null==(t=null==e?gk:fI({},e)).maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses "+t.maxPoses+". Should be > 0.");if(t.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return t}(t),null==e?(this.reset(),[2,[]]):(this.maxPoses=r.maxPoses,this.timestamp=null!=n?1e3*n:qI(e)?1e6*e.currentTime:null,i=OI(e),a=_u((function(){return Ii(DI(e),"float32")})),null!=(s=this.regionOfInterest)?[3,2]:[4,this.detectPose(a)]);case 1:if(0===(o=M.sent()).length)return this.reset(),a.dispose(),[2,[]];l=o[0],s=this.poseDetectionToRoi(l,i),M.label=2;case 2:return[4,this.poseLandmarksByRoi(s,a)];case 3:return u=M.sent(),a.dispose(),null==u?(this.reset(),[2,[]]):(c=u.landmarks,h=u.auxiliaryLandmarks,p=u.poseScore,d=u.worldLandmarks,f=u.segmentationMask,m=this.poseLandmarkFiltering(c,h,d,i),g=m.actualLandmarksFiltered,y=m.auxiliaryLandmarksFiltered,x=m.actualWorldLandmarksFiltered,v=this.poseLandmarksToRoi(y,i),this.regionOfInterest=v,b=this.smoothSegmentation&&null!=f?this.poseSegmentationFiltering(f):f,null!=(w=null!=g?YI(g,i):null)&&w.forEach((function(e,t){e.name=vI[t]})),null!=(_=x)&&_.forEach((function(e,t){e.name=vI[t]})),S={score:p,keypoints:w,keypoints3D:_},null!==b&&(T=_u((function(){var e=Cu(b,2),t=Rh(e,[[0,0],[0,0],[0,1]]);return Th(t,[[0,0],[0,0],[0,2]],"symmetric")})),this.smoothSegmentation||Su(b),E={maskValueToLabel:Nk,mask:new Ak(T)},S.segmentation=E),[2,[S]])}}))}))},e.prototype.poseSegmentationFiltering=function(e){var t=this.prevFilteredSegmentationMask;return 0===t.size?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=QI(t,e,kk),Su(e)),Su(t),this.prevFilteredSegmentationMask},e.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),Su([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},e.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(Su(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=kl([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},e.prototype.detectPose=function(e){return mI(this,void 0,void 0,(function(){var t,n,r,i,a,s,o,l,u,c;return gI(this,(function(h){switch(h.label){case 0:return t=GI(e,vk),n=t.imageTensor,r=t.padding,i=this.detectorModel.predict(n),a=function(e){return _u((function(){var t=function(e){return _u((function(){return[Qo(e,[0,0,0],[1,-1,1]),Qo(e,[0,0,1],[1,-1,-1])]}))}(e),n=t[0],r=t[1];return{boxes:xu(r),logits:xu(n)}}))}(i),s=a.boxes,[4,ek([o=a.logits,s],this.anchorTensor,yk)];case 1:return 0===(l=h.sent()).length?(Su([n,i,o,s]),[2,l]):[4,KI(l,this.maxPoses,.3)];case 2:return u=h.sent(),c=function(e,t){void 0===e&&(e=[]);for(var n=t.left,r=t.top,i=t.left+t.right,a=t.top+t.bottom,s=0;s<e.length;s++){var o=e[s],l=o.locationData.relativeBoundingBox,u=(l.xMin-n)/(1-i),c=(l.yMin-r)/(1-a),h=l.width/(1-i),p=l.height/(1-a);l.xMin=u,l.yMin=c,l.width=h,l.height=p,l.xMax=u+h,l.yMax=c+p;var d=o.locationData.relativeKeypoints;d&&d.forEach((function(e){var t=(e.x-n)/(1-i),s=(e.y-r)/(1-a);e.x=t,e.y=s}))}return e}(u,r),Su([n,i,o,s]),[2,c]}}))}))},e.prototype.poseDetectionToRoi=function(e,t){return ak(BI(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,xk)},e.prototype.poseLandmarksByRoi=function(e,t){return mI(this,void 0,void 0,(function(){var n,r,i,a,s,o,l,u,c,h,p,d,f,m;return gI(this,(function(g){switch(g.label){case 0:if(n=OI(t),r=GI(t,bk,e),i=r.imageTensor,a=r.padding,s=r.transformationMatrix,"lite"!==this.modelType&&"full"!==this.modelType&&"heavy"!==this.modelType)throw new Error("Model type must be one of lite, full or heavy,but got "+this.modelType);return o=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&o.push("activation_segmentation"),l=this.landmarkModel.execute(i,o),[4,this.tensorsToPoseLandmarksAndSegmentation(l)];case 1:return null==(u=g.sent())?(Su(l),Su(i),[2,null]):(c=u.landmarks,h=u.auxiliaryLandmarks,p=u.poseScore,d=u.worldLandmarks,f=u.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(n,e,a,s,c,h,d,f)]);case 2:return m=g.sent(),Su(l),Su(i),[2,fI({poseScore:p},m)]}}))}))},e.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,t,n,r,i,a,s,o){return mI(this,void 0,void 0,(function(){var l,u,c,h,p,d;return gI(this,(function(f){return l=JI(i,n),u=JI(a,n),c=WI(l,t),h=WI(u,t),p=function(e,t){for(var n=[],r=0,i=e;r<i.length;r++){var a=i[r],s=a.x,o=a.y,l=t.rotation,u=Math.cos(l)*s-Math.sin(l)*o,c=Math.sin(l)*s+Math.cos(l)*o,h=fI({},a);h.x=u,h.y=c,n.push(h)}return n}(s,t),d=null,this.enableSegmentation&&(d=_u((function(){var t=o.shape,n=t[0],i=t[1],a=function(e){var t=zI(new Array(16).fill(0));t[0][0]=VI(e,0,0),t[1][0]=-VI(e,0,1),t[2][0]=VI(e,0,2),t[3][0]=-VI(e,0,3),t[0][2]=VI(e,2,0),t[1][2]=-VI(e,2,1),t[2][2]=VI(e,2,2),t[3][2]=-VI(e,2,3),t[0][1]=-VI(e,1,0),t[1][1]=VI(e,1,1),t[2][1]=-VI(e,1,2),t[3][1]=VI(e,1,3),t[0][3]=-VI(e,3,0),t[1][3]=VI(e,3,1),t[2][3]=-VI(e,3,2),t[3][3]=VI(e,3,3);for(var n=e[0][0]*t[0][0]+e[1][0]*t[0][1]+e[2][0]*t[0][2]+e[3][0]*t[0][3],r=0;r<t.length;r++)for(var i=0;i<t.length;i++)t[r][i]/=n;return t}(r),s=kl(FI(a,{width:i,height:n},e),[1,8]),l=[1,n,i,1];return xu(Kp.transform(_s(o,l),s,"bilinear","constant",0,[e.height,e.width]),[0,3])})),Su(o)),[2,{landmarks:c,auxiliaryLandmarks:h,worldLandmarks:p,segmentationMask:d}]}))}))},e.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return mI(this,void 0,void 0,(function(){var t,n,r,i,a,s,o,l,u,c,h,p,d;return gI(this,(function(f){switch(f.label){case 0:return t=e[0],n=e[1],r=e[2],i=e[3],a=this.enableSegmentation?e[4]:null,[4,n.data()];case 1:return(s=f.sent()[0])<.5?[2,null]:[4,ik(t,wk)];case 2:return[4,ZI(f.sent(),r,Sk)];case 3:return o=f.sent(),l=o.slice(0,33),u=o.slice(33,35),[4,ik(i,_k)];case 4:return c=f.sent(),h=c.slice(0,33),p=function(e,t,n){void 0===n&&(n=!0);for(var r=[],i=0;i<e.length;i++){var a=fI({},t[i]);n&&(a.score=e[i].score),r.push(a)}return r}(l,h,!0),d=this.enableSegmentation?function(e,t,n){return _u((function(){var n=xu(e,[0]),r=n.shape[2];if(1===r){var i=n;switch(t.activation){case"none":break;case"sigmoid":i=Ss(i);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported ("+t.activation+")")}return xu(i,[2])}throw new Error("Unsupported number of tensor channels "+r)}))}(a,Ik):null,[2,{landmarks:l,auxiliaryLandmarks:u,poseScore:s,worldLandmarks:p,segmentationMask:d}]}}))}))},e.prototype.poseLandmarksToRoi=function(e,t){return ak(BI(XI(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,xk)},e.prototype.poseLandmarkFiltering=function(e,t,n,r){var i,a,s;if(null!=this.timestamp&&this.enableSmoothing){var o=BI(XI(t),r,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});null==this.visibilitySmoothingFilterActual&&(this.visibilitySmoothingFilterActual=new dk(Tk)),i=this.visibilitySmoothingFilterActual.apply(e),null==this.visibilitySmoothingFilterAuxiliary&&(this.visibilitySmoothingFilterAuxiliary=new dk(Tk)),a=this.visibilitySmoothingFilterAuxiliary.apply(t),s=this.visibilitySmoothingFilterActual.apply(n),null==this.landmarksSmoothingFilterActual&&(this.landmarksSmoothingFilterActual=new pk(Ek)),i=this.landmarksSmoothingFilterActual.apply(i,this.timestamp,r,!0,o),null==this.landmarksSmoothingFilterAuxiliary&&(this.landmarksSmoothingFilterAuxiliary=new pk(Mk)),a=this.landmarksSmoothingFilterAuxiliary.apply(a,this.timestamp,r,!0,o),null==this.worldLandmarksSmoothingFilterActual&&(this.worldLandmarksSmoothingFilterActual=new pk(Ck)),s=this.worldLandmarksSmoothingFilterActual.apply(n,this.timestamp)}else i=e,a=t,s=n;return{actualLandmarksFiltered:i,auxiliaryLandmarksFiltered:a,actualWorldLandmarksFiltered:s}},e}();function Lk(e){return mI(this,void 0,void 0,(function(){var t,n,r,i,a,s;return gI(this,(function(o){switch(o.label){case 0:return t=function(e){var t=fI({},null==e?mk:e);if(null==t.enableSmoothing&&(t.enableSmoothing=mk.enableSmoothing),null==t.enableSegmentation&&(t.enableSegmentation=mk.enableSegmentation),null==t.smoothSegmentation&&(t.smoothSegmentation=mk.smoothSegmentation),null==t.modelType&&(t.modelType=mk.modelType),null==t.detectorModelUrl&&(t.detectorModelUrl=mk.detectorModelUrl),null==t.landmarkModelUrl)switch(t.modelType){case"lite":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;default:t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return t}(e),n="string"==typeof t.detectorModelUrl&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,r="string"==typeof t.landmarkModelUrl&&t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([hI(t.detectorModelUrl,{fromTFHub:n}),hI(t.landmarkModelUrl,{fromTFHub:r})])];case 1:return i=o.sent(),a=i[0],s=i[1],[2,new Rk(a,s,t.enableSmoothing,t.enableSegmentation,t.smoothSegmentation,t.modelType)]}}))}))}var Ok,Pk,Dk,Fk=function(){function e(e){!function(e){if(e.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but encountered "+e.maxTracks);if(e.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but encountered "+e.maxAge);if(void 0!==e.keypointTrackerParams){if(e.keypointTrackerParams.keypointConfidenceThreshold<0||e.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+e.keypointTrackerParams.keypointConfidenceThreshold);if(e.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but encountered "+e.keypointTrackerParams.minNumberOfKeypoints);for(var t=0,n=e.keypointTrackerParams.keypointFalloff;t<n.length;t++){var r=n[t];if(r<=0)throw new Error("Must specify each keypoint falloff parameterto be positive but encountered "+r)}}}(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return e.prototype.apply=function(e,t){this.filterOldTracks(t);var n=this.computeSimilarity(e);return this.assignTracks(e,n,t),this.updateTracks(t),e},e.prototype.getTracks=function(){return this.tracks.slice()},e.prototype.getTrackIDs=function(){return new Set(this.tracks.map((function(e){return e.id})))},e.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter((function(n){return e-n.lastTimestamp<=t.maxAge}))},e.prototype.assignTracks=function(e,t,n){for(var r=Array.from(Array(t[0].length).keys()),i=[],a=0,s=Array.from(Array(e.length).keys());a<s.length;a++){var o=s[a];if(0!==r.length){for(var l=-1,u=-1,c=0,h=r;c<h.length;c++){var p=h[c],d=t[o][p];d>=this.minSimilarity&&d>u&&(l=p,u=d)}if(l>=0){var f=this.tracks[l];f=Object.assign(f,this.createTrack(e[o],n,f.id)),e[o].id=f.id;var m=r.indexOf(l);r.splice(m,1)}else i.push(o)}else i.push(o)}for(var g=0,y=i;g<y.length;g++){o=y[g];var x=this.createTrack(e[o],n);this.tracks.push(x),e[o].id=x.id}},e.prototype.updateTracks=function(e){this.tracks.sort((function(e,t){return t.lastTimestamp-e.lastTimestamp})),this.tracks=this.tracks.slice(0,this.maxTracks)},e.prototype.createTrack=function(e,t,n){var r={id:n||this.nextTrackID(),lastTimestamp:t,keypoints:yI(e.keypoints).map((function(e){return fI({},e)}))};return void 0!==e.box&&(r.box=fI({},e.box)),r},e.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},e.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter((function(t){return!e.includes(t.id)}))},e.prototype.reset=function(){this.tracks=[]},e}(),$k=function(e){function t(t){return e.call(this,t)||this}return dI(t,e),t.prototype.computeSimilarity=function(e){var t=this;return 0===e.length||0===this.tracks.length?[[]]:e.map((function(e){return t.tracks.map((function(n){return t.iou(e,n)}))}))},t.prototype.iou=function(e,t){var n=Math.max(e.box.xMin,t.box.xMin),r=Math.max(e.box.yMin,t.box.yMin),i=Math.min(e.box.xMax,t.box.xMax),a=Math.min(e.box.yMax,t.box.yMax);if(n>=i||r>=a)return 0;var s=(i-n)*(a-r);return s/(e.box.width*e.box.height+t.box.width*t.box.height-s)},t}(Fk),Bk=function(e){function t(t){var n=e.call(this,t)||this;return n.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,n.keypointFalloff=t.keypointTrackerParams.keypointFalloff,n.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,n}return dI(t,e),t.prototype.computeSimilarity=function(e){if(0===e.length||0===this.tracks.length)return[[]];for(var t=[],n=0,r=e;n<r.length;n++){for(var i=r[n],a=[],s=0,o=this.tracks;s<o.length;s++){var l=o[s];a.push(this.oks(i,l))}t.push(a)}return t},t.prototype.oks=function(e,t){for(var n=this.area(t.keypoints)+1e-6,r=0,i=0,a=0;a<e.keypoints.length;++a){var s=e.keypoints[a],o=t.keypoints[a];if(!(s.score<this.keypointThreshold||o.score<this.keypointThreshold)){i+=1;var l=Math.pow(s.x-o.x,2)+Math.pow(s.y-o.y,2),u=2*this.keypointFalloff[a];r+=Math.exp(-1*l/(2*n*Math.pow(u,2)))}}return i<this.minNumKeyoints?0:r/i},t.prototype.area=function(e){var t=this,n=e.filter((function(e){return e.score>t.keypointThreshold})),r=Math.min.apply(Math,yI([1],n.map((function(e){return e.x})))),i=Math.max.apply(Math,yI([0],n.map((function(e){return e.x})))),a=Math.min.apply(Math,yI([1],n.map((function(e){return e.y}))));return(i-r)*(Math.max.apply(Math,yI([0],n.map((function(e){return e.y}))))-a)},t}(Fk);function zk(e){switch(e){case Pk.BlazePose:return vI.reduce((function(e,t,n){return e[t]=n,e}),{});case Pk.PoseNet:case Pk.MoveNet:return xI.reduce((function(e,t,n){return e[t]=n,e}),{});default:throw new Error("Model "+e+" is not supported.")}}(Dk=Ok||(Ok={})).Keypoint="keypoint",Dk.BoundingBox="boundingBox",function(e){e.MoveNet="MoveNet",e.BlazePose="BlazePose",e.PoseNet="PoseNet"}(Pk||(Pk={}));var Uk=Object.freeze({__proto__:null,getKeypointIndexBySide:function(e){switch(e){case Pk.BlazePose:return bI;case Pk.PoseNet:case Pk.MoveNet:return wI;default:throw new Error("Model "+e+" is not supported.")}},getAdjacentPairs:function(e){switch(e){case Pk.BlazePose:return SI;case Pk.PoseNet:case Pk.MoveNet:return _I;default:throw new Error("Model "+e+" is not supported.")}},getKeypointIndexByName:zk}),Vk=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],Wk={modelType:"SinglePose.Lightning",enableSmoothing:!0},Hk={},Gk={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},jk={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},qk={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function Xk(e,t){var n,r,i,a;return e?t.width>t.height?(n=1,r=t.height/t.width,i=0,a=(t.width/2-t.height/2)/t.width):(n=t.width/t.height,r=1,i=(t.height/2-t.width/2)/t.height,a=0):t.width>t.height?(n=t.width/t.height,r=1,i=(t.height/2-t.width/2)/t.height,a=0):(n=1,r=t.height/t.width,i=0,a=(t.width/2-t.height/2)/t.width),{yMin:i,xMin:a,yMax:i+n,xMax:a+r,height:n,width:r}}function Kk(e,t){var n={maxTracks:e.maxTracks,maxAge:e.maxAge,minSimilarity:e.minSimilarity};return null!=t.maxTracks&&(n.maxTracks=t.maxTracks),null!=t.maxAge&&(n.maxAge=t.maxAge),null!=t.minSimilarity&&(n.minSimilarity=t.minSimilarity),n}var Yk=function(){function e(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=zk(Pk.MoveNet),"SinglePose.Lightning"===t.modelType?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):"SinglePose.Thunder"===t.modelType&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel="MultiPose.Lightning"===t.modelType,this.multiPoseModel||(this.keypointFilter=new uk(Gk),this.cropRegionFilterYMin=new ok(.9),this.cropRegionFilterXMin=new ok(.9),this.cropRegionFilterYMax=new ok(.9),this.cropRegionFilterXMax=new ok(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===Ok.Keypoint?this.tracker=new Bk(t.trackerConfig):t.trackerType===Ok.BoundingBox&&(this.tracker=new $k(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return e.prototype.runSinglePersonPoseModel=function(e){return mI(this,void 0,void 0,(function(){var t,n,r,i,a;return gI(this,(function(s){switch(s.label){case 0:if(4!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||1!==t.shape[1]||17!==t.shape[2]||3!==t.shape[3])throw t.dispose(),new Error("Unexpected output shape from model: ["+t.shape+"]");return"webgpu"===Eu()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=s.sent(),s.label=3;case 3:for(t.dispose(),r={keypoints:[],score:0},i=0,a=0;a<17;++a)r.keypoints[a]={y:n[3*a],x:n[3*a+1],score:n[3*a+2]},r.keypoints[a].score>.2&&(++i,r.score+=r.keypoints[a].score);return i>0&&(r.score/=i),[2,r]}}))}))},e.prototype.runMultiPersonPoseModel=function(e){return mI(this,void 0,void 0,(function(){var t,n,r,i,a,s,o,l;return gI(this,(function(u){switch(u.label){case 0:if(3!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||56!==t.shape[2])throw t.dispose(),new Error("Unexpected output shape from model: ["+t.shape+"]");return"webgpu"===Eu()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=u.sent(),u.label=3;case 3:for(t.dispose(),r=[],i=n.length/56,a=0;a<i;++a)for(r[a]={keypoints:[]},s=56*a+51,r[a].box={yMin:n[s],xMin:n[s+1],yMax:n[s+2],xMax:n[s+3],width:n[s+3]-n[s+1],height:n[s+2]-n[s]},o=56*a+55,r[a].score=n[o],r[a].keypoints=[],l=0;l<17;++l)r[a].keypoints[l]={y:n[56*a+3*l],x:n[56*a+3*l+1],score:n[56*a+3*l+2]};return[2,r]}}))}))},e.prototype.estimatePoses=function(e,t,n){return void 0===t&&(t=Hk),mI(this,void 0,void 0,(function(){var r,i,a,s,o,l;return gI(this,(function(u){switch(u.label){case 0:return t=function(e){return null==e?Hk:fI({},e)}(t),null==e?(this.reset(),[2,[]]):(null==n?qI(e)&&(n=1e6*e.currentTime):n*=1e3,r=DI(e),i=OI(r),a=Cu(r,0),e instanceof Vt||r.dispose(),s=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(a,i,n)]);case 1:return s=u.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(a,i,n)];case 3:s=u.sent(),u.label=4;case 4:for(o=0;o<s.length;++o)for(l=0;l<s[o].keypoints.length;++l)s[o].keypoints[l].name=xI[l],s[o].keypoints[l].y*=i.height,s[o].keypoints[l].x*=i.width;return[2,s]}}))}))},e.prototype.estimateSinglePose=function(e,t,n){return mI(this,void 0,void 0,(function(){var r,i,a,s,o=this;return gI(this,(function(l){switch(l.label){case 0:return this.cropRegion||(this.cropRegion=Xk(null==this.cropRegion,t)),r=_u((function(){var t=kl([[o.cropRegion.yMin,o.cropRegion.xMin,o.cropRegion.yMax,o.cropRegion.xMax]]),n=tl([1],"int32"),r=[o.modelInputResolution.height,o.modelInputResolution.width];return Ii(Kp.cropAndResize(e,t,n,r,"bilinear",0),"int32")})),e.dispose(),[4,this.runSinglePersonPoseModel(r)];case 1:if(i=l.sent(),r.dispose(),i.score<this.minPoseScore)return this.reset(),[2,[]];for(a=0;a<i.keypoints.length;++a)i.keypoints[a].y=this.cropRegion.yMin+i.keypoints[a].y*this.cropRegion.height,i.keypoints[a].x=this.cropRegion.xMin+i.keypoints[a].x*this.cropRegion.width;return null!=n&&this.enableSmoothing&&(i.keypoints=this.keypointFilter.apply(i.keypoints,n,1)),s=function(e,t,n,r){for(var i={},a=0,s=xI;a<s.length;a++){var o=s[a];i[o]=[t[n[o]].y*r.height,t[n[o]].x*r.width]}if(function(e,t){return(e[t.left_hip].score>.2||e[t.right_hip].score>.2)&&(e[t.left_shoulder].score>.2||e[t.right_shoulder].score>.2)}(t,n)){var l=(i.left_hip[0]+i.right_hip[0])/2,u=(i.left_hip[1]+i.right_hip[1])/2,c=function(e,t,n,r,i){for(var a=["left_shoulder","right_shoulder","left_hip","right_hip"],s=0,o=0,l=0;l<a.length;l++)(d=Math.abs(r-n[a[l]][0]))>s&&(s=d),(f=Math.abs(i-n[a[l]][1]))>o&&(o=f);for(var u=0,c=0,h=0,p=Object.keys(n);h<p.length;h++){var d,f,m=p[h];e[t[m]].score<.2||((d=Math.abs(r-n[m][0]))>u&&(u=d),(f=Math.abs(i-n[m][1]))>c&&(c=f))}return[s,o,u,c]}(t,n,i,l,u),h=c[0],p=c[1],d=c[2],f=c[3],m=Math.max(1.9*p,1.9*h,1.2*d,1.2*f),g=[l-(m=Math.min(m,Math.max(u,r.width-u,l,r.height-l))),u-m];if(m>Math.max(r.width,r.height)/2)return Xk(null==e,r);var y=2*m;return{yMin:g[0]/r.height,xMin:g[1]/r.width,yMax:(g[0]+y)/r.height,xMax:(g[1]+y)/r.width,height:(g[0]+y)/r.height-g[0]/r.height,width:(g[1]+y)/r.width-g[1]/r.width}}return Xk(null==e,r)}(this.cropRegion,i.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(s),[2,[i]]}}))}))},e.prototype.estimateMultiplePoses=function(e,t,n){return mI(this,void 0,void 0,(function(){var r,i,a,s,o,l,u,c,h,p,d,f=this;return gI(this,(function(m){switch(m.label){case 0:return t.width>t.height?(i=this.multiPoseMaxDimension,a=Math.round(this.multiPoseMaxDimension*t.height/t.width),r=Kp.resizeBilinear(e,[a,i]),o=i,l=32*Math.ceil(a/32),s=Rh(r,[[0,0],[0,l-a],[0,0],[0,0]])):(i=Math.round(this.multiPoseMaxDimension*t.width/t.height),a=this.multiPoseMaxDimension,r=Kp.resizeBilinear(e,[a,i]),o=32*Math.ceil(i/32),l=a,s=Rh(r,[[0,0],[0,0],[0,o-i],[0,0]])),r.dispose(),e.dispose(),u=Ii(s,"int32"),s.dispose(),[4,this.runMultiPersonPoseModel(u)];case 1:for(c=m.sent(),u.dispose(),c=c.filter((function(e){return e.score>=f.minPoseScore})),p=0;p<c.length;++p)for(h=0;h<c[p].keypoints.length;++h)c[p].keypoints[h].y*=l/a,c[p].keypoints[h].x*=o/i;if(this.enableTracking&&(this.tracker.apply(c,n),this.enableSmoothing)){for(p=0;p<c.length;++p)this.keypointFilterMap.has(c[p].id)||this.keypointFilterMap.set(c[p].id,new uk(Gk)),c[p].keypoints=this.keypointFilterMap.get(c[p].id).apply(c[p].keypoints,n,1);d=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach((function(e,t){d.has(t)||f.keypointFilterMap.delete(t)}))}return[2,c]}}))}))},e.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),n=this.cropRegionFilterXMin.apply(e.xMin),r=this.cropRegionFilterYMax.apply(e.yMax),i=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:n,yMax:r,xMax:i,height:r-t,width:i-n}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},e.prototype.dispose=function(){this.moveNetModel.dispose()},e.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},e.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},e}();function Zk(e){return void 0===e&&(e=Wk),mI(this,void 0,void 0,(function(){var t,n,r,i;return gI(this,(function(a){switch(a.label){case 0:return t=function(e){var t,n=null==e?Wk:fI({},e);if(null==n.modelType)n.modelType="SinglePose.Lightning";else if(Vk.indexOf(n.modelType)<0)throw new Error("Invalid architecture "+n.modelType+". Should be one of "+Vk);if(null==n.enableSmoothing&&(n.enableSmoothing=!0),null!=n.minPoseScore&&(n.minPoseScore<0||n.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(null!=n.multiPoseMaxDimension&&(n.multiPoseMaxDimension%32!=0||n.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if("MultiPose.Lightning"===n.modelType&&null==n.enableTracking&&(n.enableTracking=!0),"MultiPose.Lightning"===n.modelType&&!0===n.enableTracking)if(null==n.trackerType&&(n.trackerType=Ok.BoundingBox),n.trackerType===Ok.Keypoint)null!=n.trackerConfig?n.trackerConfig=function(e){var t=Kk(jk,e);return t.keypointTrackerParams=fI({},jk.keypointTrackerParams),null!=e.keypointTrackerParams&&(null!=e.keypointTrackerParams.keypointConfidenceThreshold&&(t.keypointTrackerParams.keypointConfidenceThreshold=e.keypointTrackerParams.keypointConfidenceThreshold),null!=e.keypointTrackerParams.keypointFalloff&&(t.keypointTrackerParams.keypointFalloff=e.keypointTrackerParams.keypointFalloff),null!=e.keypointTrackerParams.minNumberOfKeypoints&&(t.keypointTrackerParams.minNumberOfKeypoints=e.keypointTrackerParams.minNumberOfKeypoints)),t}(n.trackerConfig):n.trackerConfig=jk;else{if(n.trackerType!==Ok.BoundingBox)throw new Error("Tracker type not supported by MoveNet");null!=n.trackerConfig?n.trackerConfig=(t=n.trackerConfig,Kk(qk,t)):n.trackerConfig=qk}return n}(e),r=!0,t.modelUrl?(r="string"==typeof t.modelUrl&&t.modelUrl.indexOf("https://tfhub.dev")>-1,[4,hI(t.modelUrl,{fromTFHub:r})]):[3,2];case 1:return n=a.sent(),[3,4];case 2:return i=void 0,"SinglePose.Lightning"===t.modelType?i="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":"SinglePose.Thunder"===t.modelType?i="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":"MultiPose.Lightning"===t.modelType&&(i="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,hI(i,{fromTFHub:r})];case 3:n=a.sent(),a.label=4;case 4:return"webgl"===Eu()&&se().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new Yk(n,t)]}}))}))}var Jk={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},Qk=["MobileNetV1","ResNet50"],eA={MobileNetV1:[8,16],ResNet50:[16]},tA=[8,16,32],nA={MobileNetV1:[.5,.75,1],ResNet50:[1]},rA=[1,2,4],iA={maxPoses:1,flipHorizontal:!1},aA={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},sA=[-123.15,-115.9,-103.06];function oA(e){return Math.floor(e/2)}var lA=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(oA(e),e);)this.exchange(e,oA(e)),e=oA(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function uA(e,t,n,r,i,a){for(var s=a.shape,o=s[0],l=s[1],u=!0,c=Math.max(n-i,0),h=Math.min(n+i+1,o),p=c;p<h;++p){for(var d=Math.max(r-i,0),f=Math.min(r+i+1,l),m=d;m<f;++m)if(a.get(p,m,e)>t){u=!1;break}if(!u)break}return u}function cA(e){return mI(this,void 0,void 0,(function(){return gI(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}function hA(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+17)}}function pA(e,t,n){var r=hA(e.heatmapY,e.heatmapX,e.id,n),i=r.y,a=r.x;return{x:e.heatmapX*t+a,y:e.heatmapY*t+i}}function dA(e,t,n,r){var i=n.x,a=n.y;return e.some((function(e){var n,s,o,l,u=e.keypoints;return n=a,s=i,(o=u[r].y-n)*o+(l=u[r].x-s)*l<=t}))}var fA=xI.reduce((function(e,t,n){return e[t]=n,e}),{}),mA=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map((function(e){var t=e[0],n=e[1];return[fA[t],fA[n]]})),gA=mA.map((function(e){return e[1]})),yA=mA.map((function(e){return e[0]}));function xA(e,t,n){return e<t?t:e>n?n:e}function vA(e,t,n,r){return{y:xA(Math.round(e.y/t),0,n-1),x:xA(Math.round(e.x/t),0,r-1)}}function bA(e,t){return{x:e.x+t.x,y:e.y+t.y}}function wA(e,t,n,r,i,a,s,o){void 0===o&&(o=2);for(var l=r.shape,u=l[0],c=l[1],h={y:t.y,x:t.x},p=bA(h,function(e,t,n){var r=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,r+e)}}(e,vA(h,a,u,c),s)),d=0;d<o;d++){var f=vA(p,a,u,c),m=hA(f.y,f.x,n,i);p=bA({x:f.x*a,y:f.y*a},{x:m.x,y:m.y})}var g=vA(p,a,u,c),y=r.get(g.y,g.x,n);return{y:p.y,x:p.x,name:xI[n],score:y}}function _A(e,t,n,r,i,a){var s=t.shape[2],o=gA.length,l=new Array(s),u=e.part,c=e.score,h=pA(u,r,n);l[u.id]={score:c,name:xI[u.id],y:h.y,x:h.x};for(var p=o-1;p>=0;--p){var d=gA[p],f=yA[p];l[d]&&!l[f]&&(l[f]=wA(p,l[d],f,t,n,r,a))}for(p=0;p<o;++p)d=yA[p],f=gA[p],l[d]&&!l[f]&&(l[f]=wA(p,l[d],f,t,n,r,i));return l}function SA(e,t,n){return n.reduce((function(n,r,i){var a=r.y,s=r.x,o=r.score;return dA(e,t,{y:a,x:s},i)||(n+=o),n}),0)/n.length}function TA(e,t,n,r,i,a,s,o){return void 0===s&&(s=.5),void 0===o&&(o=20),mI(this,void 0,void 0,(function(){var l,u,c,h,p,d,f,m,g,y,x,v;return gI(this,(function(b){switch(b.label){case 0:return[4,cA([e,t,n,r])];case 1:for(l=b.sent(),u=l[0],c=l[1],h=l[2],p=l[3],d=[],f=function(e,t,n){for(var r=n.shape,i=r[0],a=r[1],s=r[2],o=new lA(i*a*s,(function(e){return e.score})),l=0;l<i;++l)for(var u=0;u<a;++u)for(var c=0;c<s;++c){var h=n.get(l,u,c);h<e||uA(c,h,l,u,1,n)&&o.enqueue({score:h,part:{heatmapY:l,heatmapX:u,id:c}})}return o}(s,0,u),m=o*o;d.length<a&&!f.empty();)g=f.dequeue(),y=pA(g.part,i,c),dA(d,m,y,g.part.id)||(x=_A(g,u,c,i,h,p),v=SA(d,m,x),d.push({keypoints:x,score:v}));return[2,d]}}))}))}function EA(e,t,n){return _u((function(){var r=function(e,t){for(var n=[],r=0;r<xI.length;r++){var i=MA(e.get(r,0).valueOf(),e.get(r,1).valueOf(),r,t),a=i.x,s=i.y;n.push(s),n.push(a)}return kl(n,[xI.length,2])}(e,n);return hl(Ii(xs(e.toTensor(),ol(t,"int32")),"float32"),r)}))}function MA(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+xI.length)}}function CA(e,t,n){return mI(this,void 0,void 0,(function(){var r,i,a,s,o,l,u,c,h,p;return gI(this,(function(d){switch(d.label){case 0:return r=0,i=function(e){var t=e.shape,n=t[0],r=t[1],i=t[2];return _u((function(){var t,a,s=_s(e,[n*r,i]),o=pc(s,0),l=Cu(Yl(o,ol(r,"int32")),1),u=Cu((t=o,a=r,_u((function(){var e=Yl(t,ol(a,"int32"));return Zl(t,xs(e,ol(a,"int32")))}))),1);return Yo([l,u],1)}))}(e),[4,Promise.all([e.buffer(),t.buffer(),i.buffer()])];case 1:return a=d.sent(),s=a[0],o=a[1],l=a[2],[4,(u=EA(l,n,o)).buffer()];case 2:return c=d.sent(),h=Array.from(function(e,t){for(var n=t.shape[0],r=new Float32Array(n),i=0;i<n;i++){var a=t.get(i,0),s=t.get(i,1);r[i]=e.get(a,s,i)}return r}(s,l)),p=h.map((function(e,t){return r+=e,{y:c.get(t,0),x:c.get(t,1),score:e,name:xI[t]}})),i.dispose(),u.dispose(),[2,{keypoints:p,score:r/p.length}]}}))}))}function IA(e,t){return(e-1)%t==0}function kA(e,t){return function(e,t){return(e-1)%t==0}(e,t)?e:Math.floor(e/t)*t+1}var AA=function(){function e(e,t){this.posenetModel=e;var n=this.posenetModel.inputs[0].shape;De.assert(-1===n[1]&&-1===n[2],(function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"}));var r,i,a=(r=t.inputResolution,i=t.outputStride,{height:kA(r.height,i),width:kA(r.width,i)});!function(e){De.assert(tA.indexOf(e)>=0,(function(){return"outputStride of "+e+" is invalid. It must be either 8 or 16."}))}(t.outputStride),function(e,t){De.assert(IA(e.height,t),(function(){return"height of "+e.height+" is invalid for output stride "+t+"."})),De.assert(IA(e.width,t),(function(){return"width of "+e.width+" is invalid for output stride "+t+"."}))}(a,t.outputStride),this.inputResolution=a,this.outputStride=t.outputStride,this.architecture=t.architecture}return e.prototype.estimatePoses=function(e,t){return void 0===t&&(t=iA),mI(this,void 0,void 0,(function(){var n,r,i,a,s,o,l,u,c,h,p,d,f,m,g;return gI(this,(function(y){switch(y.label){case 0:return n=function(e){var t=e;if(null==t.maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses "+t.maxPoses+". Should be > 0.");if(t.maxPoses>1){if((t=fI(fI({},aA),t)).scoreThreshold<0||t.scoreThreshold>1)throw new Error("Invalid scoreThreshold "+t.scoreThreshold+". Should be in range [0.0, 1.0]");if(t.nmsRadius<=0)throw new Error("Invalid nmsRadius "+t.nmsRadius+".")}return t}(t),null==e?[2,[]]:(this.maxPoses=n.maxPoses,r=GI(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),i=r.imageTensor,a=r.padding,s="ResNet50"===this.architecture?hl(i,sA):HI(i,[-1,1]),o=this.posenetModel.predict(s),"ResNet50"===this.architecture?(l=xu(o[2],[0]),u=xu(o[3],[0]),c=xu(o[0],[0]),h=xu(o[1],[0])):(l=xu(o[0],[0]),u=xu(o[1],[0]),c=xu(o[2],[0]),h=xu(o[3],[0])),p=Ss(u),1!==this.maxPoses?[3,2]:[4,CA(p,l,this.outputStride)]);case 1:return f=y.sent(),d=[f],[3,4];case 2:return[4,TA(p,l,c,h,this.outputStride,this.maxPoses,n.scoreThreshold,n.nmsRadius)];case 3:d=y.sent(),y.label=4;case 4:return m=OI(e),g=function(e,t,n,r){var i=t.height,a=t.width,s=i/(n.height*(1-r.top-r.bottom)),o=a/(n.width*(1-r.left-r.right)),l=-r.top*n.height,u=-r.left*n.width;if(1===o&&1===s&&0===l&&0===u)return e;for(var c=0,h=e;c<h.length;c++)for(var p=0,d=h[c].keypoints;p<d.length;p++){var f=d[p];f.x=(f.x+u)*o,f.y=(f.y+l)*s}return e}(d,m,this.inputResolution,a),n.flipHorizontal&&(g=function(e,t){for(var n=0,r=e;n<r.length;n++)for(var i=0,a=r[n].keypoints;i<a.length;i++){var s=a[i];s.x=t.width-1-s.x}return e}(g,m)),i.dispose(),s.dispose(),Su(o),l.dispose(),u.dispose(),c.dispose(),h.dispose(),p.dispose(),[2,g]}}))}))},e.prototype.dispose=function(){this.posenetModel.dispose()},e.prototype.reset=function(){},e}();function NA(e){return void 0===e&&(e=Jk),mI(this,void 0,void 0,(function(){var t,n,r,i,a;return gI(this,(function(s){switch(s.label){case 0:return"ResNet50"!==(t=function(e){var t=e||Jk;if(null==t.architecture&&(t.architecture="MobileNetV1"),Qk.indexOf(t.architecture)<0)throw new Error("Invalid architecture "+t.architecture+". Should be one of "+Qk);if(null==t.inputResolution&&(t.inputResolution={height:257,width:257}),null==t.outputStride&&(t.outputStride=16),eA[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride "+t.outputStride+". Should be one of "+eA[t.architecture]+" for architecture "+t.architecture+".");if(null==t.multiplier&&(t.multiplier=1),nA[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier "+t.multiplier+". Should be one of "+nA[t.architecture]+" for architecture "+t.architecture+".");if(null==t.quantBytes&&(t.quantBytes=4),rA.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes "+t.quantBytes+". Should be one of "+rA+" for architecture "+t.architecture+".");if("MobileNetV1"===t.architecture&&32===t.outputStride&&1!==t.multiplier)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return t}(e)).architecture?[3,2]:(o=t.outputStride,l=t.quantBytes,u="model-stride"+o+".json",n=4===l?"https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/float/"+u:"https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/quant"+l+"/"+u,[4,hI(t.modelUrl||n)]);case 1:return r=s.sent(),[2,new AA(r,t)];case 2:return i=function(e,t,n){var r={1:"100",.75:"075",.5:"050"},i="model-stride"+e+".json";return 4===n?"https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/float/"+r[t]+"/"+i:"https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/quant"+n+"/"+r[t]+"/"+i}(t.outputStride,t.multiplier,t.quantBytes),[4,hI(t.modelUrl||i)];case 3:return a=s.sent(),[2,new AA(a,t)]}var o,l,u}))}))}function RA(e,t){return mI(this,void 0,void 0,(function(){var n,r;return gI(this,(function(i){switch(e){case Pk.PoseNet:return[2,NA(t)];case Pk.BlazePose:if(r=void 0,null!=(n=t)){if("tfjs"===n.runtime)return[2,Lk(t)];if("mediapipe"===n.runtime)return[2,LI(t)];r=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+r);case Pk.MoveNet:return[2,Zk(t)];default:throw new Error(e+" is not a supported model name.")}}))}))}var LA={};Object.defineProperty(LA,"__esModule",{value:!0});var OA={},PA=OA&&OA.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,a=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)s.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return s},DA=OA&&OA.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(PA(arguments[t]));return e},FA=OA&&OA.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(OA,"__esModule",{value:!0});var $A={},BA=$A&&$A.__assign||function(){return BA=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},BA.apply(this,arguments)},zA=$A&&$A.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,a=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)s.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return s},UA=$A&&$A.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty($A,"__esModule",{value:!0});const VA={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},WA={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3};function HA(){}Object.assign(HA.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)},removeEventListener:function(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}},dispatchEvent:function(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let t=0,r=n.length;t<r;t++)n[t].call(this,e)}}});const GA=[];for(let e=0;e<256;e++)GA[e]=(e<16?"0":"")+e.toString(16);let jA=1234567;const qA={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(GA[255&e]+GA[e>>8&255]+GA[e>>16&255]+GA[e>>24&255]+"-"+GA[255&t]+GA[t>>8&255]+"-"+GA[t>>16&15|64]+GA[t>>24&255]+"-"+GA[63&n|128]+GA[n>>8&255]+"-"+GA[n>>16&255]+GA[n>>24&255]+GA[255&r]+GA[r>>8&255]+GA[r>>16&255]+GA[r>>24&255]).toUpperCase()},clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},lerp:function(e,t,n){return(1-n)*e+n*t},damp:function(e,t,n,r){return qA.lerp(e,t,1-Math.exp(-n*r))},pingpong:function(e,t=1){return t-Math.abs(qA.euclideanModulo(e,2*t)-t)},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&(jA=e%2147483647),jA=16807*jA%2147483647,(jA-1)/2147483646},degToRad:function(e){return e*qA.DEG2RAD},radToDeg:function(e){return e*qA.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,n,r,i){const a=Math.cos,s=Math.sin,o=a(n/2),l=s(n/2),u=a((t+r)/2),c=s((t+r)/2),h=a((t-r)/2),p=s((t-r)/2),d=a((r-t)/2),f=s((r-t)/2);switch(i){case"XYX":e.set(o*c,l*h,l*p,o*u);break;case"YZY":e.set(l*p,o*c,l*h,o*u);break;case"ZXZ":e.set(l*h,l*p,o*c,o*u);break;case"XZX":e.set(o*c,l*f,l*d,o*u);break;case"YXY":e.set(l*d,o*c,l*f,o*u);break;case"ZYZ":e.set(l*f,l*d,o*c,o*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}};class XA{constructor(e=0,t=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*n-a*r+e.x,this.y=i*r+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class KA{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,i,a,s,o,l){const u=this.elements;return u[0]=e,u[1]=r,u[2]=s,u[3]=t,u[4]=i,u[5]=o,u[6]=n,u[7]=a,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return(new this.constructor).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,i=this.elements,a=n[0],s=n[3],o=n[6],l=n[1],u=n[4],c=n[7],h=n[2],p=n[5],d=n[8],f=r[0],m=r[3],g=r[6],y=r[1],x=r[4],v=r[7],b=r[2],w=r[5],_=r[8];return i[0]=a*f+s*y+o*b,i[3]=a*m+s*x+o*w,i[6]=a*g+s*v+o*_,i[1]=l*f+u*y+c*b,i[4]=l*m+u*x+c*w,i[7]=l*g+u*v+c*_,i[2]=h*f+p*y+d*b,i[5]=h*m+p*x+d*w,i[8]=h*g+p*v+d*_,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],u=e[8];return t*a*u-t*s*l-n*i*u+n*s*o+r*i*l-r*a*o}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],u=e[8],c=u*a-s*l,h=s*o-u*i,p=l*i-a*o,d=t*c+n*h+r*p;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);const f=1/d;return e[0]=c*f,e[1]=(r*l-u*n)*f,e[2]=(s*n-r*a)*f,e[3]=h*f,e[4]=(u*t-r*o)*f,e[5]=(r*i-s*t)*f,e[6]=p*f,e[7]=(n*o-l*t)*f,e[8]=(a*t-n*i)*f,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).copy(this).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,i,a,s){const o=Math.cos(i),l=Math.sin(i);return this.set(n*o,n*l,-n*(o*a+l*s)+a+e,-r*l,r*o,-r*(-l*a+o*s)+s+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),r=this.elements,i=r[0],a=r[3],s=r[6],o=r[1],l=r[4],u=r[7];return r[0]=t*i+n*o,r[3]=t*a+n*l,r[6]=t*s+n*u,r[1]=-n*i+t*o,r[4]=-n*a+t*l,r[7]=-n*s+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}}let YA;const ZA={getDataURL:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===YA&&(YA=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),YA.width=e.width,YA.height=e.height;const n=YA.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=YA}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}};let JA=0;function QA(e=QA.DEFAULT_IMAGE,t=QA.DEFAULT_MAPPING,n=1001,r=1001,i=1006,a=1008,s=1023,o=1009,l=1,u=3e3){Object.defineProperty(this,"id",{value:JA++}),this.uuid=qA.generateUUID(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new XA(0,0),this.repeat=new XA(1,1),this.center=new XA(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new KA,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.version=0,this.onUpdate=null}function eN(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?ZA.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}QA.DEFAULT_IMAGE=void 0,QA.DEFAULT_MAPPING=300,QA.prototype=Object.assign(Object.create(HA.prototype),{constructor:QA,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const r=this.image;if(void 0===r.uuid&&(r.uuid=qA.generateUUID()),!t&&void 0===e.images[r.uuid]){let t;if(Array.isArray(r)){t=[];for(let e=0,n=r.length;e<n;e++)r[e].isDataTexture?t.push(eN(r[e].image)):t.push(eN(r[e]))}else t=eN(r);e.images[r.uuid]={uuid:r.uuid,url:t}}n.image=r.uuid}return t||(e.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}}),Object.defineProperty(QA.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}});class tN{constructor(e=0,t=0,n=0,r=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*r+a[12]*i,this.y=a[1]*t+a[5]*n+a[9]*r+a[13]*i,this.z=a[2]*t+a[6]*n+a[10]*r+a[14]*i,this.w=a[3]*t+a[7]*n+a[11]*r+a[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,i;const a=.01,s=.1,o=e.elements,l=o[0],u=o[4],c=o[8],h=o[1],p=o[5],d=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(u-h)<a&&Math.abs(c-f)<a&&Math.abs(d-m)<a){if(Math.abs(u+h)<s&&Math.abs(c+f)<s&&Math.abs(d+m)<s&&Math.abs(l+p+g-3)<s)return this.set(1,0,0,0),this;t=Math.PI;const e=(l+1)/2,o=(p+1)/2,y=(g+1)/2,x=(u+h)/4,v=(c+f)/4,b=(d+m)/4;return e>o&&e>y?e<a?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(e),r=x/n,i=v/n):o>y?o<a?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(o),n=x/r,i=b/r):y<a?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(y),n=v/i,r=b/i),this.set(n,r,i,t),this}let y=Math.sqrt((m-d)*(m-d)+(c-f)*(c-f)+(h-u)*(h-u));return Math.abs(y)<.001&&(y=1),this.x=(m-d)/y,this.y=(c-f)/y,this.z=(h-u)/y,this.w=Math.acos((l+p+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}class nN extends HA{constructor(e,t,n){super(),Object.defineProperty(this,"isWebGLRenderTarget",{value:!0}),this.width=e,this.height=t,this.scissor=new tN(0,0,e,t),this.scissorTest=!1,this.viewport=new tN(0,0,e,t),n=n||{},this.texture=new QA(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:1006,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setSize(e,t){this.width===e&&this.height===t||(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}class rN{constructor(e=0,t=0,n=0,r=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=e,this._y=t,this._z=n,this._w=r}static slerp(e,t,n,r){return n.copy(e).slerp(t,r)}static slerpFlat(e,t,n,r,i,a,s){let o=n[r+0],l=n[r+1],u=n[r+2],c=n[r+3];const h=i[a+0],p=i[a+1],d=i[a+2],f=i[a+3];if(c!==f||o!==h||l!==p||u!==d){let e=1-s;const t=o*h+l*p+u*d+c*f,n=t>=0?1:-1,r=1-t*t;if(r>Number.EPSILON){const i=Math.sqrt(r),a=Math.atan2(i,t*n);e=Math.sin(e*a)/i,s=Math.sin(s*a)/i}const i=s*n;if(o=o*e+h*i,l=l*e+p*i,u=u*e+d*i,c=c*e+f*i,e===1-s){const e=1/Math.sqrt(o*o+l*l+u*u+c*c);o*=e,l*=e,u*=e,c*=e}}e[t]=o,e[t+1]=l,e[t+2]=u,e[t+3]=c}static multiplyQuaternionsFlat(e,t,n,r,i,a){const s=n[r],o=n[r+1],l=n[r+2],u=n[r+3],c=i[a],h=i[a+1],p=i[a+2],d=i[a+3];return e[t]=s*d+u*c+o*p-l*h,e[t+1]=o*d+u*h+l*c-s*p,e[t+2]=l*d+u*p+s*h-o*c,e[t+3]=u*d-s*c-o*h-l*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,r=e._y,i=e._z,a=e._order,s=Math.cos,o=Math.sin,l=s(n/2),u=s(r/2),c=s(i/2),h=o(n/2),p=o(r/2),d=o(i/2);switch(a){case"XYZ":this._x=h*u*c+l*p*d,this._y=l*p*c-h*u*d,this._z=l*u*d+h*p*c,this._w=l*u*c-h*p*d;break;case"YXZ":this._x=h*u*c+l*p*d,this._y=l*p*c-h*u*d,this._z=l*u*d-h*p*c,this._w=l*u*c+h*p*d;break;case"ZXY":this._x=h*u*c-l*p*d,this._y=l*p*c+h*u*d,this._z=l*u*d+h*p*c,this._w=l*u*c-h*p*d;break;case"ZYX":this._x=h*u*c-l*p*d,this._y=l*p*c+h*u*d,this._z=l*u*d-h*p*c,this._w=l*u*c+h*p*d;break;case"YZX":this._x=h*u*c+l*p*d,this._y=l*p*c+h*u*d,this._z=l*u*d-h*p*c,this._w=l*u*c-h*p*d;break;case"XZY":this._x=h*u*c-l*p*d,this._y=l*p*c-h*u*d,this._z=l*u*d+h*p*c,this._w=l*u*c+h*p*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],i=t[8],a=t[1],s=t[5],o=t[9],l=t[2],u=t[6],c=t[10],h=n+s+c;if(h>0){const e=.5/Math.sqrt(h+1);this._w=.25/e,this._x=(u-o)*e,this._y=(i-l)*e,this._z=(a-r)*e}else if(n>s&&n>c){const e=2*Math.sqrt(1+n-s-c);this._w=(u-o)/e,this._x=.25*e,this._y=(r+a)/e,this._z=(i+l)/e}else if(s>c){const e=2*Math.sqrt(1+s-n-c);this._w=(i-l)/e,this._x=(r+a)/e,this._y=.25*e,this._z=(o+u)/e}else{const e=2*Math.sqrt(1+c-n-s);this._w=(a-r)/e,this._x=(i+l)/e,this._y=(o+u)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<1e-6?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(qA.clamp(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,i=e._z,a=e._w,s=t._x,o=t._y,l=t._z,u=t._w;return this._x=n*u+a*s+r*l-i*o,this._y=r*u+a*o+i*s-n*l,this._z=i*u+a*l+n*o-r*s,this._w=a*u-n*s-r*o-i*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,r=this._y,i=this._z,a=this._w;let s=a*e._w+n*e._x+r*e._y+i*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=a,this._x=n,this._y=r,this._z=i,this;const o=1-s*s;if(o<=Number.EPSILON){const e=1-t;return this._w=e*a+t*this._w,this._x=e*n+t*this._x,this._y=e*r+t*this._y,this._z=e*i+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),u=Math.atan2(l,s),c=Math.sin((1-t)*u)/l,h=Math.sin(t*u)/l;return this._w=a*c+this._w*h,this._x=n*c+this._x*h,this._y=r*c+this._y*h,this._z=i*c+this._z*h,this._onChangeCallback(),this}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}class iN{constructor(e=0,t=0,n=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(sN.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(sN.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,i=e.elements,a=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*a,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*a,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,i=e.x,a=e.y,s=e.z,o=e.w,l=o*t+a*r-s*n,u=o*n+s*t-i*r,c=o*r+i*n-a*t,h=-i*t-a*n-s*r;return this.x=l*o+h*-i+u*-s-c*-a,this.y=u*o+h*-a+c*-i-l*-s,this.z=c*o+h*-s+l*-a-u*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r,this.y=i[1]*t+i[5]*n+i[9]*r,this.z=i[2]*t+i[6]*n+i[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,i=e.z,a=t.x,s=t.y,o=t.z;return this.x=r*o-i*s,this.y=i*a-n*o,this.z=n*s-r*a,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return aN.copy(this).projectOnVector(e),this.sub(aN)}reflect(e){return this.sub(aN.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(qA.clamp(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const aN=new iN,sN=new rN;class oN{constructor(e,t){Object.defineProperty(this,"isBox3",{value:!0}),this.min=void 0!==e?e:new iN(1/0,1/0,1/0),this.max=void 0!==t?t:new iN(-1/0,-1/0,-1/0)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,s=-1/0;for(let o=0,l=e.length;o<l;o+=3){const l=e[o],u=e[o+1],c=e[o+2];l<t&&(t=l),u<n&&(n=u),c<r&&(r=c),l>i&&(i=l),u>a&&(a=u),c>s&&(s=c)}return this.min.set(t,n,r),this.max.set(i,a,s),this}setFromBufferAttribute(e){let t=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,s=-1/0;for(let o=0,l=e.count;o<l;o++){const l=e.getX(o),u=e.getY(o),c=e.getZ(o);l<t&&(t=l),u<n&&(n=u),c<r&&(r=c),l>i&&(i=l),u>a&&(a=u),c>s&&(s=c)}return this.min.set(t,n,r),this.max.set(i,a,s),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=cN.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new iN),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new iN),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),hN.copy(t.boundingBox),hN.applyMatrix4(e.matrixWorld),this.union(hN));const n=e.children;for(let e=0,t=n.length;e<t;e++)this.expandByObject(n[e]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new iN),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,cN),cN.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(xN),vN.subVectors(this.max,xN),pN.subVectors(e.a,xN),dN.subVectors(e.b,xN),fN.subVectors(e.c,xN),mN.subVectors(dN,pN),gN.subVectors(fN,dN),yN.subVectors(pN,fN);let t=[0,-mN.z,mN.y,0,-gN.z,gN.y,0,-yN.z,yN.y,mN.z,0,-mN.x,gN.z,0,-gN.x,yN.z,0,-yN.x,-mN.y,mN.x,0,-gN.y,gN.x,0,-yN.y,yN.x,0];return!!lN(t,pN,dN,fN,vN)&&(t=[1,0,0,0,1,0,0,0,1],!!lN(t,pN,dN,fN,vN)&&(bN.crossVectors(mN,gN),t=[bN.x,bN.y,bN.z],lN(t,pN,dN,fN,vN)))}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new iN),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return cN.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(cN).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(uN[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),uN[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),uN[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),uN[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),uN[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),uN[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),uN[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),uN[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(uN)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}function lN(e,t,n,r,i){for(let a=0,s=e.length-3;a<=s;a+=3){wN.fromArray(e,a);const s=i.x*Math.abs(wN.x)+i.y*Math.abs(wN.y)+i.z*Math.abs(wN.z),o=t.dot(wN),l=n.dot(wN),u=r.dot(wN);if(Math.max(-Math.max(o,l,u),Math.min(o,l,u))>s)return!1}return!0}const uN=[new iN,new iN,new iN,new iN,new iN,new iN,new iN,new iN],cN=new iN,hN=new oN,pN=new iN,dN=new iN,fN=new iN,mN=new iN,gN=new iN,yN=new iN,xN=new iN,vN=new iN,bN=new iN,wN=new iN,_N=new oN;class SN{constructor(e,t){this.center=void 0!==e?e:new iN,this.radius=void 0!==t?t:-1}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):_N.setFromPoints(e).getCenter(n);let r=0;for(let t=0,i=e.length;t<i;t++)r=Math.max(r,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(r),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new iN),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new oN),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}}const TN=new iN,EN=new iN,MN=new iN,CN=new iN,IN=new iN,kN=new iN,AN=new iN;class NN{constructor(e,t){this.origin=void 0!==e?e:new iN,this.direction=void 0!==t?t:new iN(0,0,-1)}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new iN),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,TN)),this}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new iN),t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=TN.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(TN.copy(this.direction).multiplyScalar(t).add(this.origin),TN.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){EN.copy(e).add(t).multiplyScalar(.5),MN.copy(t).sub(e).normalize(),CN.copy(this.origin).sub(EN);const i=.5*e.distanceTo(t),a=-this.direction.dot(MN),s=CN.dot(this.direction),o=-CN.dot(MN),l=CN.lengthSq(),u=Math.abs(1-a*a);let c,h,p,d;if(u>0)if(c=a*o-s,h=a*s-o,d=i*u,c>=0)if(h>=-d)if(h<=d){const e=1/u;c*=e,h*=e,p=c*(c+a*h+2*s)+h*(a*c+h+2*o)+l}else h=i,c=Math.max(0,-(a*h+s)),p=-c*c+h*(h+2*o)+l;else h=-i,c=Math.max(0,-(a*h+s)),p=-c*c+h*(h+2*o)+l;else h<=-d?(c=Math.max(0,-(-a*i+s)),h=c>0?-i:Math.min(Math.max(-i,-o),i),p=-c*c+h*(h+2*o)+l):h<=d?(c=0,h=Math.min(Math.max(-i,-o),i),p=h*(h+2*o)+l):(c=Math.max(0,-(a*i+s)),h=c>0?i:Math.min(Math.max(-i,-o),i),p=-c*c+h*(h+2*o)+l);else h=a>0?-i:i,c=Math.max(0,-(a*h+s)),p=-c*c+h*(h+2*o)+l;return n&&n.copy(this.direction).multiplyScalar(c).add(this.origin),r&&r.copy(MN).multiplyScalar(h).add(EN),p}intersectSphere(e,t){TN.subVectors(e.center,this.origin);const n=TN.dot(this.direction),r=TN.dot(TN)-n*n,i=e.radius*e.radius;if(r>i)return null;const a=Math.sqrt(i-r),s=n-a,o=n+a;return s<0&&o<0?null:s<0?this.at(o,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);if(0===t)return!0;return e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,i,a,s,o;const l=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z,h=this.origin;return l>=0?(n=(e.min.x-h.x)*l,r=(e.max.x-h.x)*l):(n=(e.max.x-h.x)*l,r=(e.min.x-h.x)*l),u>=0?(i=(e.min.y-h.y)*u,a=(e.max.y-h.y)*u):(i=(e.max.y-h.y)*u,a=(e.min.y-h.y)*u),n>a||i>r?null:((i>n||n!=n)&&(n=i),(a<r||r!=r)&&(r=a),c>=0?(s=(e.min.z-h.z)*c,o=(e.max.z-h.z)*c):(s=(e.max.z-h.z)*c,o=(e.min.z-h.z)*c),n>o||s>r?null:((s>n||n!=n)&&(n=s),(o<r||r!=r)&&(r=o),r<0?null:this.at(n>=0?n:r,t)))}intersectsBox(e){return null!==this.intersectBox(e,TN)}intersectTriangle(e,t,n,r,i){IN.subVectors(t,e),kN.subVectors(n,e),AN.crossVectors(IN,kN);let a,s=this.direction.dot(AN);if(s>0){if(r)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}CN.subVectors(this.origin,e);const o=a*this.direction.dot(kN.crossVectors(CN,kN));if(o<0)return null;const l=a*this.direction.dot(IN.cross(CN));if(l<0)return null;if(o+l>s)return null;const u=-a*CN.dot(AN);return u<0?null:this.at(u/s,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}class RN{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,i,a,s,o,l,u,c,h,p,d,f,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=i,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=u,g[10]=c,g[14]=h,g[3]=p,g[7]=d,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new RN).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/LN.setFromMatrixColumn(e,0).length(),i=1/LN.setFromMatrixColumn(e,1).length(),a=1/LN.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*i,t[5]=n[5]*i,t[6]=n[6]*i,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,r=e.y,i=e.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(r),l=Math.sin(r),u=Math.cos(i),c=Math.sin(i);if("XYZ"===e.order){const e=a*u,n=a*c,r=s*u,i=s*c;t[0]=o*u,t[4]=-o*c,t[8]=l,t[1]=n+r*l,t[5]=e-i*l,t[9]=-s*o,t[2]=i-e*l,t[6]=r+n*l,t[10]=a*o}else if("YXZ"===e.order){const e=o*u,n=o*c,r=l*u,i=l*c;t[0]=e+i*s,t[4]=r*s-n,t[8]=a*l,t[1]=a*c,t[5]=a*u,t[9]=-s,t[2]=n*s-r,t[6]=i+e*s,t[10]=a*o}else if("ZXY"===e.order){const e=o*u,n=o*c,r=l*u,i=l*c;t[0]=e-i*s,t[4]=-a*c,t[8]=r+n*s,t[1]=n+r*s,t[5]=a*u,t[9]=i-e*s,t[2]=-a*l,t[6]=s,t[10]=a*o}else if("ZYX"===e.order){const e=a*u,n=a*c,r=s*u,i=s*c;t[0]=o*u,t[4]=r*l-n,t[8]=e*l+i,t[1]=o*c,t[5]=i*l+e,t[9]=n*l-r,t[2]=-l,t[6]=s*o,t[10]=a*o}else if("YZX"===e.order){const e=a*o,n=a*l,r=s*o,i=s*l;t[0]=o*u,t[4]=i-e*c,t[8]=r*c+n,t[1]=c,t[5]=a*u,t[9]=-s*u,t[2]=-l*u,t[6]=n*c+r,t[10]=e-i*c}else if("XZY"===e.order){const e=a*o,n=a*l,r=s*o,i=s*l;t[0]=o*u,t[4]=-c,t[8]=l*u,t[1]=e*c+i,t[5]=a*u,t[9]=n*c-r,t[2]=r*c-n,t[6]=s*u,t[10]=i*c+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(PN,e,DN)}lookAt(e,t,n){const r=this.elements;return BN.subVectors(e,t),0===BN.lengthSq()&&(BN.z=1),BN.normalize(),FN.crossVectors(n,BN),0===FN.lengthSq()&&(1===Math.abs(n.z)?BN.x+=1e-4:BN.z+=1e-4,BN.normalize(),FN.crossVectors(n,BN)),FN.normalize(),$N.crossVectors(BN,FN),r[0]=FN.x,r[4]=$N.x,r[8]=BN.x,r[1]=FN.y,r[5]=$N.y,r[9]=BN.y,r[2]=FN.z,r[6]=$N.z,r[10]=BN.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,i=this.elements,a=n[0],s=n[4],o=n[8],l=n[12],u=n[1],c=n[5],h=n[9],p=n[13],d=n[2],f=n[6],m=n[10],g=n[14],y=n[3],x=n[7],v=n[11],b=n[15],w=r[0],_=r[4],S=r[8],T=r[12],E=r[1],M=r[5],C=r[9],I=r[13],k=r[2],A=r[6],N=r[10],R=r[14],L=r[3],O=r[7],P=r[11],D=r[15];return i[0]=a*w+s*E+o*k+l*L,i[4]=a*_+s*M+o*A+l*O,i[8]=a*S+s*C+o*N+l*P,i[12]=a*T+s*I+o*R+l*D,i[1]=u*w+c*E+h*k+p*L,i[5]=u*_+c*M+h*A+p*O,i[9]=u*S+c*C+h*N+p*P,i[13]=u*T+c*I+h*R+p*D,i[2]=d*w+f*E+m*k+g*L,i[6]=d*_+f*M+m*A+g*O,i[10]=d*S+f*C+m*N+g*P,i[14]=d*T+f*I+m*R+g*D,i[3]=y*w+x*E+v*k+b*L,i[7]=y*_+x*M+v*A+b*O,i[11]=y*S+x*C+v*N+b*P,i[15]=y*T+x*I+v*R+b*D,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],a=e[1],s=e[5],o=e[9],l=e[13],u=e[2],c=e[6],h=e[10],p=e[14];return e[3]*(+i*o*c-r*l*c-i*s*h+n*l*h+r*s*p-n*o*p)+e[7]*(+t*o*p-t*l*h+i*a*h-r*a*p+r*l*u-i*o*u)+e[11]*(+t*l*c-t*s*p-i*a*c+n*a*p+i*s*u-n*l*u)+e[15]*(-r*s*u-t*o*c+t*s*h+r*a*c-n*a*h+n*o*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],u=e[8],c=e[9],h=e[10],p=e[11],d=e[12],f=e[13],m=e[14],g=e[15],y=c*m*l-f*h*l+f*o*p-s*m*p-c*o*g+s*h*g,x=d*h*l-u*m*l-d*o*p+a*m*p+u*o*g-a*h*g,v=u*f*l-d*c*l+d*s*p-a*f*p-u*s*g+a*c*g,b=d*c*o-u*f*o-d*s*h+a*f*h+u*s*m-a*c*m,w=t*y+n*x+r*v+i*b;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/w;return e[0]=y*_,e[1]=(f*h*i-c*m*i-f*r*p+n*m*p+c*r*g-n*h*g)*_,e[2]=(s*m*i-f*o*i+f*r*l-n*m*l-s*r*g+n*o*g)*_,e[3]=(c*o*i-s*h*i-c*r*l+n*h*l+s*r*p-n*o*p)*_,e[4]=x*_,e[5]=(u*m*i-d*h*i+d*r*p-t*m*p-u*r*g+t*h*g)*_,e[6]=(d*o*i-a*m*i-d*r*l+t*m*l+a*r*g-t*o*g)*_,e[7]=(a*h*i-u*o*i+u*r*l-t*h*l-a*r*p+t*o*p)*_,e[8]=v*_,e[9]=(d*c*i-u*f*i-d*n*p+t*f*p+u*n*g-t*c*g)*_,e[10]=(a*f*i-d*s*i+d*n*l-t*f*l-a*n*g+t*s*g)*_,e[11]=(u*s*i-a*c*i-u*n*l+t*c*l+a*n*p-t*s*p)*_,e[12]=b*_,e[13]=(u*f*r-d*c*r+d*n*h-t*f*h-u*n*m+t*c*m)*_,e[14]=(d*s*r-a*f*r-d*n*o+t*f*o+a*n*m-t*s*m)*_,e[15]=(a*c*r-u*s*r+u*n*o-t*c*o-a*n*h+t*s*h)*_,this}scale(e){const t=this.elements,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),i=1-n,a=e.x,s=e.y,o=e.z,l=i*a,u=i*s;return this.set(l*a+n,l*s-r*o,l*o+r*s,0,l*s+r*o,u*s+n,u*o-r*a,0,l*o-r*s,u*o+r*a,i*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,i=t._x,a=t._y,s=t._z,o=t._w,l=i+i,u=a+a,c=s+s,h=i*l,p=i*u,d=i*c,f=a*u,m=a*c,g=s*c,y=o*l,x=o*u,v=o*c,b=n.x,w=n.y,_=n.z;return r[0]=(1-(f+g))*b,r[1]=(p+v)*b,r[2]=(d-x)*b,r[3]=0,r[4]=(p-v)*w,r[5]=(1-(h+g))*w,r[6]=(m+y)*w,r[7]=0,r[8]=(d+x)*_,r[9]=(m-y)*_,r[10]=(1-(h+f))*_,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let i=LN.set(r[0],r[1],r[2]).length();const a=LN.set(r[4],r[5],r[6]).length(),s=LN.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],ON.copy(this);const o=1/i,l=1/a,u=1/s;return ON.elements[0]*=o,ON.elements[1]*=o,ON.elements[2]*=o,ON.elements[4]*=l,ON.elements[5]*=l,ON.elements[6]*=l,ON.elements[8]*=u,ON.elements[9]*=u,ON.elements[10]*=u,t.setFromRotationMatrix(ON),n.x=i,n.y=a,n.z=s,this}makePerspective(e,t,n,r,i,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,o=2*i/(t-e),l=2*i/(n-r),u=(t+e)/(t-e),c=(n+r)/(n-r),h=-(a+i)/(a-i),p=-2*a*i/(a-i);return s[0]=o,s[4]=0,s[8]=u,s[12]=0,s[1]=0,s[5]=l,s[9]=c,s[13]=0,s[2]=0,s[6]=0,s[10]=h,s[14]=p,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,n,r,i,a){const s=this.elements,o=1/(t-e),l=1/(n-r),u=1/(a-i),c=(t+e)*o,h=(n+r)*l,p=(a+i)*u;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-c,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-h,s[2]=0,s[6]=0,s[10]=-2*u,s[14]=-p,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const LN=new iN,ON=new RN,PN=new iN(0,0,0),DN=new iN(1,1,1),FN=new iN,$N=new iN,BN=new iN;class zN{constructor(e=0,t=0,n=0,r=zN.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,n){const r=qA.clamp,i=e.elements,a=i[0],s=i[4],o=i[8],l=i[1],u=i[5],c=i[9],h=i[2],p=i[6],d=i[10];switch(t=t||this._order){case"XYZ":this._y=Math.asin(r(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(p,u),this._z=0);break;case"YXZ":this._x=Math.asin(-r(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(l,u)):(this._y=Math.atan2(-h,a),this._z=0);break;case"ZXY":this._x=Math.asin(r(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-s,u)):(this._y=0,this._z=Math.atan2(l,a));break;case"ZYX":this._y=Math.asin(-r(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(p,d),this._z=Math.atan2(l,a)):(this._x=0,this._z=Math.atan2(-s,u));break;case"YZX":this._z=Math.asin(r(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-c,u),this._y=Math.atan2(-h,a)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-r(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(p,u),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return UN.makeRotationFromQuaternion(e),this.setFromRotationMatrix(UN,t,n)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return VN.setFromEuler(this),this.setFromQuaternion(VN,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new iN(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}zN.DefaultOrder="XYZ",zN.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const UN=new RN,VN=new rN;class WN{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}}let HN=0;const GN=new iN,jN=new rN,qN=new RN,XN=new iN,KN=new iN,YN=new iN,ZN=new rN,JN=new iN(1,0,0),QN=new iN(0,1,0),eR=new iN(0,0,1),tR={type:"added"},nR={type:"removed"};function rR(){Object.defineProperty(this,"id",{value:HN++}),this.uuid=qA.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=rR.DefaultUp.clone();const e=new iN,t=new zN,n=new rN,r=new iN(1,1,1);t._onChange((function(){n.setFromEuler(t,!1)})),n._onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new RN},normalMatrix:{value:new KA}}),this.matrix=new RN,this.matrixWorld=new RN,this.matrixAutoUpdate=rR.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new WN,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}rR.DefaultUp=new iN(0,1,0),rR.DefaultMatrixAutoUpdate=!0,rR.prototype=Object.assign(Object.create(HA.prototype),{constructor:rR,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return jN.setFromAxisAngle(e,t),this.quaternion.multiply(jN),this},rotateOnWorldAxis:function(e,t){return jN.setFromAxisAngle(e,t),this.quaternion.premultiply(jN),this},rotateX:function(e){return this.rotateOnAxis(JN,e)},rotateY:function(e){return this.rotateOnAxis(QN,e)},rotateZ:function(e){return this.rotateOnAxis(eR,e)},translateOnAxis:function(e,t){return GN.copy(e).applyQuaternion(this.quaternion),this.position.add(GN.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(JN,e)},translateY:function(e){return this.translateOnAxis(QN,e)},translateZ:function(e){return this.translateOnAxis(eR,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(qN.copy(this.matrixWorld).invert())},lookAt:function(e,t,n){e.isVector3?XN.copy(e):XN.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),KN.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?qN.lookAt(KN,XN,this.up):qN.lookAt(XN,KN,this.up),this.quaternion.setFromRotationMatrix(qN),r&&(qN.extractRotation(r.matrixWorld),jN.setFromRotationMatrix(qN),this.quaternion.premultiply(jN.invert()))},add:function(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(tR)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(nR)),this},clear:function(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(nR)}return this.children.length=0,this},attach:function(e){return this.updateWorldMatrix(!0,!1),qN.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),qN.multiply(e.parent.matrixWorld)),e.applyMatrix4(qN),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n].getObjectByProperty(e,t);if(void 0!==r)return r}},getWorldPosition:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new iN),this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new rN),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(KN,e,YN),e},getWorldScale:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new iN),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(KN,ZN,e),e},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new iN),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)},traverseVisible:function(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)},traverseAncestors:function(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++)e[t].updateWorldMatrix(!1,!0)}},toJSON:function(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};function i(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){r.geometry=i(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,r=n.length;t<r;t++){const r=n[t];i(e.shapes,r)}else i(e.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,r=this.material.length;n<r;n++)t.push(i(e.materials,this.material[n]));r.material=t}else r.material=i(e.materials,this.material);if(this.children.length>0){r.children=[];for(let t=0;t<this.children.length;t++)r.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];r.animations.push(i(e.animations,n))}}if(t){const t=a(e.geometries),r=a(e.materials),i=a(e.textures),s=a(e.images),o=a(e.shapes),l=a(e.skeletons),u=a(e.animations);t.length>0&&(n.geometries=t),r.length>0&&(n.materials=r),i.length>0&&(n.textures=i),s.length>0&&(n.images=s),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),u.length>0&&(n.animations=u)}return n.object=r,n;function a(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const n=e.children[t];this.add(n.clone())}return this}});const iR=new iN,aR=new iN,sR=new KA;class oR{constructor(e,t){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=void 0!==e?e:new iN(1,0,0),this.constant=void 0!==t?t:0}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=iR.subVectors(n,t).cross(aR.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new iN),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){void 0===t&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new iN);const n=e.delta(iR),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(e.start)?t.copy(e.start):void 0;const i=-(e.start.dot(this.normal)+this.constant)/r;return i<0||i>1?void 0:t.copy(n).multiplyScalar(i).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new iN),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||sR.getNormalMatrix(e),r=this.coplanarPoint(iR).applyMatrix4(e),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}const lR=new iN,uR=new iN,cR=new iN,hR=new iN,pR=new iN,dR=new iN,fR=new iN,mR=new iN,gR=new iN,yR=new iN;class xR{constructor(e,t,n){this.a=void 0!==e?e:new iN,this.b=void 0!==t?t:new iN,this.c=void 0!==n?n:new iN}static getNormal(e,t,n,r){void 0===r&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new iN),r.subVectors(n,t),lR.subVectors(e,t),r.cross(lR);const i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(e,t,n,r,i){lR.subVectors(r,t),uR.subVectors(n,t),cR.subVectors(e,t);const a=lR.dot(lR),s=lR.dot(uR),o=lR.dot(cR),l=uR.dot(uR),u=uR.dot(cR),c=a*l-s*s;if(void 0===i&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new iN),0===c)return i.set(-2,-1,-1);const h=1/c,p=(l*o-s*u)*h,d=(a*u-s*o)*h;return i.set(1-p-d,d,p)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,hR),hR.x>=0&&hR.y>=0&&hR.x+hR.y<=1}static getUV(e,t,n,r,i,a,s,o){return this.getBarycoord(e,t,n,r,hR),o.set(0,0),o.addScaledVector(i,hR.x),o.addScaledVector(a,hR.y),o.addScaledVector(s,hR.z),o}static isFrontFacing(e,t,n,r){return lR.subVectors(n,t),uR.subVectors(e,t),lR.cross(uR).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return lR.subVectors(this.c,this.b),uR.subVectors(this.a,this.b),.5*lR.cross(uR).length()}getMidpoint(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new iN),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return xR.getNormal(this.a,this.b,this.c,e)}getPlane(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new oR),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return xR.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,i){return xR.getUV(e,this.a,this.b,this.c,t,n,r,i)}containsPoint(e){return xR.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return xR.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new iN);const n=this.a,r=this.b,i=this.c;let a,s;pR.subVectors(r,n),dR.subVectors(i,n),mR.subVectors(e,n);const o=pR.dot(mR),l=dR.dot(mR);if(o<=0&&l<=0)return t.copy(n);gR.subVectors(e,r);const u=pR.dot(gR),c=dR.dot(gR);if(u>=0&&c<=u)return t.copy(r);const h=o*c-u*l;if(h<=0&&o>=0&&u<=0)return a=o/(o-u),t.copy(n).addScaledVector(pR,a);yR.subVectors(e,i);const p=pR.dot(yR),d=dR.dot(yR);if(d>=0&&p<=d)return t.copy(i);const f=p*l-o*d;if(f<=0&&l>=0&&d<=0)return s=l/(l-d),t.copy(n).addScaledVector(dR,s);const m=u*d-p*c;if(m<=0&&c-u>=0&&p-d>=0)return fR.subVectors(i,r),s=(c-u)/(c-u+(p-d)),t.copy(r).addScaledVector(fR,s);const g=1/(m+f+h);return a=f*g,s=h*g,t.copy(n).addScaledVector(pR,a).addScaledVector(dR,s)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const vR={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},bR={h:0,s:0,l:0},wR={h:0,s:0,l:0};function _R(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function SR(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function TR(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class ER{constructor(e,t,n){return Object.defineProperty(this,"isColor",{value:!0}),void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){if(e=qA.euclideanModulo(e,1),t=qA.clamp(t,0,1),n=qA.clamp(n,0,1),0===t)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,i=2*n-r;this.r=_R(i,r,e+1/3),this.g=_R(i,r,e),this.b=_R(i,r,e-1/3)}return this}setStyle(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let e;const r=n[1],i=n[2];switch(r){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,t(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,t(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i)){const n=parseFloat(e[1])/360,r=parseInt(e[2],10)/100,i=parseInt(e[3],10)/100;return t(e[4]),this.setHSL(n,r,i)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=n[1],t=e.length;if(3===t)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===t)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=vR[e];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){const n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=SR(e.r),this.g=SR(e.g),this.b=SR(e.b),this}copyLinearToSRGB(e){return this.r=TR(e.r),this.g=TR(e.g),this.b=TR(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const t=this.r,n=this.g,r=this.b,i=Math.max(t,n,r),a=Math.min(t,n,r);let s,o;const l=(a+i)/2;if(a===i)s=0,o=0;else{const e=i-a;switch(o=l<=.5?e/(i+a):e/(2-i-a),i){case t:s=(n-r)/e+(n<r?6:0);break;case n:s=(r-t)/e+2;break;case r:s=(t-n)/e+4}s/=6}return e.h=s,e.s=o,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,n){return this.getHSL(bR),bR.h+=e,bR.s+=t,bR.l+=n,this.setHSL(bR.h,bR.s,bR.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(bR),e.getHSL(wR);const n=qA.lerp(bR.h,wR.h,t),r=qA.lerp(bR.s,wR.s,t),i=qA.lerp(bR.l,wR.l,t);return this.setHSL(n,r,i),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}ER.NAMES=vR,ER.prototype.r=1,ER.prototype.g=1,ER.prototype.b=1;class MR{constructor(e,t,n,r,i,a=0){this.a=e,this.b=t,this.c=n,this.normal=r&&r.isVector3?r:new iN,this.vertexNormals=Array.isArray(r)?r:[],this.color=i&&i.isColor?i:new ER,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=a}clone(){return(new this.constructor).copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(let t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}}let CR=0;function IR(){Object.defineProperty(this,"id",{value:CR++}),this.uuid=qA.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function kR(e){IR.call(this),this.type="MeshBasicMaterial",this.color=new ER(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}IR.prototype=Object.assign(Object.create(HA.prototype),{constructor:IR,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const r=this[t];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}},toJSON:function(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){const t=r(e.textures),i=r(e.images);t.length>0&&(n.textures=t),i.length>0&&(n.images=i)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let r=0;r!==e;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(IR.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),kR.prototype=Object.create(IR.prototype),kR.prototype.constructor=kR,kR.prototype.isMeshBasicMaterial=!0,kR.prototype.copy=function(e){return IR.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};const AR=new iN,NR=new XA;function RR(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}function LR(e,t,n){RR.call(this,new Int8Array(e),t,n)}function OR(e,t,n){RR.call(this,new Uint8Array(e),t,n)}function PR(e,t,n){RR.call(this,new Uint8ClampedArray(e),t,n)}function DR(e,t,n){RR.call(this,new Int16Array(e),t,n)}function FR(e,t,n){RR.call(this,new Uint16Array(e),t,n)}function $R(e,t,n){RR.call(this,new Int32Array(e),t,n)}function BR(e,t,n){RR.call(this,new Uint32Array(e),t,n)}function zR(e,t,n){RR.call(this,new Uint16Array(e),t,n)}function UR(e,t,n){RR.call(this,new Float32Array(e),t,n)}function VR(e,t,n){RR.call(this,new Float64Array(e),t,n)}function WR(e){if(0===e.length)return-1/0;let t=e[0];for(let n=1,r=e.length;n<r;++n)e[n]>t&&(t=e[n]);return t}Object.defineProperty(RR.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(RR.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[n+r];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){const t=this.array;let n=0;for(let r=0,i=e.length;r<i;r++){let i=e[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),i=new ER),t[n++]=i.r,t[n++]=i.g,t[n++]=i.b}return this},copyVector2sArray:function(e){const t=this.array;let n=0;for(let r=0,i=e.length;r<i;r++){let i=e[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),i=new XA),t[n++]=i.x,t[n++]=i.y}return this},copyVector3sArray:function(e){const t=this.array;let n=0;for(let r=0,i=e.length;r<i;r++){let i=e[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),i=new iN),t[n++]=i.x,t[n++]=i.y,t[n++]=i.z}return this},copyVector4sArray:function(e){const t=this.array;let n=0;for(let r=0,i=e.length;r<i;r++){let i=e[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),i=new tN),t[n++]=i.x,t[n++]=i.y,t[n++]=i.z,t[n++]=i.w}return this},applyMatrix3:function(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)NR.fromBufferAttribute(this,t),NR.applyMatrix3(e),this.setXY(t,NR.x,NR.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)AR.fromBufferAttribute(this,t),AR.applyMatrix3(e),this.setXYZ(t,AR.x,AR.y,AR.z);return this},applyMatrix4:function(e){for(let t=0,n=this.count;t<n;t++)AR.x=this.getX(t),AR.y=this.getY(t),AR.z=this.getZ(t),AR.applyMatrix4(e),this.setXYZ(t,AR.x,AR.y,AR.z);return this},applyNormalMatrix:function(e){for(let t=0,n=this.count;t<n;t++)AR.x=this.getX(t),AR.y=this.getY(t),AR.z=this.getZ(t),AR.applyNormalMatrix(e),this.setXYZ(t,AR.x,AR.y,AR.z);return this},transformDirection:function(e){for(let t=0,n=this.count;t<n;t++)AR.x=this.getX(t),AR.y=this.getY(t),AR.z=this.getZ(t),AR.transformDirection(e),this.setXYZ(t,AR.x,AR.y,AR.z);return this},set:function(e,t=0){return this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),LR.prototype=Object.create(RR.prototype),LR.prototype.constructor=LR,OR.prototype=Object.create(RR.prototype),OR.prototype.constructor=OR,PR.prototype=Object.create(RR.prototype),PR.prototype.constructor=PR,DR.prototype=Object.create(RR.prototype),DR.prototype.constructor=DR,FR.prototype=Object.create(RR.prototype),FR.prototype.constructor=FR,$R.prototype=Object.create(RR.prototype),$R.prototype.constructor=$R,BR.prototype=Object.create(RR.prototype),BR.prototype.constructor=BR,zR.prototype=Object.create(RR.prototype),zR.prototype.constructor=zR,zR.prototype.isFloat16BufferAttribute=!0,UR.prototype=Object.create(RR.prototype),UR.prototype.constructor=UR,VR.prototype=Object.create(RR.prototype),VR.prototype.constructor=VR;const HR={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function GR(e,t){return new HR[e](t)}let jR=0;const qR=new RN,XR=new rR,KR=new iN,YR=new oN,ZR=new oN,JR=new iN;function QR(){Object.defineProperty(this,"id",{value:jR++}),this.uuid=qA.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}QR.prototype=Object.assign(Object.create(HA.prototype),{constructor:QR,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){return Array.isArray(e)?this.index=new(WR(e)>65535?BR:FR)(e,1):this.index=e,this},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},hasAttribute:function(e){return void 0!==this.attributes[e]},addGroup:function(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new KA).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(e){return qR.makeRotationX(e),this.applyMatrix4(qR),this},rotateY:function(e){return qR.makeRotationY(e),this.applyMatrix4(qR),this},rotateZ:function(e){return qR.makeRotationZ(e),this.applyMatrix4(qR),this},translate:function(e,t,n){return qR.makeTranslation(e,t,n),this.applyMatrix4(qR),this},scale:function(e,t,n){return qR.makeScale(e,t,n),this.applyMatrix4(qR),this},lookAt:function(e){return XR.lookAt(e),XR.updateMatrix(),this.applyMatrix4(XR.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(KR).negate(),this.translate(KR.x,KR.y,KR.z),this},setFromPoints:function(e){const t=[];for(let n=0,r=e.length;n<r;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new UR(t,3)),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new oN);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new iN(-1/0,-1/0,-1/0),new iN(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];YR.setFromBufferAttribute(n),this.morphTargetsRelative?(JR.addVectors(this.boundingBox.min,YR.min),this.boundingBox.expandByPoint(JR),JR.addVectors(this.boundingBox.max,YR.max),this.boundingBox.expandByPoint(JR)):(this.boundingBox.expandByPoint(YR.min),this.boundingBox.expandByPoint(YR.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new SN);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new iN,1/0);if(e){const n=this.boundingSphere.center;if(YR.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];ZR.setFromBufferAttribute(n),this.morphTargetsRelative?(JR.addVectors(YR.min,ZR.min),YR.expandByPoint(JR),JR.addVectors(YR.max,ZR.max),YR.expandByPoint(JR)):(YR.expandByPoint(ZR.min),YR.expandByPoint(ZR.max))}YR.getCenter(n);let r=0;for(let t=0,i=e.count;t<i;t++)JR.fromBufferAttribute(e,t),r=Math.max(r,n.distanceToSquared(JR));if(t)for(let i=0,a=t.length;i<a;i++){const a=t[i],s=this.morphTargetsRelative;for(let t=0,i=a.count;t<i;t++)JR.fromBufferAttribute(a,t),s&&(KR.fromBufferAttribute(e,t),JR.add(KR)),r=Math.max(r,n.distanceToSquared(JR))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeTangents:function(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,r=t.position.array,i=t.normal.array,a=t.uv.array,s=r.length/3;void 0===t.tangent&&this.setAttribute("tangent",new RR(new Float32Array(4*s),4));const o=t.tangent.array,l=[],u=[];for(let e=0;e<s;e++)l[e]=new iN,u[e]=new iN;const c=new iN,h=new iN,p=new iN,d=new XA,f=new XA,m=new XA,g=new iN,y=new iN;function x(e,t,n){c.fromArray(r,3*e),h.fromArray(r,3*t),p.fromArray(r,3*n),d.fromArray(a,2*e),f.fromArray(a,2*t),m.fromArray(a,2*n),h.sub(c),p.sub(c),f.sub(d),m.sub(d);const i=1/(f.x*m.y-m.x*f.y);isFinite(i)&&(g.copy(h).multiplyScalar(m.y).addScaledVector(p,-f.y).multiplyScalar(i),y.copy(p).multiplyScalar(f.x).addScaledVector(h,-m.x).multiplyScalar(i),l[e].add(g),l[t].add(g),l[n].add(g),u[e].add(y),u[t].add(y),u[n].add(y))}let v=this.groups;0===v.length&&(v=[{start:0,count:n.length}]);for(let e=0,t=v.length;e<t;++e){const t=v[e],r=t.start;for(let e=r,i=r+t.count;e<i;e+=3)x(n[e+0],n[e+1],n[e+2])}const b=new iN,w=new iN,_=new iN,S=new iN;function T(e){_.fromArray(i,3*e),S.copy(_);const t=l[e];b.copy(t),b.sub(_.multiplyScalar(_.dot(t))).normalize(),w.crossVectors(S,t);const n=w.dot(u[e])<0?-1:1;o[4*e]=b.x,o[4*e+1]=b.y,o[4*e+2]=b.z,o[4*e+3]=n}for(let e=0,t=v.length;e<t;++e){const t=v[e],r=t.start;for(let e=r,i=r+t.count;e<i;e+=3)T(n[e+0]),T(n[e+1]),T(n[e+2])}},computeVertexNormals:function(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new RR(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const r=new iN,i=new iN,a=new iN,s=new iN,o=new iN,l=new iN,u=new iN,c=new iN;if(e)for(let h=0,p=e.count;h<p;h+=3){const p=e.getX(h+0),d=e.getX(h+1),f=e.getX(h+2);r.fromBufferAttribute(t,p),i.fromBufferAttribute(t,d),a.fromBufferAttribute(t,f),u.subVectors(a,i),c.subVectors(r,i),u.cross(c),s.fromBufferAttribute(n,p),o.fromBufferAttribute(n,d),l.fromBufferAttribute(n,f),s.add(u),o.add(u),l.add(u),n.setXYZ(p,s.x,s.y,s.z),n.setXYZ(d,o.x,o.y,o.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let e=0,s=t.count;e<s;e+=3)r.fromBufferAttribute(t,e+0),i.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),u.subVectors(a,i),c.subVectors(r,i),u.cross(c),n.setXYZ(e+0,u.x,u.y,u.z),n.setXYZ(e+1,u.x,u.y,u.z),n.setXYZ(e+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(void 0===e.attributes[r])continue;const i=n[r].array,a=e.attributes[r],s=a.array,o=a.itemSize*t,l=Math.min(s.length,i.length-o);for(let e=0,t=o;e<l;e++,t++)i[t]=s[e]}return this},normalizeNormals:function(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)JR.fromBufferAttribute(e,t),JR.normalize(),e.setXYZ(t,JR.x,JR.y,JR.z)},toNonIndexed:function(){function e(e,t){const n=e.array,r=e.itemSize,i=e.normalized,a=new n.constructor(t.length*r);let s=0,o=0;for(let e=0,i=t.length;e<i;e++){s=t[e]*r;for(let e=0;e<r;e++)a[o++]=n[s++]}return new RR(a,r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new QR,n=this.index.array,r=this.attributes;for(const i in r){const a=e(r[i],n);t.setAttribute(i,a)}const i=this.morphAttributes;for(const r in i){const a=[],s=i[r];for(let t=0,r=s.length;t<r;t++){const r=e(s[t],n);a.push(r)}t.morphAttributes[r]=a}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let e=0,n=a.length;e<n;e++){const n=a[e];t.addGroup(n.start,n.count,n.materialIndex)}return t},toJSON:function(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const t in n){const r=n[t],i=r.toJSON(e.data);""!==r.name&&(i.name=r.name),e.data.attributes[t]=i}const r={};let i=!1;for(const t in this.morphAttributes){const n=this.morphAttributes[t],a=[];for(let t=0,r=n.length;t<r;t++){const r=n[t],i=r.toJSON(e.data);""!==r.name&&(i.name=r.name),a.push(i)}a.length>0&&(r[t]=a,i=!0)}i&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const s=this.boundingSphere;return null!==s&&(e.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),e},clone:function(){return(new QR).copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const r=e.attributes;for(const e in r){const n=r[e];this.setAttribute(e,n.clone(t))}const i=e.morphAttributes;for(const e in i){const n=[],r=i[e];for(let e=0,i=r.length;e<i;e++)n.push(r[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let e=0,t=a.length;e<t;e++){const t=a[e];this.addGroup(t.start,t.count,t.materialIndex)}const s=e.boundingBox;null!==s&&(this.boundingBox=s.clone());const o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const eL=new RN,tL=new NN,nL=new SN,rL=new iN,iL=new iN,aL=new iN,sL=new iN,oL=new iN,lL=new iN,uL=new iN,cL=new iN,hL=new iN,pL=new XA,dL=new XA,fL=new XA,mL=new iN,gL=new iN;function yL(e=new QR,t=new kR){rR.call(this),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}function xL(e,t,n,r,i,a,s,o,l,u,c,h){rL.fromBufferAttribute(i,u),iL.fromBufferAttribute(i,c),aL.fromBufferAttribute(i,h);const p=e.morphTargetInfluences;if(t.morphTargets&&a&&p){uL.set(0,0,0),cL.set(0,0,0),hL.set(0,0,0);for(let e=0,t=a.length;e<t;e++){const t=p[e],n=a[e];0!==t&&(sL.fromBufferAttribute(n,u),oL.fromBufferAttribute(n,c),lL.fromBufferAttribute(n,h),s?(uL.addScaledVector(sL,t),cL.addScaledVector(oL,t),hL.addScaledVector(lL,t)):(uL.addScaledVector(sL.sub(rL),t),cL.addScaledVector(oL.sub(iL),t),hL.addScaledVector(lL.sub(aL),t)))}rL.add(uL),iL.add(cL),aL.add(hL)}e.isSkinnedMesh&&(e.boneTransform(u,rL),e.boneTransform(c,iL),e.boneTransform(h,aL));const d=function(e,t,n,r,i,a,s,o){let l;if(l=1===t.side?r.intersectTriangle(s,a,i,!0,o):r.intersectTriangle(i,a,s,2!==t.side,o),null===l)return null;gL.copy(o),gL.applyMatrix4(e.matrixWorld);const u=n.ray.origin.distanceTo(gL);return u<n.near||u>n.far?null:{distance:u,point:gL.clone(),object:e}}(e,t,n,r,rL,iL,aL,mL);if(d){o&&(pL.fromBufferAttribute(o,u),dL.fromBufferAttribute(o,c),fL.fromBufferAttribute(o,h),d.uv=xR.getUV(mL,rL,iL,aL,pL,dL,fL,new XA)),l&&(pL.fromBufferAttribute(l,u),dL.fromBufferAttribute(l,c),fL.fromBufferAttribute(l,h),d.uv2=xR.getUV(mL,rL,iL,aL,pL,dL,fL,new XA));const e=new MR(u,c,h);xR.getNormal(rL,iL,aL,e.normal),d.face=e}return d}yL.prototype=Object.assign(Object.create(rR.prototype),{constructor:yL,isMesh:!0,copy:function(e){return rR.prototype.copy.call(this,e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(e,t){const n=this.geometry,r=this.material,i=this.matrixWorld;if(void 0===r)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),nL.copy(n.boundingSphere),nL.applyMatrix4(i),!1===e.ray.intersectsSphere(nL))return;if(eL.copy(i).invert(),tL.copy(e.ray).applyMatrix4(eL),null!==n.boundingBox&&!1===tL.intersectsBox(n.boundingBox))return;let a;if(n.isBufferGeometry){const i=n.index,s=n.attributes.position,o=n.morphAttributes.position,l=n.morphTargetsRelative,u=n.attributes.uv,c=n.attributes.uv2,h=n.groups,p=n.drawRange;if(null!==i)if(Array.isArray(r))for(let n=0,d=h.length;n<d;n++){const d=h[n],f=r[d.materialIndex];for(let n=Math.max(d.start,p.start),r=Math.min(d.start+d.count,p.start+p.count);n<r;n+=3){const r=i.getX(n),h=i.getX(n+1),p=i.getX(n+2);a=xL(this,f,e,tL,s,o,l,u,c,r,h,p),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=d.materialIndex,t.push(a))}}else{for(let n=Math.max(0,p.start),h=Math.min(i.count,p.start+p.count);n<h;n+=3){const h=i.getX(n),p=i.getX(n+1),d=i.getX(n+2);a=xL(this,r,e,tL,s,o,l,u,c,h,p,d),a&&(a.faceIndex=Math.floor(n/3),t.push(a))}}else if(void 0!==s)if(Array.isArray(r))for(let n=0,i=h.length;n<i;n++){const i=h[n],d=r[i.materialIndex];for(let n=Math.max(i.start,p.start),r=Math.min(i.start+i.count,p.start+p.count);n<r;n+=3){a=xL(this,d,e,tL,s,o,l,u,c,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=i.materialIndex,t.push(a))}}else{for(let n=Math.max(0,p.start),i=Math.min(s.count,p.start+p.count);n<i;n+=3){a=xL(this,r,e,tL,s,o,l,u,c,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),t.push(a))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}});class vL extends QR{constructor(e=1,t=1,n=1,r=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:a};const s=this;r=Math.floor(r),i=Math.floor(i),a=Math.floor(a);const o=[],l=[],u=[],c=[];let h=0,p=0;function d(e,t,n,r,i,a,d,f,m,g,y){const x=a/m,v=d/g,b=a/2,w=d/2,_=f/2,S=m+1,T=g+1;let E=0,M=0;const C=new iN;for(let a=0;a<T;a++){const s=a*v-w;for(let o=0;o<S;o++){const h=o*x-b;C[e]=h*r,C[t]=s*i,C[n]=_,l.push(C.x,C.y,C.z),C[e]=0,C[t]=0,C[n]=f>0?1:-1,u.push(C.x,C.y,C.z),c.push(o/m),c.push(1-a/g),E+=1}}for(let e=0;e<g;e++)for(let t=0;t<m;t++){const n=h+t+S*e,r=h+t+S*(e+1),i=h+(t+1)+S*(e+1),a=h+(t+1)+S*e;o.push(n,r,a),o.push(r,i,a),M+=6}s.addGroup(p,M,y),p+=M,h+=E}d("z","y","x",-1,-1,n,t,e,a,i,0),d("z","y","x",1,-1,n,t,-e,a,i,1),d("x","z","y",1,1,e,n,t,r,a,2),d("x","z","y",1,-1,e,n,-t,r,a,3),d("x","y","z",1,-1,e,t,n,r,i,4),d("x","y","z",-1,-1,e,t,-n,r,i,5),this.setIndex(o),this.setAttribute("position",new UR(l,3)),this.setAttribute("normal",new UR(u,3)),this.setAttribute("uv",new UR(c,2))}}function bL(e){const t={};for(const n in e){t[n]={};for(const r in e[n]){const i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}}return t}function wL(e){const t={};for(let n=0;n<e.length;n++){const r=bL(e[n]);for(const e in r)t[e]=r[e]}return t}const _L={clone:bL,merge:wL};function SL(e){IR.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}function TL(){rR.call(this),this.type="Camera",this.matrixWorldInverse=new RN,this.projectionMatrix=new RN,this.projectionMatrixInverse=new RN}function EL(e=50,t=1,n=.1,r=2e3){TL.call(this),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}SL.prototype=Object.create(IR.prototype),SL.prototype.constructor=SL,SL.prototype.isShaderMaterial=!0,SL.prototype.copy=function(e){return IR.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=bL(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this},SL.prototype.toJSON=function(e){const t=IR.prototype.toJSON.call(this,e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t},TL.prototype=Object.assign(Object.create(rR.prototype),{constructor:TL,isCamera:!0,copy:function(e,t){return rR.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new iN),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){rR.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(e,t){rR.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),EL.prototype=Object.assign(Object.create(TL.prototype),{constructor:EL,isPerspectiveCamera:!0,copy:function(e,t){return TL.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){const t=.5*this.getFilmHeight()/e;this.fov=2*qA.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){const e=Math.tan(.5*qA.DEG2RAD*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*qA.RAD2DEG*Math.atan(Math.tan(.5*qA.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,r,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=this.near;let t=e*Math.tan(.5*qA.DEG2RAD*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r;const a=this.view;if(null!==this.view&&this.view.enabled){const e=a.fullWidth,s=a.fullHeight;i+=a.offsetX*r/e,t-=a.offsetY*n/s,r*=a.width/e,n*=a.height/s}const s=this.filmOffset;0!==s&&(i+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(e){const t=rR.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});function ML(e,t,n){if(rR.call(this),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const r=new EL(90,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new iN(1,0,0)),this.add(r);const i=new EL(90,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new iN(-1,0,0)),this.add(i);const a=new EL(90,1,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new iN(0,1,0)),this.add(a);const s=new EL(90,1,e,t);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new iN(0,-1,0)),this.add(s);const o=new EL(90,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new iN(0,0,1)),this.add(o);const l=new EL(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new iN(0,0,-1)),this.add(l),this.update=function(e,t){null===this.parent&&this.updateMatrixWorld();const u=e.xr.enabled,c=e.getRenderTarget();e.xr.enabled=!1;const h=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,i),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,o),n.texture.generateMipmaps=h,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(c),e.xr.enabled=u}}function CL(e,t,n,r,i,a,s,o,l,u){e=void 0!==e?e:[],t=void 0!==t?t:301,s=void 0!==s?s:1022,QA.call(this,e,t,n,r,i,a,s,o,l,u),this.flipY=!1,this._needsFlipEnvMap=!0}ML.prototype=Object.create(rR.prototype),ML.prototype.constructor=ML,CL.prototype=Object.create(QA.prototype),CL.prototype.constructor=CL,CL.prototype.isCubeTexture=!0,Object.defineProperty(CL.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}});class IL extends nN{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),super(e,e,t),Object.defineProperty(this,"isWebGLCubeRenderTarget",{value:!0}),t=t||{},this.texture=new CL(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=1023,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},r=new vL(5,5,5),i=new SL({name:"CubemapFromEquirect",uniforms:bL(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});i.uniforms.tEquirect.value=t;const a=new yL(r,i),s=t.minFilter;1008===t.minFilter&&(t.minFilter=1006);return new ML(1,10,this).update(e,a),t.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,r){const i=e.getRenderTarget();for(let i=0;i<6;i++)e.setRenderTarget(this,i),e.clear(t,n,r);e.setRenderTarget(i)}}function kL(e,t,n,r,i,a,s,o,l,u,c,h){QA.call(this,null,a,s,o,l,u,r,i,c,h),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=void 0!==l?l:1003,this.minFilter=void 0!==u?u:1003,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}kL.prototype=Object.create(QA.prototype),kL.prototype.constructor=kL,kL.prototype.isDataTexture=!0;const AL=new SN,NL=new iN;class RL{constructor(e,t,n,r,i,a){this.planes=[void 0!==e?e:new oR,void 0!==t?t:new oR,void 0!==n?n:new oR,void 0!==r?r:new oR,void 0!==i?i:new oR,void 0!==a?a:new oR]}set(e,t,n,r,i,a){const s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(r),s[4].copy(i),s[5].copy(a),this}clone(){return(new this.constructor).copy(this)}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,r=n[0],i=n[1],a=n[2],s=n[3],o=n[4],l=n[5],u=n[6],c=n[7],h=n[8],p=n[9],d=n[10],f=n[11],m=n[12],g=n[13],y=n[14],x=n[15];return t[0].setComponents(s-r,c-o,f-h,x-m).normalize(),t[1].setComponents(s+r,c+o,f+h,x+m).normalize(),t[2].setComponents(s+i,c+l,f+p,x+g).normalize(),t[3].setComponents(s-i,c-l,f-p,x-g).normalize(),t[4].setComponents(s-a,c-u,f-d,x-y).normalize(),t[5].setComponents(s+a,c+u,f+d,x+y).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),AL.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(AL)}intersectsSprite(e){return AL.center.set(0,0,0),AL.radius=.7071067811865476,AL.applyMatrix4(e.matrixWorld),this.intersectsSphere(AL)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let e=0;e<6;e++){if(t[e].distanceToPoint(n)<r)return!1}return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(NL.x=r.normal.x>0?e.max.x:e.min.x,NL.y=r.normal.y>0?e.max.y:e.min.y,NL.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(NL)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}}function LL(){let e=null,t=!1,n=null,r=null;function i(t,a){n(t,a),r=e.requestAnimationFrame(i)}return{start:function(){!0!==t&&null!==n&&(r=e.requestAnimationFrame(i),t=!0)},stop:function(){e.cancelAnimationFrame(r),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function OL(e,t){const n=t.isWebGL2,r=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),r.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const n=r.get(t);n&&(e.deleteBuffer(n.buffer),r.delete(t))},update:function(t,i){if(t.isGLBufferAttribute){const e=r.get(t);return void((!e||e.version<t.version)&&r.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const a=r.get(t);void 0===a?r.set(t,function(t,r){const i=t.array,a=t.usage,s=e.createBuffer();e.bindBuffer(r,s),e.bufferData(r,i,a),t.onUploadCallback();let o=5126;return i instanceof Float32Array?o=5126:i instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):i instanceof Uint16Array?t.isFloat16BufferAttribute?n?o=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):o=5123:i instanceof Int16Array?o=5122:i instanceof Uint32Array?o=5125:i instanceof Int32Array?o=5124:i instanceof Int8Array?o=5120:i instanceof Uint8Array&&(o=5121),{buffer:s,type:o,bytesPerElement:i.BYTES_PER_ELEMENT,version:t.version}}(t,i)):a.version<t.version&&(!function(t,r,i){const a=r.array,s=r.updateRange;e.bindBuffer(i,t),-1===s.count?e.bufferSubData(i,0,a):(n?e.bufferSubData(i,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):e.bufferSubData(i,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1)}(a.buffer,t,i),a.version=t.version)}}}class PL extends QR{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const i=e/2,a=t/2,s=Math.floor(n),o=Math.floor(r),l=s+1,u=o+1,c=e/s,h=t/o,p=[],d=[],f=[],m=[];for(let e=0;e<u;e++){const t=e*h-a;for(let n=0;n<l;n++){const r=n*c-i;d.push(r,-t,0),f.push(0,0,1),m.push(n/s),m.push(1-e/o)}}for(let e=0;e<o;e++)for(let t=0;t<s;t++){const n=t+l*e,r=t+l*(e+1),i=t+1+l*(e+1),a=t+1+l*e;p.push(n,r,a),p.push(r,i,a)}this.setIndex(p),this.setAttribute("position",new UR(d,3)),this.setAttribute("normal",new UR(f,3)),this.setAttribute("uv",new UR(m,2))}}const DL={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},FL={common:{diffuse:{value:new ER(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new KA},uv2Transform:{value:new KA},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new XA(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ER(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ER(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new KA}},sprite:{diffuse:{value:new ER(15658734)},opacity:{value:1},center:{value:new XA(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new KA}}},$L={basic:{uniforms:wL([FL.common,FL.specularmap,FL.envmap,FL.aomap,FL.lightmap,FL.fog]),vertexShader:DL.meshbasic_vert,fragmentShader:DL.meshbasic_frag},lambert:{uniforms:wL([FL.common,FL.specularmap,FL.envmap,FL.aomap,FL.lightmap,FL.emissivemap,FL.fog,FL.lights,{emissive:{value:new ER(0)}}]),vertexShader:DL.meshlambert_vert,fragmentShader:DL.meshlambert_frag},phong:{uniforms:wL([FL.common,FL.specularmap,FL.envmap,FL.aomap,FL.lightmap,FL.emissivemap,FL.bumpmap,FL.normalmap,FL.displacementmap,FL.fog,FL.lights,{emissive:{value:new ER(0)},specular:{value:new ER(1118481)},shininess:{value:30}}]),vertexShader:DL.meshphong_vert,fragmentShader:DL.meshphong_frag},standard:{uniforms:wL([FL.common,FL.envmap,FL.aomap,FL.lightmap,FL.emissivemap,FL.bumpmap,FL.normalmap,FL.displacementmap,FL.roughnessmap,FL.metalnessmap,FL.fog,FL.lights,{emissive:{value:new ER(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:DL.meshphysical_vert,fragmentShader:DL.meshphysical_frag},toon:{uniforms:wL([FL.common,FL.aomap,FL.lightmap,FL.emissivemap,FL.bumpmap,FL.normalmap,FL.displacementmap,FL.gradientmap,FL.fog,FL.lights,{emissive:{value:new ER(0)}}]),vertexShader:DL.meshtoon_vert,fragmentShader:DL.meshtoon_frag},matcap:{uniforms:wL([FL.common,FL.bumpmap,FL.normalmap,FL.displacementmap,FL.fog,{matcap:{value:null}}]),vertexShader:DL.meshmatcap_vert,fragmentShader:DL.meshmatcap_frag},points:{uniforms:wL([FL.points,FL.fog]),vertexShader:DL.points_vert,fragmentShader:DL.points_frag},dashed:{uniforms:wL([FL.common,FL.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:DL.linedashed_vert,fragmentShader:DL.linedashed_frag},depth:{uniforms:wL([FL.common,FL.displacementmap]),vertexShader:DL.depth_vert,fragmentShader:DL.depth_frag},normal:{uniforms:wL([FL.common,FL.bumpmap,FL.normalmap,FL.displacementmap,{opacity:{value:1}}]),vertexShader:DL.normal_vert,fragmentShader:DL.normal_frag},sprite:{uniforms:wL([FL.sprite,FL.fog]),vertexShader:DL.sprite_vert,fragmentShader:DL.sprite_frag},background:{uniforms:{uvTransform:{value:new KA},t2D:{value:null}},vertexShader:DL.background_vert,fragmentShader:DL.background_frag},cube:{uniforms:wL([FL.envmap,{opacity:{value:1}}]),vertexShader:DL.cube_vert,fragmentShader:DL.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:DL.equirect_vert,fragmentShader:DL.equirect_frag},distanceRGBA:{uniforms:wL([FL.common,FL.displacementmap,{referencePosition:{value:new iN},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:DL.distanceRGBA_vert,fragmentShader:DL.distanceRGBA_frag},shadow:{uniforms:wL([FL.lights,FL.fog,{color:{value:new ER(0)},opacity:{value:1}}]),vertexShader:DL.shadow_vert,fragmentShader:DL.shadow_frag}};function BL(e,t,n,r,i){const a=new ER(0);let s,o,l=0,u=null,c=0,h=null;function p(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,i)}return{getClearColor:function(){return a},setClearColor:function(e,t=1){a.set(e),l=t,p(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(e){l=e,p(a,l)},render:function(n,i,d,f){let m=!0===i.isScene?i.background:null;m&&m.isTexture&&(m=t.get(m));const g=e.xr,y=g.getSession&&g.getSession();y&&"additive"===y.environmentBlendMode&&(m=null),null===m?p(a,l):m&&m.isColor&&(p(m,1),f=!0),(e.autoClear||f)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLCubeRenderTarget||306===m.mapping)?(void 0===o&&(o=new yL(new vL(1,1,1),new SL({name:"BackgroundCubeMaterial",uniforms:bL($L.cube.uniforms),vertexShader:$L.cube.vertexShader,fragmentShader:$L.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(o)),m.isWebGLCubeRenderTarget&&(m=m.texture),o.material.uniforms.envMap.value=m,o.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,u===m&&c===m.version&&h===e.toneMapping||(o.material.needsUpdate=!0,u=m,c=m.version,h=e.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null)):m&&m.isTexture&&(void 0===s&&(s=new yL(new PL(2,2),new SL({name:"BackgroundMaterial",uniforms:bL($L.background.uniforms),vertexShader:$L.background.vertexShader,fragmentShader:$L.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(s)),s.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),s.material.uniforms.uvTransform.value.copy(m.matrix),u===m&&c===m.version&&h===e.toneMapping||(s.material.needsUpdate=!0,u=m,c=m.version,h=e.toneMapping),n.unshift(s,s.geometry,s.material,0,0,null))}}}function zL(e,t,n,r){const i=e.getParameter(34921),a=r.isWebGL2?null:t.get("OES_vertex_array_object"),s=r.isWebGL2||null!==a,o={},l=p(null);let u=l;function c(t){return r.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function h(t){return r.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function p(e){const t=[],n=[],r=[];for(let e=0;e<i;e++)t[e]=0,n[e]=0,r[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function d(){const e=u.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function f(e){m(e,0)}function m(n,i){const a=u.newAttributes,s=u.enabledAttributes,o=u.attributeDivisors;if(a[n]=1,0===s[n]&&(e.enableVertexAttribArray(n),s[n]=1),o[n]!==i){(r.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),o[n]=i}}function g(){const t=u.newAttributes,n=u.enabledAttributes;for(let r=0,i=n.length;r<i;r++)n[r]!==t[r]&&(e.disableVertexAttribArray(r),n[r]=0)}function y(t,n,i,a,s,o){!0!==r.isWebGL2||5124!==i&&5125!==i?e.vertexAttribPointer(t,n,i,a,s,o):e.vertexAttribIPointer(t,n,i,s,o)}function x(){v(),u!==l&&(u=l,c(u.object))}function v(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(i,l,h,x,v){let b=!1;if(s){const t=function(t,n,i){const s=!0===i.wireframe;let l=o[t.id];void 0===l&&(l={},o[t.id]=l);let u=l[n.id];void 0===u&&(u={},l[n.id]=u);let c=u[s];void 0===c&&(c=p(r.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),u[s]=c);return c}(x,h,l);u!==t&&(u=t,c(u.object)),b=function(e,t){const n=u.attributes,r=e.attributes;let i=0;for(const e in r){const t=n[e],a=r[e];if(void 0===t)return!0;if(t.attribute!==a)return!0;if(t.data!==a.data)return!0;i++}return u.attributesNum!==i||u.index!==t}(x,v),b&&function(e,t){const n={},r=e.attributes;let i=0;for(const e in r){const t=r[e],a={};a.attribute=t,t.data&&(a.data=t.data),n[e]=a,i++}u.attributes=n,u.attributesNum=i,u.index=t}(x,v)}else{const e=!0===l.wireframe;u.geometry===x.id&&u.program===h.id&&u.wireframe===e||(u.geometry=x.id,u.program=h.id,u.wireframe=e,b=!0)}!0===i.isInstancedMesh&&(b=!0),null!==v&&n.update(v,34963),b&&(!function(i,a,s,o){if(!1===r.isWebGL2&&(i.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;d();const l=o.attributes,u=s.getAttributes(),c=a.defaultAttributeValues;for(const t in u){const r=u[t];if(r>=0){const a=l[t];if(void 0!==a){const t=a.normalized,i=a.itemSize,s=n.get(a);if(void 0===s)continue;const l=s.buffer,u=s.type,c=s.bytesPerElement;if(a.isInterleavedBufferAttribute){const n=a.data,s=n.stride,h=a.offset;n&&n.isInstancedInterleavedBuffer?(m(r,n.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)):f(r),e.bindBuffer(34962,l),y(r,i,u,t,s*c,h*c)}else a.isInstancedBufferAttribute?(m(r,a.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=a.meshPerAttribute*a.count)):f(r),e.bindBuffer(34962,l),y(r,i,u,t,0,0)}else if("instanceMatrix"===t){const t=n.get(i.instanceMatrix);if(void 0===t)continue;const a=t.buffer,s=t.type;m(r+0,1),m(r+1,1),m(r+2,1),m(r+3,1),e.bindBuffer(34962,a),e.vertexAttribPointer(r+0,4,s,!1,64,0),e.vertexAttribPointer(r+1,4,s,!1,64,16),e.vertexAttribPointer(r+2,4,s,!1,64,32),e.vertexAttribPointer(r+3,4,s,!1,64,48)}else if("instanceColor"===t){const t=n.get(i.instanceColor);if(void 0===t)continue;const a=t.buffer,s=t.type;m(r,1),e.bindBuffer(34962,a),e.vertexAttribPointer(r,3,s,!1,12,0)}else if(void 0!==c){const n=c[t];if(void 0!==n)switch(n.length){case 2:e.vertexAttrib2fv(r,n);break;case 3:e.vertexAttrib3fv(r,n);break;case 4:e.vertexAttrib4fv(r,n);break;default:e.vertexAttrib1fv(r,n)}}}}g()}(i,l,h,x),null!==v&&e.bindBuffer(34963,n.get(v).buffer))},reset:x,resetDefaultState:v,dispose:function(){x();for(const e in o){const t=o[e];for(const e in t){const n=t[e];for(const e in n)h(n[e].object),delete n[e];delete t[e]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0===o[e.id])return;const t=o[e.id];for(const e in t){const n=t[e];for(const e in n)h(n[e].object),delete n[e];delete t[e]}delete o[e.id]},releaseStatesOfProgram:function(e){for(const t in o){const n=o[t];if(void 0===n[e.id])continue;const r=n[e.id];for(const e in r)h(r[e].object),delete r[e];delete n[e.id]}},initAttributes:d,enableAttribute:f,disableUnusedAttributes:g}}function UL(e,t,n,r){const i=r.isWebGL2;let a;this.setMode=function(e){a=e},this.render=function(t,r){e.drawArrays(a,t,r),n.update(r,a,1)},this.renderInstances=function(r,s,o){if(0===o)return;let l,u;if(i)l=e,u="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[u](a,r,s,o),n.update(s,a,o)}}function VL(e,t,n){let r;function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let s=void 0!==n.precision?n.precision:"highp";const o=i(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);const l=!0===n.logarithmicDepthBuffer,u=e.getParameter(34930),c=e.getParameter(35660),h=e.getParameter(3379),p=e.getParameter(34076),d=e.getParameter(34921),f=e.getParameter(36347),m=e.getParameter(36348),g=e.getParameter(36349),y=c>0,x=a||!!t.get("OES_texture_float");return{isWebGL2:a,getMaxAnisotropy:function(){if(void 0!==r)return r;const n=t.get("EXT_texture_filter_anisotropic");return r=null!==n?e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,r},getMaxPrecision:i,precision:s,logarithmicDepthBuffer:l,maxTextures:u,maxVertexTextures:c,maxTextureSize:h,maxCubemapSize:p,maxAttributes:d,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:y,floatFragmentTextures:x,floatVertexTextures:y&&x,maxSamples:a?e.getParameter(36183):0}}function WL(e){const t=this;let n=null,r=0,i=!1,a=!1;const s=new oR,o=new KA,l={value:null,needsUpdate:!1};function u(){l.value!==n&&(l.value=n,l.needsUpdate=r>0),t.numPlanes=r,t.numIntersection=0}function c(e,n,r,i){const a=null!==e?e.length:0;let u=null;if(0!==a){if(u=l.value,!0!==i||null===u){const t=r+4*a,i=n.matrixWorldInverse;o.getNormalMatrix(i),(null===u||u.length<t)&&(u=new Float32Array(t));for(let t=0,n=r;t!==a;++t,n+=4)s.copy(e[t]).applyMatrix4(i,o),s.normal.toArray(u,n),u[n+3]=s.constant}l.value=u,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,u}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,a){const s=0!==e.length||t||0!==r||i;return i=t,n=c(e,a,0),r=e.length,s},this.beginShadows=function(){a=!0,c(null)},this.endShadows=function(){a=!1,u()},this.setState=function(t,s,o){const h=t.clippingPlanes,p=t.clipIntersection,d=t.clipShadows,f=e.get(t);if(!i||null===h||0===h.length||a&&!d)a?c(null):u();else{const e=a?0:r,t=4*e;let i=f.clippingState||null;l.value=i,i=c(h,s,t,o);for(let e=0;e!==t;++e)i[e]=n[e];f.clippingState=i,this.numIntersection=p?this.numPlanes:0,this.numPlanes+=e}}}function HL(e){let t=new WeakMap;function n(e,t){return 303===t?e.mapping=301:304===t&&(e.mapping=302),e}function r(e){const n=e.target;n.removeEventListener("dispose",r);const i=t.get(n);void 0!==i&&(t.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture){const a=i.mapping;if(303===a||304===a){if(t.has(i)){return n(t.get(i).texture,i.mapping)}{const a=i.image;if(a&&a.height>0){const s=e.getRenderList(),o=e.getRenderTarget(),l=new IL(a.height/2);return l.fromEquirectangularTexture(e,i),t.set(i,l),e.setRenderTarget(o),e.setRenderList(s),i.addEventListener("dispose",r),n(l.texture,i.mapping)}return null}}}return i},dispose:function(){t=new WeakMap}}}function GL(e){const t={};function n(n){if(void 0!==t[n])return t[n];let r;switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(n)}return t[n]=r,r}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(e){const t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function jL(e,t,n,r){const i={},a=new WeakMap;function s(e){const o=e.target;null!==o.index&&t.remove(o.index);for(const e in o.attributes)t.remove(o.attributes[e]);o.removeEventListener("dispose",s),delete i[o.id];const l=a.get(o);l&&(t.remove(l),a.delete(o)),r.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(e){const n=[],r=e.index,i=e.attributes.position;let s=0;if(null!==r){const e=r.array;s=r.version;for(let t=0,r=e.length;t<r;t+=3){const r=e[t+0],i=e[t+1],a=e[t+2];n.push(r,i,i,a,a,r)}}else{const e=i.array;s=i.version;for(let t=0,r=e.length/3-1;t<r;t+=3){const e=t+0,r=t+1,i=t+2;n.push(e,r,r,i,i,e)}}const o=new(WR(n)>65535?BR:FR)(n,1);o.version=s;const l=a.get(e);l&&t.remove(l),a.set(e,o)}return{get:function(e,t){return!0===i[t.id]||(t.addEventListener("dispose",s),i[t.id]=!0,n.memory.geometries++),t},update:function(e){const n=e.attributes;for(const e in n)t.update(n[e],34962);const r=e.morphAttributes;for(const e in r){const n=r[e];for(let e=0,r=n.length;e<r;e++)t.update(n[e],34962)}},getWireframeAttribute:function(e){const t=a.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&o(e)}else o(e);return a.get(e)}}}function qL(e,t,n,r){const i=r.isWebGL2;let a,s,o;this.setMode=function(e){a=e},this.setIndex=function(e){s=e.type,o=e.bytesPerElement},this.render=function(t,r){e.drawElements(a,r,s,t*o),n.update(r,a,1)},this.renderInstances=function(r,l,u){if(0===u)return;let c,h;if(i)c=e,h="drawElementsInstanced";else if(c=t.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===c)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[h](a,l,s,r*o,u),n.update(l,a,u)}}function XL(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,r){switch(t.calls++,n){case 4:t.triangles+=r*(e/3);break;case 1:t.lines+=r*(e/2);break;case 3:t.lines+=r*(e-1);break;case 2:t.lines+=r*e;break;case 0:t.points+=r*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function KL(e,t){return e[0]-t[0]}function YL(e,t){return Math.abs(t[1])-Math.abs(e[1])}function ZL(e){const t={},n=new Float32Array(8),r=[];for(let e=0;e<8;e++)r[e]=[e,0];return{update:function(i,a,s,o){const l=i.morphTargetInfluences,u=void 0===l?0:l.length;let c=t[a.id];if(void 0===c){c=[];for(let e=0;e<u;e++)c[e]=[e,0];t[a.id]=c}for(let e=0;e<u;e++){const t=c[e];t[0]=e,t[1]=l[e]}c.sort(YL);for(let e=0;e<8;e++)e<u&&c[e][1]?(r[e][0]=c[e][0],r[e][1]=c[e][1]):(r[e][0]=Number.MAX_SAFE_INTEGER,r[e][1]=0);r.sort(KL);const h=s.morphTargets&&a.morphAttributes.position,p=s.morphNormals&&a.morphAttributes.normal;let d=0;for(let e=0;e<8;e++){const t=r[e],i=t[0],s=t[1];i!==Number.MAX_SAFE_INTEGER&&s?(h&&a.getAttribute("morphTarget"+e)!==h[i]&&a.setAttribute("morphTarget"+e,h[i]),p&&a.getAttribute("morphNormal"+e)!==p[i]&&a.setAttribute("morphNormal"+e,p[i]),n[e]=s,d+=s):(h&&!0===a.hasAttribute("morphTarget"+e)&&a.deleteAttribute("morphTarget"+e),p&&!0===a.hasAttribute("morphNormal"+e)&&a.deleteAttribute("morphNormal"+e),n[e]=0)}const f=a.morphTargetsRelative?1:1-d;o.getUniforms().setValue(e,"morphTargetBaseInfluence",f),o.getUniforms().setValue(e,"morphTargetInfluences",n)}}}function JL(e,t,n,r){let i=new WeakMap;function a(e){const t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(e){const s=r.render.frame,o=e.geometry,l=t.get(e,o);return i.get(l)!==s&&(t.update(l),i.set(l,s)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",a)&&e.addEventListener("dispose",a),n.update(e.instanceMatrix,34962),null!==e.instanceColor&&n.update(e.instanceColor,34962)),l},dispose:function(){i=new WeakMap}}}function QL(e=null,t=1,n=1,r=1){QA.call(this,null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function eO(e=null,t=1,n=1,r=1){QA.call(this,null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}$L.physical={uniforms:wL([$L.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new XA(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new ER(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:DL.meshphysical_vert,fragmentShader:DL.meshphysical_frag},QL.prototype=Object.create(QA.prototype),QL.prototype.constructor=QL,QL.prototype.isDataTexture2DArray=!0,eO.prototype=Object.create(QA.prototype),eO.prototype.constructor=eO,eO.prototype.isDataTexture3D=!0;const tO=new QA,nO=new QL,rO=new eO,iO=new CL,aO=[],sO=[],oO=new Float32Array(16),lO=new Float32Array(9),uO=new Float32Array(4);function cO(e,t,n){const r=e[0];if(r<=0||r>0)return e;const i=t*n;let a=aO[i];if(void 0===a&&(a=new Float32Array(i),aO[i]=a),0!==t){r.toArray(a,0);for(let r=1,i=0;r!==t;++r)i+=n,e[r].toArray(a,i)}return a}function hO(e,t){if(e.length!==t.length)return!1;for(let n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function pO(e,t){for(let n=0,r=t.length;n<r;n++)e[n]=t[n]}function dO(e,t){let n=sO[t];void 0===n&&(n=new Int32Array(t),sO[t]=n);for(let r=0;r!==t;++r)n[r]=e.allocateTextureUnit();return n}function fO(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function mO(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(hO(n,t))return;e.uniform2fv(this.addr,t),pO(n,t)}}function gO(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(hO(n,t))return;e.uniform3fv(this.addr,t),pO(n,t)}}function yO(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(hO(n,t))return;e.uniform4fv(this.addr,t),pO(n,t)}}function xO(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(hO(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),pO(n,t)}else{if(hO(n,r))return;uO.set(r),e.uniformMatrix2fv(this.addr,!1,uO),pO(n,r)}}function vO(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(hO(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),pO(n,t)}else{if(hO(n,r))return;lO.set(r),e.uniformMatrix3fv(this.addr,!1,lO),pO(n,r)}}function bO(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(hO(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),pO(n,t)}else{if(hO(n,r))return;oO.set(r),e.uniformMatrix4fv(this.addr,!1,oO),pO(n,r)}}function wO(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTexture2D(t||tO,i)}function _O(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(t||nO,i)}function SO(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(t||rO,i)}function TO(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTextureCube(t||iO,i)}function EO(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function MO(e,t){const n=this.cache;hO(n,t)||(e.uniform2iv(this.addr,t),pO(n,t))}function CO(e,t){const n=this.cache;hO(n,t)||(e.uniform3iv(this.addr,t),pO(n,t))}function IO(e,t){const n=this.cache;hO(n,t)||(e.uniform4iv(this.addr,t),pO(n,t))}function kO(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function AO(e,t){e.uniform1fv(this.addr,t)}function NO(e,t){e.uniform1iv(this.addr,t)}function RO(e,t){e.uniform2iv(this.addr,t)}function LO(e,t){e.uniform3iv(this.addr,t)}function OO(e,t){e.uniform4iv(this.addr,t)}function PO(e,t){const n=cO(t,this.size,2);e.uniform2fv(this.addr,n)}function DO(e,t){const n=cO(t,this.size,3);e.uniform3fv(this.addr,n)}function FO(e,t){const n=cO(t,this.size,4);e.uniform4fv(this.addr,n)}function $O(e,t){const n=cO(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function BO(e,t){const n=cO(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function zO(e,t){const n=cO(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function UO(e,t,n){const r=t.length,i=dO(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.safeSetTexture2D(t[e]||tO,i[e])}function VO(e,t,n){const r=t.length,i=dO(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.safeSetTextureCube(t[e]||iO,i[e])}function WO(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return fO;case 35664:return mO;case 35665:return gO;case 35666:return yO;case 35674:return xO;case 35675:return vO;case 35676:return bO;case 5124:case 35670:return EO;case 35667:case 35671:return MO;case 35668:case 35672:return CO;case 35669:case 35673:return IO;case 5125:return kO;case 35678:case 36198:case 36298:case 36306:case 35682:return wO;case 35679:case 36299:case 36307:return SO;case 35680:case 36300:case 36308:case 36293:return TO;case 36289:case 36303:case 36311:case 36292:return _O}}(t.type)}function HO(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return AO;case 35664:return PO;case 35665:return DO;case 35666:return FO;case 35674:return $O;case 35675:return BO;case 35676:return zO;case 5124:case 35670:return NO;case 35667:case 35671:return RO;case 35668:case 35672:return LO;case 35669:case 35673:return OO;case 35678:case 36198:case 36298:case 36306:case 35682:return UO;case 35680:case 36300:case 36308:case 36293:return VO}}(t.type)}function GO(e){this.id=e,this.seq=[],this.map={}}HO.prototype.updateCache=function(e){const t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),pO(t,e)},GO.prototype.setValue=function(e,t,n){const r=this.seq;for(let i=0,a=r.length;i!==a;++i){const a=r[i];a.setValue(e,t[a.id],n)}};const jO=/(\w+)(\])?(\[|\.)?/g;function qO(e,t){e.seq.push(t),e.map[t.id]=t}function XO(e,t,n){const r=e.name,i=r.length;for(jO.lastIndex=0;;){const a=jO.exec(r),s=jO.lastIndex;let o=a[1];const l="]"===a[2],u=a[3];if(l&&(o|=0),void 0===u||"["===u&&s+2===i){qO(n,void 0===u?new WO(o,e,t):new HO(o,e,t));break}{let e=n.map[o];void 0===e&&(e=new GO(o),qO(n,e)),n=e}}}function KO(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let r=0;r<n;++r){const n=e.getActiveUniform(t,r);XO(n,e.getUniformLocation(t,n.name),this)}}function YO(e,t,n){const r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),r}KO.prototype.setValue=function(e,t,n,r){const i=this.map[t];void 0!==i&&i.setValue(e,n,r)},KO.prototype.setOptional=function(e,t,n){const r=t[n];void 0!==r&&this.setValue(e,n,r)},KO.upload=function(e,t,n,r){for(let i=0,a=t.length;i!==a;++i){const a=t[i],s=n[a.id];!1!==s.needsUpdate&&a.setValue(e,s.value,r)}},KO.seqWithValue=function(e,t){const n=[];for(let r=0,i=e.length;r!==i;++r){const i=e[r];i.id in t&&n.push(i)}return n};let ZO=0;function JO(e){switch(e){case 3e3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function QO(e,t,n){const r=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();if(r&&""===i)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+i+function(e){const t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}(e.getShaderSource(t))}function eP(e,t){const n=JO(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function tP(e,t){const n=JO(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function nP(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function rP(e){return""!==e}function iP(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function aP(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const sP=/^[ \t]*#include +<([\w\d./]+)>/gm;function oP(e){return e.replace(sP,lP)}function lP(e,t){const n=DL[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return oP(n)}const uP=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,cP=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function hP(e){return e.replace(cP,dP).replace(uP,pP)}function pP(e,t,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),dP(e,t,n,r)}function dP(e,t,n,r){let i="";for(let e=parseInt(t);e<parseInt(n);e++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}function fP(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function mP(e,t,n,r){const i=e.getContext(),a=n.defines;let s=n.vertexShader,o=n.fragmentShader;const l=function(e){let t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(n),u=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case 301:case 302:t="ENVMAP_TYPE_CUBE";break;case 306:case 307:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),c=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case 302:case 307:t="ENVMAP_MODE_REFRACTION"}return t}(n),h=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),p=e.gammaFactor>0?e.gammaFactor:1,d=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(rP).join("\n")}(n),f=function(e){const t=[];for(const n in e){const r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}(a),m=i.createProgram();let g,y,x=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=[f].filter(rP).join("\n"),g.length>0&&(g+="\n"),y=[d,f].filter(rP).join("\n"),y.length>0&&(y+="\n")):(g=[fP(n),"#define SHADER_NAME "+n.shaderName,f,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+p,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(rP).join("\n"),y=[d,fP(n),"#define SHADER_NAME "+n.shaderName,f,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+p,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?DL.tonemapping_pars_fragment:"",0!==n.toneMapping?nP("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",DL.encodings_pars_fragment,n.map?eP("mapTexelToLinear",n.mapEncoding):"",n.matcap?eP("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?eP("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?eP("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?eP("lightMapTexelToLinear",n.lightMapEncoding):"",tP("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(rP).join("\n")),s=oP(s),s=iP(s,n),s=aP(s,n),o=oP(o),o=iP(o,n),o=aP(o,n),s=hP(s),o=hP(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(x="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,y=["#define varying in","300 es"===n.glslVersion?"":"out highp vec4 pc_fragColor;","300 es"===n.glslVersion?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+y);const v=x+y+o,b=YO(i,35633,x+g+s),w=YO(i,35632,v);if(i.attachShader(m,b),i.attachShader(m,w),void 0!==n.index0AttributeName?i.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&i.bindAttribLocation(m,0,"position"),i.linkProgram(m),e.debug.checkShaderErrors){const e=i.getProgramInfoLog(m).trim(),t=i.getShaderInfoLog(b).trim(),n=i.getShaderInfoLog(w).trim();let r=!0,a=!0;if(!1===i.getProgramParameter(m,35714)){r=!1;const t=QO(i,b,"vertex"),n=QO(i,w,"fragment");console.error("THREE.WebGLProgram: shader error: ",i.getError(),"35715",i.getProgramParameter(m,35715),"gl.getProgramInfoLog",e,t,n)}else""!==e?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",e):""!==t&&""!==n||(a=!1);a&&(this.diagnostics={runnable:r,programLog:e,vertexShader:{log:t,prefix:g},fragmentShader:{log:n,prefix:y}})}let _,S;return i.deleteShader(b),i.deleteShader(w),this.getUniforms=function(){return void 0===_&&(_=new KO(i,m)),_},this.getAttributes=function(){return void 0===S&&(S=function(e,t){const n={},r=e.getProgramParameter(t,35721);for(let i=0;i<r;i++){const r=e.getActiveAttrib(t,i).name;n[r]=e.getAttribLocation(t,r)}return n}(i,m)),S},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(m),this.program=void 0},this.name=n.shaderName,this.id=ZO++,this.cacheKey=t,this.usedTimes=1,this.program=m,this.vertexShader=b,this.fragmentShader=w,this}function gP(e,t,n,r,i,a){const s=[],o=r.isWebGL2,l=r.logarithmicDepthBuffer,u=r.floatVertexTextures,c=r.maxVertexUniforms,h=r.vertexTextures;let p=r.precision;const d={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},f=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function m(e){let t;return e&&e.isTexture?t=e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=3e3,t}return{getParameters:function(i,s,f,g,y){const x=g.fog,v=i.isMeshStandardMaterial?g.environment:null,b=t.get(i.envMap||v),w=d[i.type],_=y.isSkinnedMesh?function(e){const t=e.skeleton.bones;if(u)return 1024;{const e=c,n=Math.floor((e-20)/4),r=Math.min(n,t.length);return r<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+r+"."),0):r}}(y):0;let S,T;if(null!==i.precision&&(p=r.getMaxPrecision(i.precision),p!==i.precision&&console.warn("THREE.WebGLProgram.getParameters:",i.precision,"not supported, using",p,"instead.")),w){const e=$L[w];S=e.vertexShader,T=e.fragmentShader}else S=i.vertexShader,T=i.fragmentShader;const E=e.getRenderTarget();return{isWebGL2:o,shaderID:w,shaderName:i.type,vertexShader:S,fragmentShader:T,defines:i.defines,isRawShaderMaterial:!0===i.isRawShaderMaterial,glslVersion:i.glslVersion,precision:p,instancing:!0===y.isInstancedMesh,instancingColor:!0===y.isInstancedMesh&&null!==y.instanceColor,supportsVertexTextures:h,outputEncoding:null!==E?m(E.texture):e.outputEncoding,map:!!i.map,mapEncoding:m(i.map),matcap:!!i.matcap,matcapEncoding:m(i.matcap),envMap:!!b,envMapMode:b&&b.mapping,envMapEncoding:m(b),envMapCubeUV:!!b&&(306===b.mapping||307===b.mapping),lightMap:!!i.lightMap,lightMapEncoding:m(i.lightMap),aoMap:!!i.aoMap,emissiveMap:!!i.emissiveMap,emissiveMapEncoding:m(i.emissiveMap),bumpMap:!!i.bumpMap,normalMap:!!i.normalMap,objectSpaceNormalMap:1===i.normalMapType,tangentSpaceNormalMap:0===i.normalMapType,clearcoatMap:!!i.clearcoatMap,clearcoatRoughnessMap:!!i.clearcoatRoughnessMap,clearcoatNormalMap:!!i.clearcoatNormalMap,displacementMap:!!i.displacementMap,roughnessMap:!!i.roughnessMap,metalnessMap:!!i.metalnessMap,specularMap:!!i.specularMap,alphaMap:!!i.alphaMap,gradientMap:!!i.gradientMap,sheen:!!i.sheen,transmissionMap:!!i.transmissionMap,combine:i.combine,vertexTangents:i.normalMap&&i.vertexTangents,vertexColors:i.vertexColors,vertexUvs:!!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatMap||i.clearcoatRoughnessMap||i.clearcoatNormalMap||i.displacementMap||i.transmissionMap),uvsVertexOnly:!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatNormalMap||i.transmissionMap||!i.displacementMap),fog:!!x,useFog:i.fog,fogExp2:x&&x.isFogExp2,flatShading:i.flatShading,sizeAttenuation:i.sizeAttenuation,logarithmicDepthBuffer:l,skinning:i.skinning&&_>0,maxBones:_,useVertexTexture:u,morphTargets:i.morphTargets,morphNormals:i.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:i.dithering,shadowMapEnabled:e.shadowMap.enabled&&f.length>0,shadowMapType:e.shadowMap.type,toneMapping:i.toneMapped?e.toneMapping:0,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:i.premultipliedAlpha,alphaTest:i.alphaTest,doubleSided:2===i.side,flipSided:1===i.side,depthPacking:void 0!==i.depthPacking&&i.depthPacking,index0AttributeName:i.index0AttributeName,extensionDerivatives:i.extensions&&i.extensions.derivatives,extensionFragDepth:i.extensions&&i.extensions.fragDepth,extensionDrawBuffers:i.extensions&&i.extensions.drawBuffers,extensionShaderTextureLOD:i.extensions&&i.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:o||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||n.has("EXT_shader_texture_lod"),customProgramCacheKey:i.customProgramCacheKey()}},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.fragmentShader),n.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);if(!1===t.isRawShaderMaterial){for(let e=0;e<f.length;e++)n.push(t[f[e]]);n.push(e.outputEncoding),n.push(e.gammaFactor)}return n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=d[e.type];let n;if(t){const e=$L[t];n=_L.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let r;for(let e=0,t=s.length;e<t;e++){const t=s[e];if(t.cacheKey===n){r=t,++r.usedTimes;break}}return void 0===r&&(r=new mP(e,n,t,i),s.push(r)),r},releaseProgram:function(e){if(0==--e.usedTimes){const t=s.indexOf(e);s[t]=s[s.length-1],s.pop(),e.destroy()}},programs:s}}function yP(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,r){e.get(t)[n]=r},dispose:function(){e=new WeakMap}}}function xP(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function vP(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function bP(e){const t=[];let n=0;const r=[],i=[],a={id:-1};function s(r,i,s,o,l,u){let c=t[n];const h=e.get(s);return void 0===c?(c={id:r.id,object:r,geometry:i,material:s,program:h.program||a,groupOrder:o,renderOrder:r.renderOrder,z:l,group:u},t[n]=c):(c.id=r.id,c.object=r,c.geometry=i,c.material=s,c.program=h.program||a,c.groupOrder=o,c.renderOrder=r.renderOrder,c.z=l,c.group=u),n++,c}return{opaque:r,transparent:i,init:function(){n=0,r.length=0,i.length=0},push:function(e,t,n,a,o,l){const u=s(e,t,n,a,o,l);(!0===n.transparent?i:r).push(u)},unshift:function(e,t,n,a,o,l){const u=s(e,t,n,a,o,l);(!0===n.transparent?i:r).unshift(u)},finish:function(){for(let e=n,r=t.length;e<r;e++){const n=t[e];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(e,t){r.length>1&&r.sort(e||xP),i.length>1&&i.sort(t||vP)}}}function wP(e){let t=new WeakMap;return{get:function(n,r){const i=t.get(n);let a;return void 0===i?(a=new bP(e),t.set(n,new WeakMap),t.get(n).set(r,a)):(a=i.get(r),void 0===a&&(a=new bP(e),i.set(r,a))),a},dispose:function(){t=new WeakMap}}}function _P(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new iN,color:new ER};break;case"SpotLight":n={position:new iN,direction:new iN,color:new ER,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new iN,color:new ER,distance:0,decay:0};break;case"HemisphereLight":n={direction:new iN,skyColor:new ER,groundColor:new ER};break;case"RectAreaLight":n={color:new ER,position:new iN,halfWidth:new iN,halfHeight:new iN}}return e[t.id]=n,n}}}let SP=0;function TP(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function EP(e,t){const n=new _P,r=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new XA};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new XA,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)i.probe.push(new iN);const a=new iN,s=new RN,o=new RN;return{setup:function(a){let s=0,o=0,l=0;for(let e=0;e<9;e++)i.probe[e].set(0,0,0);let u=0,c=0,h=0,p=0,d=0,f=0,m=0,g=0;a.sort(TP);for(let e=0,t=a.length;e<t;e++){const t=a[e],y=t.color,x=t.intensity,v=t.distance,b=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)s+=y.r*x,o+=y.g*x,l+=y.b*x;else if(t.isLightProbe)for(let e=0;e<9;e++)i.probe[e].addScaledVector(t.sh.coefficients[e],x);else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,i.directionalShadow[u]=n,i.directionalShadowMap[u]=b,i.directionalShadowMatrix[u]=t.shadow.matrix,f++}i.directional[u]=e,u++}else if(t.isSpotLight){const e=n.get(t);if(e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(y).multiplyScalar(x),e.distance=v,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,i.spotShadow[h]=n,i.spotShadowMap[h]=b,i.spotShadowMatrix[h]=t.shadow.matrix,g++}i.spot[h]=e,h++}else if(t.isRectAreaLight){const e=n.get(t);e.color.copy(y).multiplyScalar(x),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),i.rectArea[p]=e,p++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,i.pointShadow[c]=n,i.pointShadowMap[c]=b,i.pointShadowMatrix[c]=t.shadow.matrix,m++}i.point[c]=e,c++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(x),e.groundColor.copy(t.groundColor).multiplyScalar(x),i.hemi[d]=e,d++}}p>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(i.rectAreaLTC1=FL.LTC_FLOAT_1,i.rectAreaLTC2=FL.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=FL.LTC_HALF_1,i.rectAreaLTC2=FL.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=s,i.ambient[1]=o,i.ambient[2]=l;const y=i.hash;y.directionalLength===u&&y.pointLength===c&&y.spotLength===h&&y.rectAreaLength===p&&y.hemiLength===d&&y.numDirectionalShadows===f&&y.numPointShadows===m&&y.numSpotShadows===g||(i.directional.length=u,i.spot.length=h,i.rectArea.length=p,i.point.length=c,i.hemi.length=d,i.directionalShadow.length=f,i.directionalShadowMap.length=f,i.pointShadow.length=m,i.pointShadowMap.length=m,i.spotShadow.length=g,i.spotShadowMap.length=g,i.directionalShadowMatrix.length=f,i.pointShadowMatrix.length=m,i.spotShadowMatrix.length=g,y.directionalLength=u,y.pointLength=c,y.spotLength=h,y.rectAreaLength=p,y.hemiLength=d,y.numDirectionalShadows=f,y.numPointShadows=m,y.numSpotShadows=g,i.version=SP++)},setupView:function(e,t){let n=0,r=0,l=0,u=0,c=0;const h=t.matrixWorldInverse;for(let t=0,p=e.length;t<p;t++){const p=e[t];if(p.isDirectionalLight){const e=i.directional[n];e.direction.setFromMatrixPosition(p.matrixWorld),a.setFromMatrixPosition(p.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(h),n++}else if(p.isSpotLight){const e=i.spot[l];e.position.setFromMatrixPosition(p.matrixWorld),e.position.applyMatrix4(h),e.direction.setFromMatrixPosition(p.matrixWorld),a.setFromMatrixPosition(p.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(h),l++}else if(p.isRectAreaLight){const e=i.rectArea[u];e.position.setFromMatrixPosition(p.matrixWorld),e.position.applyMatrix4(h),o.identity(),s.copy(p.matrixWorld),s.premultiply(h),o.extractRotation(s),e.halfWidth.set(.5*p.width,0,0),e.halfHeight.set(0,.5*p.height,0),e.halfWidth.applyMatrix4(o),e.halfHeight.applyMatrix4(o),u++}else if(p.isPointLight){const e=i.point[r];e.position.setFromMatrixPosition(p.matrixWorld),e.position.applyMatrix4(h),r++}else if(p.isHemisphereLight){const e=i.hemi[c];e.direction.setFromMatrixPosition(p.matrixWorld),e.direction.transformDirection(h),e.direction.normalize(),c++}}},state:i}}function MP(e,t){const n=new EP(e,t),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(){n.setup(r)},setupLightsView:function(e){n.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){i.push(e)}}}function CP(e,t){let n=new WeakMap;return{get:function(r,i=0){let a;return!1===n.has(r)?(a=new MP(e,t),n.set(r,[]),n.get(r).push(a)):i>=n.get(r).length?(a=new MP(e,t),n.get(r).push(a)):a=n.get(r)[i],a},dispose:function(){n=new WeakMap}}}function IP(e){IR.call(this),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}function kP(e){IR.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new iN,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}IP.prototype=Object.create(IR.prototype),IP.prototype.constructor=IP,IP.prototype.isMeshDepthMaterial=!0,IP.prototype.copy=function(e){return IR.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},kP.prototype=Object.create(IR.prototype),kP.prototype.constructor=kP,kP.prototype.isMeshDistanceMaterial=!0,kP.prototype.copy=function(e){return IR.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this};function AP(e,t,n){let r=new RL;const i=new XA,a=new XA,s=new tN,o=[],l=[],u={},c={0:1,1:0,2:2},h=new SL({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:.125},uniforms:{shadow_pass:{value:null},resolution:{value:new XA},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=h.clone();p.defines.HORIZONTAL_PASS=1;const d=new QR;d.setAttribute("position",new RR(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new yL(d,h),m=this;function g(n,r){const i=t.update(f);h.uniforms.shadow_pass.value=n.map.texture,h.uniforms.resolution.value=n.mapSize,h.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(r,null,i,h,f,null),p.uniforms.shadow_pass.value=n.mapPass.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(r,null,i,p,f,null)}function y(e,t,n){const r=e<<0|t<<1|n<<2;let i=o[r];return void 0===i&&(i=new IP({depthPacking:3201,morphTargets:e,skinning:t}),o[r]=i),i}function x(e,t,n){const r=e<<0|t<<1|n<<2;let i=l[r];return void 0===i&&(i=new kP({morphTargets:e,skinning:t}),l[r]=i),i}function v(t,n,r,i,a,s,o){let l=null,h=y,p=t.customDepthMaterial;if(!0===i.isPointLight&&(h=x,p=t.customDistanceMaterial),void 0===p){let e=!1;!0===r.morphTargets&&(e=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let i=!1;!0===t.isSkinnedMesh&&(!0===r.skinning?i=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t));l=h(e,i,!0===t.isInstancedMesh)}else l=p;if(e.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){const e=l.uuid,t=r.uuid;let n=u[e];void 0===n&&(n={},u[e]=n);let i=n[t];void 0===i&&(i=l.clone(),n[t]=i),l=i}return l.visible=r.visible,l.wireframe=r.wireframe,l.side=3===o?null!==r.shadowSide?r.shadowSide:r.side:null!==r.shadowSide?r.shadowSide:c[r.side],l.clipShadows=r.clipShadows,l.clippingPlanes=r.clippingPlanes,l.clipIntersection=r.clipIntersection,l.wireframeLinewidth=r.wireframeLinewidth,l.linewidth=r.linewidth,!0===i.isPointLight&&!0===l.isMeshDistanceMaterial&&(l.referencePosition.setFromMatrixPosition(i.matrixWorld),l.nearDistance=a,l.farDistance=s),l}function b(n,i,a,s,o){if(!1===n.visible)return;if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===o)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const r=t.update(n),i=n.material;if(Array.isArray(i)){const t=r.groups;for(let l=0,u=t.length;l<u;l++){const u=t[l],c=i[u.materialIndex];if(c&&c.visible){const t=v(n,r,c,s,a.near,a.far,o);e.renderBufferDirect(a,null,r,t,n,u)}}}else if(i.visible){const t=v(n,r,i,s,a.near,a.far,o);e.renderBufferDirect(a,null,r,t,n,null)}}const l=n.children;for(let e=0,t=l.length;e<t;e++)b(l[e],i,a,s,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(t,o,l){if(!1===m.enabled)return;if(!1===m.autoUpdate&&!1===m.needsUpdate)return;if(0===t.length)return;const u=e.getRenderTarget(),c=e.getActiveCubeFace(),h=e.getActiveMipmapLevel(),p=e.state;p.setBlending(0),p.buffers.color.setClear(1,1,1,1),p.buffers.depth.setTest(!0),p.setScissorTest(!1);for(let u=0,c=t.length;u<c;u++){const c=t[u],h=c.shadow;if(void 0===h){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===h.autoUpdate&&!1===h.needsUpdate)continue;i.copy(h.mapSize);const d=h.getFrameExtents();if(i.multiply(d),a.copy(h.mapSize),(i.x>n||i.y>n)&&(i.x>n&&(a.x=Math.floor(n/d.x),i.x=a.x*d.x,h.mapSize.x=a.x),i.y>n&&(a.y=Math.floor(n/d.y),i.y=a.y*d.y,h.mapSize.y=a.y)),null===h.map&&!h.isPointLightShadow&&3===this.type){const e={minFilter:1006,magFilter:1006,format:1023};h.map=new nN(i.x,i.y,e),h.map.texture.name=c.name+".shadowMap",h.mapPass=new nN(i.x,i.y,e),h.camera.updateProjectionMatrix()}if(null===h.map){const e={minFilter:1003,magFilter:1003,format:1023};h.map=new nN(i.x,i.y,e),h.map.texture.name=c.name+".shadowMap",h.camera.updateProjectionMatrix()}e.setRenderTarget(h.map),e.clear();const f=h.getViewportCount();for(let e=0;e<f;e++){const t=h.getViewport(e);s.set(a.x*t.x,a.y*t.y,a.x*t.z,a.y*t.w),p.viewport(s),h.updateMatrices(c,e),r=h.getFrustum(),b(o,l,h.camera,c,this.type)}h.isPointLightShadow||3!==this.type||g(h,l),h.needsUpdate=!1}m.needsUpdate=!1,e.setRenderTarget(u,c,h)}}function NP(e,t,n){const r=n.isWebGL2;const i=new function(){let t=!1;const n=new tN;let r=null;const i=new tN(0,0,0,0);return{setMask:function(n){r===n||t||(e.colorMask(n,n,n,n),r=n)},setLocked:function(e){t=e},setClear:function(t,r,a,s,o){!0===o&&(t*=s,r*=s,a*=s),n.set(t,r,a,s),!1===i.equals(n)&&(e.clearColor(t,r,a,s),i.copy(n))},reset:function(){t=!1,r=null,i.set(-1,0,0,0)}}},a=new function(){let t=!1,n=null,r=null,i=null;return{setTest:function(e){e?L(2929):O(2929)},setMask:function(r){n===r||t||(e.depthMask(r),n=r)},setFunc:function(t){if(r!==t){if(t)switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:default:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517)}else e.depthFunc(515);r=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,n=null,r=null,i=null}}},s=new function(){let t=!1,n=null,r=null,i=null,a=null,s=null,o=null,l=null,u=null;return{setTest:function(e){t||(e?L(2960):O(2960))},setMask:function(r){n===r||t||(e.stencilMask(r),n=r)},setFunc:function(t,n,s){r===t&&i===n&&a===s||(e.stencilFunc(t,n,s),r=t,i=n,a=s)},setOp:function(t,n,r){s===t&&o===n&&l===r||(e.stencilOp(t,n,r),s=t,o=n,l=r)},setLocked:function(e){t=e},setClear:function(t){u!==t&&(e.clearStencil(t),u=t)},reset:function(){t=!1,n=null,r=null,i=null,a=null,s=null,o=null,l=null,u=null}}};let o={},l=null,u=null,c=null,h=null,p=null,d=null,f=null,m=null,g=null,y=!1,x=null,v=null,b=null,w=null,_=null;const S=e.getParameter(35661);let T=!1,E=0;const M=e.getParameter(7938);-1!==M.indexOf("WebGL")?(E=parseFloat(/^WebGL (\d)/.exec(M)[1]),T=E>=1):-1!==M.indexOf("OpenGL ES")&&(E=parseFloat(/^OpenGL ES (\d)/.exec(M)[1]),T=E>=2);let C=null,I={};const k=new tN,A=new tN;function N(t,n,r){const i=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<r;t++)e.texImage2D(n+t,0,6408,1,1,0,6408,5121,i);return a}const R={};function L(t){!0!==o[t]&&(e.enable(t),o[t]=!0)}function O(t){!1!==o[t]&&(e.disable(t),o[t]=!1)}R[3553]=N(3553,3553,1),R[34067]=N(34067,34069,6),i.setClear(0,0,0,1),a.setClear(1),s.setClear(0),L(2929),a.setFunc(3),$(!1),B(1),L(2884),F(0);const P={100:32774,101:32778,102:32779};if(r)P[103]=32775,P[104]=32776;else{const e=t.get("EXT_blend_minmax");null!==e&&(P[103]=e.MIN_EXT,P[104]=e.MAX_EXT)}const D={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function F(t,n,r,i,a,s,o,l){if(0!==t){if(u||(L(3042),u=!0),5===t)a=a||n,s=s||r,o=o||i,n===h&&a===f||(e.blendEquationSeparate(P[n],P[a]),h=n,f=a),r===p&&i===d&&s===m&&o===g||(e.blendFuncSeparate(D[r],D[i],D[s],D[o]),p=r,d=i,m=s,g=o),c=t,y=null;else if(t!==c||l!==y){if(100===h&&100===f||(e.blendEquation(32774),h=100,f=100),l)switch(t){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,0,769,771);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFunc(0,769);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}p=null,d=null,m=null,g=null,c=t,y=l}}else u&&(O(3042),u=!1)}function $(t){x!==t&&(t?e.frontFace(2304):e.frontFace(2305),x=t)}function B(t){0!==t?(L(2884),t!==v&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):O(2884),v=t}function z(t,n,r){t?(L(32823),w===n&&_===r||(e.polygonOffset(n,r),w=n,_=r)):O(32823)}function U(t){void 0===t&&(t=33984+S-1),C!==t&&(e.activeTexture(t),C=t)}return{buffers:{color:i,depth:a,stencil:s},enable:L,disable:O,useProgram:function(t){return l!==t&&(e.useProgram(t),l=t,!0)},setBlending:F,setMaterial:function(e,t){2===e.side?O(2884):L(2884);let n=1===e.side;t&&(n=!n),$(n),1===e.blending&&!1===e.transparent?F(0):F(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),i.setMask(e.colorWrite);const r=e.stencilWrite;s.setTest(r),r&&(s.setMask(e.stencilWriteMask),s.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),s.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),z(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:$,setCullFace:B,setLineWidth:function(t){t!==b&&(T&&e.lineWidth(t),b=t)},setPolygonOffset:z,setScissorTest:function(e){e?L(3089):O(3089)},activeTexture:U,bindTexture:function(t,n){null===C&&U();let r=I[C];void 0===r&&(r={type:void 0,texture:void 0},I[C]=r),r.type===t&&r.texture===n||(e.bindTexture(t,n||R[t]),r.type=t,r.texture=n)},unbindTexture:function(){const t=I[C];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===k.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),k.copy(t))},viewport:function(t){!1===A.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),A.copy(t))},reset:function(){o={},C=null,I={},l=null,u=null,c=null,h=null,p=null,d=null,f=null,m=null,g=null,y=!1,x=null,v=null,b=null,w=null,_=null,i.reset(),a.reset(),s.reset()}}}function RP(e,t,n,r,i,a,s){const o=i.isWebGL2,l=i.maxTextures,u=i.maxCubemapSize,c=i.maxTextureSize,h=i.maxSamples,p=new WeakMap;let d,f=!1;try{f="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function m(e,t){return f?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function g(e,t,n,r){let i=1;if((e.width>r||e.height>r)&&(i=r/Math.max(e.width,e.height)),i<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const r=t?qA.floorPowerOfTwo:Math.floor,a=r(i*e.width),s=r(i*e.height);void 0===d&&(d=m(a,s));const o=n?m(a,s):d;o.width=a,o.height=s;return o.getContext("2d").drawImage(e,0,0,a,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+s+")."),o}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function y(e){return qA.isPowerOfTwo(e.width)&&qA.isPowerOfTwo(e.height)}function x(e,t){return e.generateMipmaps&&t&&1003!==e.minFilter&&1006!==e.minFilter}function v(t,n,i,a){e.generateMipmap(t);r.get(n).__maxMipLevel=Math.log(Math.max(i,a))*Math.LOG2E}function b(n,r,i){if(!1===o)return r;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let a=r;return 6403===r&&(5126===i&&(a=33326),5131===i&&(a=33325),5121===i&&(a=33321)),6407===r&&(5126===i&&(a=34837),5131===i&&(a=34843),5121===i&&(a=32849)),6408===r&&(5126===i&&(a=34836),5131===i&&(a=34842),5121===i&&(a=32856)),33325!==a&&33326!==a&&34842!==a&&34836!==a||t.get("EXT_color_buffer_float"),a}function w(e){return 1003===e||1004===e||1005===e?9728:9729}function _(t){const n=t.target;n.removeEventListener("dispose",_),function(t){const n=r.get(t);if(void 0===n.__webglInit)return;e.deleteTexture(n.__webglTexture),r.remove(t)}(n),n.isVideoTexture&&p.delete(n),s.memory.textures--}function S(t){const n=t.target;n.removeEventListener("dispose",S),function(t){const n=r.get(t),i=r.get(t.texture);if(!t)return;void 0!==i.__webglTexture&&e.deleteTexture(i.__webglTexture);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(n.__webglFramebuffer[t]),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer[t]);else e.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&e.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&e.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&e.deleteRenderbuffer(n.__webglDepthRenderbuffer);r.remove(t.texture),r.remove(t)}(n),s.memory.textures--}let T=0;function E(e,t){const i=r.get(e);if(e.isVideoTexture&&function(e){const t=s.render.frame;p.get(e)!==t&&(p.set(e,t),e.update())}(e),e.version>0&&i.__version!==e.version){const n=e.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void N(i,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+t),n.bindTexture(3553,i.__webglTexture)}function M(t,i){const s=r.get(t);t.version>0&&s.__version!==t.version?function(t,r,i){if(6!==r.image.length)return;A(t,r),n.activeTexture(33984+i),n.bindTexture(34067,t.__webglTexture),e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment);const s=r&&(r.isCompressedTexture||r.image[0].isCompressedTexture),l=r.image[0]&&r.image[0].isDataTexture,c=[];for(let e=0;e<6;e++)c[e]=s||l?l?r.image[e].image:r.image[e]:g(r.image[e],!1,!0,u);const h=c[0],p=y(h)||o,d=a.convert(r.format),f=a.convert(r.type),m=b(r.internalFormat,d,f);let w;if(k(34067,r,p),s){for(let e=0;e<6;e++){w=c[e].mipmaps;for(let t=0;t<w.length;t++){const i=w[t];1023!==r.format&&1022!==r.format?null!==d?n.compressedTexImage2D(34069+e,t,m,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+e,t,m,i.width,i.height,0,d,f,i.data)}}t.__maxMipLevel=w.length-1}else{w=r.mipmaps;for(let e=0;e<6;e++)if(l){n.texImage2D(34069+e,0,m,c[e].width,c[e].height,0,d,f,c[e].data);for(let t=0;t<w.length;t++){const r=w[t].image[e].image;n.texImage2D(34069+e,t+1,m,r.width,r.height,0,d,f,r.data)}}else{n.texImage2D(34069+e,0,m,d,f,c[e]);for(let t=0;t<w.length;t++){const r=w[t];n.texImage2D(34069+e,t+1,m,d,f,r.image[e])}}t.__maxMipLevel=w.length}x(r,p)&&v(34067,r,h.width,h.height);t.__version=r.version,r.onUpdate&&r.onUpdate(r)}(s,t,i):(n.activeTexture(33984+i),n.bindTexture(34067,s.__webglTexture))}const C={1e3:10497,1001:33071,1002:33648},I={1003:9728,1004:9984,1005:9986,1006:9729,1007:9985,1008:9987};function k(n,a,s){s?(e.texParameteri(n,10242,C[a.wrapS]),e.texParameteri(n,10243,C[a.wrapT]),32879!==n&&35866!==n||e.texParameteri(n,32882,C[a.wrapR]),e.texParameteri(n,10240,I[a.magFilter]),e.texParameteri(n,10241,I[a.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),32879!==n&&35866!==n||e.texParameteri(n,32882,33071),1001===a.wrapS&&1001===a.wrapT||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,w(a.magFilter)),e.texParameteri(n,10241,w(a.minFilter)),1003!==a.minFilter&&1006!==a.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const l=t.get("EXT_texture_filter_anisotropic");if(l){if(1015===a.type&&null===t.get("OES_texture_float_linear"))return;if(1016===a.type&&null===(o||t.get("OES_texture_half_float_linear")))return;(a.anisotropy>1||r.get(a).__currentAnisotropy)&&(e.texParameterf(n,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,i.getMaxAnisotropy())),r.get(a).__currentAnisotropy=a.anisotropy)}}function A(t,n){void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",_),t.__webglTexture=e.createTexture(),s.memory.textures++)}function N(t,r,i){let s=3553;r.isDataTexture2DArray&&(s=35866),r.isDataTexture3D&&(s=32879),A(t,r),n.activeTexture(33984+i),n.bindTexture(s,t.__webglTexture),e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment);const l=function(e){return!o&&(1001!==e.wrapS||1001!==e.wrapT||1003!==e.minFilter&&1006!==e.minFilter)}(r)&&!1===y(r.image),u=g(r.image,l,!1,c),h=y(u)||o,p=a.convert(r.format);let d,f=a.convert(r.type),m=b(r.internalFormat,p,f);k(s,r,h);const w=r.mipmaps;if(r.isDepthTexture)m=6402,o?m=1015===r.type?36012:1014===r.type?33190:1020===r.type?35056:33189:1015===r.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===r.format&&6402===m&&1012!==r.type&&1014!==r.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=1012,f=a.convert(r.type)),1027===r.format&&6402===m&&(m=34041,1020!==r.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=1020,f=a.convert(r.type))),n.texImage2D(3553,0,m,u.width,u.height,0,p,f,null);else if(r.isDataTexture)if(w.length>0&&h){for(let e=0,t=w.length;e<t;e++)d=w[e],n.texImage2D(3553,e,m,d.width,d.height,0,p,f,d.data);r.generateMipmaps=!1,t.__maxMipLevel=w.length-1}else n.texImage2D(3553,0,m,u.width,u.height,0,p,f,u.data),t.__maxMipLevel=0;else if(r.isCompressedTexture){for(let e=0,t=w.length;e<t;e++)d=w[e],1023!==r.format&&1022!==r.format?null!==p?n.compressedTexImage2D(3553,e,m,d.width,d.height,0,d.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,e,m,d.width,d.height,0,p,f,d.data);t.__maxMipLevel=w.length-1}else if(r.isDataTexture2DArray)n.texImage3D(35866,0,m,u.width,u.height,u.depth,0,p,f,u.data),t.__maxMipLevel=0;else if(r.isDataTexture3D)n.texImage3D(32879,0,m,u.width,u.height,u.depth,0,p,f,u.data),t.__maxMipLevel=0;else if(w.length>0&&h){for(let e=0,t=w.length;e<t;e++)d=w[e],n.texImage2D(3553,e,m,p,f,d);r.generateMipmaps=!1,t.__maxMipLevel=w.length-1}else n.texImage2D(3553,0,m,p,f,u),t.__maxMipLevel=0;x(r,h)&&v(s,r,u.width,u.height),t.__version=r.version,r.onUpdate&&r.onUpdate(r)}function R(t,i,s,o){const l=a.convert(i.texture.format),u=a.convert(i.texture.type),c=b(i.texture.internalFormat,l,u);n.texImage2D(o,0,c,i.width,i.height,0,l,u,null),e.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,s,o,r.get(i.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function L(t,n,r){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){let i=33189;if(r){const t=n.depthTexture;t&&t.isDepthTexture&&(1015===t.type?i=36012:1014===t.type&&(i=33190));const r=P(n);e.renderbufferStorageMultisample(36161,r,i,n.width,n.height)}else e.renderbufferStorage(36161,i,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){if(r){const t=P(n);e.renderbufferStorageMultisample(36161,t,35056,n.width,n.height)}else e.renderbufferStorage(36161,34041,n.width,n.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=a.convert(n.texture.format),i=a.convert(n.texture.type),s=b(n.texture.internalFormat,t,i);if(r){const t=P(n);e.renderbufferStorageMultisample(36161,t,s,n.width,n.height)}else e.renderbufferStorage(36161,s,n.width,n.height)}e.bindRenderbuffer(36161,null)}function O(t){const n=r.get(t),i=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,n){if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,t),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),E(n.depthTexture,0);const i=r.get(n.depthTexture).__webglTexture;if(1026===n.depthTexture.format)e.framebufferTexture2D(36160,36096,3553,i,0);else{if(1027!==n.depthTexture.format)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(36160,33306,3553,i,0)}}(n.__webglFramebuffer,t)}else if(i){n.__webglDepthbuffer=[];for(let r=0;r<6;r++)e.bindFramebuffer(36160,n.__webglFramebuffer[r]),n.__webglDepthbuffer[r]=e.createRenderbuffer(),L(n.__webglDepthbuffer[r],t,!1)}else e.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=e.createRenderbuffer(),L(n.__webglDepthbuffer,t,!1);e.bindFramebuffer(36160,null)}function P(e){return o&&e.isWebGLMultisampleRenderTarget?Math.min(h,e.samples):0}let D=!1,F=!1;this.allocateTextureUnit=function(){const e=T;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),T+=1,e},this.resetTextureUnits=function(){T=0},this.setTexture2D=E,this.setTexture2DArray=function(e,t){const i=r.get(e);e.version>0&&i.__version!==e.version?N(i,e,t):(n.activeTexture(33984+t),n.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(e,t){const i=r.get(e);e.version>0&&i.__version!==e.version?N(i,e,t):(n.activeTexture(33984+t),n.bindTexture(32879,i.__webglTexture))},this.setTextureCube=M,this.setupRenderTarget=function(t){const i=r.get(t),l=r.get(t.texture);t.addEventListener("dispose",S),l.__webglTexture=e.createTexture(),s.memory.textures++;const u=!0===t.isWebGLCubeRenderTarget,c=!0===t.isWebGLMultisampleRenderTarget,h=y(t)||o;if(!o||1022!==t.texture.format||1015!==t.texture.type&&1016!==t.texture.type||(t.texture.format=1023,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),u){i.__webglFramebuffer=[];for(let t=0;t<6;t++)i.__webglFramebuffer[t]=e.createFramebuffer()}else if(i.__webglFramebuffer=e.createFramebuffer(),c)if(o){i.__webglMultisampledFramebuffer=e.createFramebuffer(),i.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,i.__webglColorRenderbuffer);const n=a.convert(t.texture.format),r=a.convert(t.texture.type),s=b(t.texture.internalFormat,n,r),o=P(t);e.renderbufferStorageMultisample(36161,o,s,t.width,t.height),e.bindFramebuffer(36160,i.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,i.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(i.__webglDepthRenderbuffer=e.createRenderbuffer(),L(i.__webglDepthRenderbuffer,t,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(u){n.bindTexture(34067,l.__webglTexture),k(34067,t.texture,h);for(let e=0;e<6;e++)R(i.__webglFramebuffer[e],t,36064,34069+e);x(t.texture,h)&&v(34067,t.texture,t.width,t.height),n.bindTexture(34067,null)}else n.bindTexture(3553,l.__webglTexture),k(3553,t.texture,h),R(i.__webglFramebuffer,t,36064,3553),x(t.texture,h)&&v(3553,t.texture,t.width,t.height),n.bindTexture(3553,null);t.depthBuffer&&O(t)},this.updateRenderTargetMipmap=function(e){const t=e.texture;if(x(t,y(e)||o)){const i=e.isWebGLCubeRenderTarget?34067:3553,a=r.get(t).__webglTexture;n.bindTexture(i,a),v(i,t,e.width,e.height),n.bindTexture(i,null)}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(o){const n=r.get(t);e.bindFramebuffer(36008,n.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,n.__webglFramebuffer);const i=t.width,a=t.height;let s=16384;t.depthBuffer&&(s|=256),t.stencilBuffer&&(s|=1024),e.blitFramebuffer(0,0,i,a,0,0,i,a,s,9728),e.bindFramebuffer(36160,n.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===D&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),D=!0),e=e.texture),E(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===F&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),F=!0),e=e.texture),M(e,t)}}function LP(e,t,n){const r=n.isWebGL2;return{convert:function(e){let n;if(1009===e)return 5121;if(1017===e)return 32819;if(1018===e)return 32820;if(1019===e)return 33635;if(1010===e)return 5120;if(1011===e)return 5122;if(1012===e)return 5123;if(1013===e)return 5124;if(1014===e)return 5125;if(1015===e)return 5126;if(1016===e)return r?5131:(n=t.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(1021===e)return 6406;if(1022===e)return 6407;if(1023===e)return 6408;if(1024===e)return 6409;if(1025===e)return 6410;if(1026===e)return 6402;if(1027===e)return 34041;if(1028===e)return 6403;if(1029===e)return 36244;if(1030===e)return 33319;if(1031===e)return 33320;if(1032===e)return 36248;if(1033===e)return 36249;if(33776===e||33777===e||33778===e||33779===e){if(n=t.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(33776===e)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===e)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===e)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===e)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===e||35841===e||35842===e||35843===e){if(n=t.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(35840===e)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===e)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===e)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===e)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===e)return n=t.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===e||37496===e)&&(n=t.get("WEBGL_compressed_texture_etc"),null!==n)){if(37492===e)return n.COMPRESSED_RGB8_ETC2;if(37496===e)return n.COMPRESSED_RGBA8_ETC2_EAC}return 37808===e||37809===e||37810===e||37811===e||37812===e||37813===e||37814===e||37815===e||37816===e||37817===e||37818===e||37819===e||37820===e||37821===e||37840===e||37841===e||37842===e||37843===e||37844===e||37845===e||37846===e||37847===e||37848===e||37849===e||37850===e||37851===e||37852===e||37853===e?(n=t.get("WEBGL_compressed_texture_astc"),null!==n?e:null):36492===e?(n=t.get("EXT_texture_compression_bptc"),null!==n?e:null):1020===e?r?34042:(n=t.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}function OP(e=[]){EL.call(this),this.cameras=e}function PP(){rR.call(this),this.type="Group"}function DP(){this._targetRay=null,this._grip=null,this._hand=null}function FP(e,t){const n=this;let r=null,i=1,a=null,s="local-floor",o=null;const l=[],u=new Map,c=new EL;c.layers.enable(1),c.viewport=new tN;const h=new EL;h.layers.enable(2),h.viewport=new tN;const p=[c,h],d=new OP;d.layers.enable(1),d.layers.enable(2);let f=null,m=null;function g(e){const t=u.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function y(){u.forEach((function(e,t){e.disconnect(t)})),u.clear(),f=null,m=null,e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),S.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function x(e){const t=r.inputSources;for(let e=0;e<l.length;e++)u.set(t[e],l[e]);for(let t=0;t<e.removed.length;t++){const n=e.removed[t],r=u.get(n);r&&(r.dispatchEvent({type:"disconnected",data:n}),u.delete(n))}for(let t=0;t<e.added.length;t++){const n=e.added[t],r=u.get(n);r&&r.dispatchEvent({type:"connected",data:n})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=l[e];return void 0===t&&(t=new DP,l[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=l[e];return void 0===t&&(t=new DP,l[e]=t),t.getGripSpace()},this.getHand=function(e){let t=l[e];return void 0===t&&(t=new DP,l[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){i=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){s=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return a},this.getSession=function(){return r},this.setSession=async function(e){if(r=e,null!==r){r.addEventListener("select",g),r.addEventListener("selectstart",g),r.addEventListener("selectend",g),r.addEventListener("squeeze",g),r.addEventListener("squeezestart",g),r.addEventListener("squeezeend",g),r.addEventListener("end",y),r.addEventListener("inputsourceschange",x);const e=t.getContextAttributes();!0!==e.xrCompatible&&await t.makeXRCompatible();const o={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:i},l=new XRWebGLLayer(r,t,o);r.updateRenderState({baseLayer:l}),a=await r.requestReferenceSpace(s),S.setContext(r),S.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const v=new iN,b=new iN;function w(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.getCamera=function(e){d.near=h.near=c.near=e.near,d.far=h.far=c.far=e.far,f===d.near&&m===d.far||(r.updateRenderState({depthNear:d.near,depthFar:d.far}),f=d.near,m=d.far);const t=e.parent,n=d.cameras;w(d,t);for(let e=0;e<n.length;e++)w(n[e],t);e.matrixWorld.copy(d.matrixWorld),e.matrix.copy(d.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);const i=e.children;for(let e=0,t=i.length;e<t;e++)i[e].updateMatrixWorld(!0);return 2===n.length?function(e,t,n){v.setFromMatrixPosition(t.matrixWorld),b.setFromMatrixPosition(n.matrixWorld);const r=v.distanceTo(b),i=t.projectionMatrix.elements,a=n.projectionMatrix.elements,s=i[14]/(i[10]-1),o=i[14]/(i[10]+1),l=(i[9]+1)/i[5],u=(i[9]-1)/i[5],c=(i[8]-1)/i[0],h=(a[8]+1)/a[0],p=s*c,d=s*h,f=r/(-c+h),m=f*-c;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(f),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const g=s+f,y=o+f,x=p-m,w=d+(r-m),_=l*o/y*g,S=u*o/y*g;e.projectionMatrix.makePerspective(x,w,_,S,g,y)}(d,c,h):d.projectionMatrix.copy(c.projectionMatrix),d};let _=null;const S=new LL;S.setAnimationLoop((function(t,n){if(o=n.getViewerPose(a),null!==o){const t=o.views,n=r.renderState.baseLayer;e.setFramebuffer(n.framebuffer);let i=!1;t.length!==d.cameras.length&&(d.cameras.length=0,i=!0);for(let e=0;e<t.length;e++){const r=t[e],a=n.getViewport(r),s=p[e];s.matrix.fromArray(r.transform.matrix),s.projectionMatrix.fromArray(r.projectionMatrix),s.viewport.set(a.x,a.y,a.width,a.height),0===e&&d.matrix.copy(s.matrix),!0===i&&d.cameras.push(s)}}const i=r.inputSources;for(let e=0;e<l.length;e++){const t=l[e],r=i[e];t.update(r,n,a)}_&&_(t,n)})),this.setAnimationLoop=function(e){_=e},this.dispose=function(){}}function $P(e){function t(t,n){t.opacity.value=n.opacity,n.color&&t.diffuse.value.copy(n.color),n.emissive&&t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(t.map.value=n.map),n.alphaMap&&(t.alphaMap.value=n.alphaMap),n.specularMap&&(t.specularMap.value=n.specularMap);const r=e.get(n).envMap;if(r){t.envMap.value=r,t.flipEnvMap.value=r.isCubeTexture&&r._needsFlipEnvMap?-1:1,t.reflectivity.value=n.reflectivity,t.refractionRatio.value=n.refractionRatio;const i=e.get(r).__maxMipLevel;void 0!==i&&(t.maxMipLevel.value=i)}let i,a;n.lightMap&&(t.lightMap.value=n.lightMap,t.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(t.aoMap.value=n.aoMap,t.aoMapIntensity.value=n.aoMapIntensity),n.map?i=n.map:n.specularMap?i=n.specularMap:n.displacementMap?i=n.displacementMap:n.normalMap?i=n.normalMap:n.bumpMap?i=n.bumpMap:n.roughnessMap?i=n.roughnessMap:n.metalnessMap?i=n.metalnessMap:n.alphaMap?i=n.alphaMap:n.emissiveMap?i=n.emissiveMap:n.clearcoatMap?i=n.clearcoatMap:n.clearcoatNormalMap?i=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(i=n.clearcoatRoughnessMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix)),n.aoMap?a=n.aoMap:n.lightMap&&(a=n.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),t.uv2Transform.value.copy(a.matrix))}function n(t,n){t.roughness.value=n.roughness,t.metalness.value=n.metalness,n.roughnessMap&&(t.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(t.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(t.emissiveMap.value=n.emissiveMap),n.bumpMap&&(t.bumpMap.value=n.bumpMap,t.bumpScale.value=n.bumpScale,1===n.side&&(t.bumpScale.value*=-1)),n.normalMap&&(t.normalMap.value=n.normalMap,t.normalScale.value.copy(n.normalScale),1===n.side&&t.normalScale.value.negate()),n.displacementMap&&(t.displacementMap.value=n.displacementMap,t.displacementScale.value=n.displacementScale,t.displacementBias.value=n.displacementBias);e.get(n).envMap&&(t.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,r,i,a){r.isMeshBasicMaterial?t(e,r):r.isMeshLambertMaterial?(t(e,r),function(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(e,r)):r.isMeshToonMaterial?(t(e,r),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,r)):r.isMeshPhongMaterial?(t(e,r),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,r)):r.isMeshStandardMaterial?(t(e,r),r.isMeshPhysicalMaterial?function(e,t){n(e,t),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen);t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap);t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap);t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,1===t.side&&e.clearcoatNormalScale.value.negate());e.transmission.value=t.transmission,t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap)}(e,r):n(e,r)):r.isMeshMatcapMaterial?(t(e,r),function(e,t){t.matcap&&(e.matcap.value=t.matcap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,r)):r.isMeshDepthMaterial?(t(e,r),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,r)):r.isMeshDistanceMaterial?(t(e,r),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,r)):r.isMeshNormalMaterial?(t(e,r),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,r)):r.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,r),r.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,r)):r.isPointsMaterial?function(e,t,n,r){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*r,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let i;t.map?i=t.map:t.alphaMap&&(i=t.alphaMap);void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}(e,r,i,a):r.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let n;t.map?n=t.map:t.alphaMap&&(n=t.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,r):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function BP(e){const t=void 0!==(e=e||{}).canvas?e.canvas:function(){const e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.style.display="block",e}(),n=void 0!==e.context?e.context:null,r=void 0!==e.alpha&&e.alpha,i=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,s=void 0!==e.antialias&&e.antialias,o=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,u=void 0!==e.powerPreference?e.powerPreference:"default",c=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let h=null,p=null;const d=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const f=this;let m=!1,g=null,y=0,x=0,v=null,b=null,w=-1,_=null;const S=new tN,T=new tN;let E=null,M=t.width,C=t.height,I=1,k=null,A=null;const N=new tN(0,0,M,C),R=new tN(0,0,M,C);let L=!1;const O=new RL;let P=!1,D=!1;const F=new RN,$=new iN,B={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function z(){return null===v?I:1}let U,V,W,H,G,j,q,X,K,Y,Z,J,Q,ee,te,ne,re,ie,ae,se,oe,le=n;function ue(e,n){for(let r=0;r<e.length;r++){const i=e[r],a=t.getContext(i,n);if(null!==a)return a}return null}try{const e={alpha:r,depth:i,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:c};if(t.addEventListener("webglcontextlost",de,!1),t.addEventListener("webglcontextrestored",fe,!1),null===le){const t=["webgl2","webgl","experimental-webgl"];if(!0===f.isWebGL1Renderer&&t.shift(),le=ue(t,e),null===le)throw ue(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===le.getShaderPrecisionFormat&&(le.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function ce(){U=new GL(le),V=new VL(le,U,e),U.init(V),se=new LP(le,U,V),W=new NP(le,U,V),W.scissor(T.copy(R).multiplyScalar(I).floor()),W.viewport(S.copy(N).multiplyScalar(I).floor()),H=new XL(le),G=new yP,j=new RP(le,U,W,G,V,se,H),q=new HL(f),X=new OL(le,V),oe=new zL(le,U,X,V),K=new jL(le,X,H,oe),Y=new JL(le,K,X,H),re=new ZL(le),te=new WL(G),Z=new gP(f,q,U,V,oe,te),J=new $P(G),Q=new wP(G),ee=new CP(U,V),ne=new BL(f,q,W,Y,o),ie=new UL(le,U,H,V),ae=new qL(le,U,H,V),H.programs=Z.programs,f.capabilities=V,f.extensions=U,f.properties=G,f.renderLists=Q,f.state=W,f.info=H}ce();const he=new FP(f,le);this.xr=he;const pe=new AP(f,Y,V.maxTextureSize);function de(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function fe(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1,ce()}function me(e){const t=e.target;t.removeEventListener("dispose",me),function(e){ge(e),G.remove(e)}(t)}function ge(e){const t=G.get(e).program;void 0!==t&&Z.releaseProgram(t)}this.shadowMap=pe,this.getContext=function(){return le},this.getContextAttributes=function(){return le.getContextAttributes()},this.forceContextLoss=function(){const e=U.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=U.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return I},this.setPixelRatio=function(e){void 0!==e&&(I=e,this.setSize(M,C,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new XA),e.set(M,C)},this.setSize=function(e,n,r){he.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(M=e,C=n,t.width=Math.floor(e*I),t.height=Math.floor(n*I),!1!==r&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new XA),e.set(M*I,C*I).floor()},this.setDrawingBufferSize=function(e,n,r){M=e,C=n,I=r,t.width=Math.floor(e*r),t.height=Math.floor(n*r),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new tN),e.copy(S)},this.getViewport=function(e){return e.copy(N)},this.setViewport=function(e,t,n,r){e.isVector4?N.set(e.x,e.y,e.z,e.w):N.set(e,t,n,r),W.viewport(S.copy(N).multiplyScalar(I).floor())},this.getScissor=function(e){return e.copy(R)},this.setScissor=function(e,t,n,r){e.isVector4?R.set(e.x,e.y,e.z,e.w):R.set(e,t,n,r),W.scissor(T.copy(R).multiplyScalar(I).floor())},this.getScissorTest=function(){return L},this.setScissorTest=function(e){W.setScissorTest(L=e)},this.setOpaqueSort=function(e){k=e},this.setTransparentSort=function(e){A=e},this.getClearColor=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),e=new ER),e.copy(ne.getClearColor())},this.setClearColor=function(){ne.setClearColor.apply(ne,arguments)},this.getClearAlpha=function(){return ne.getClearAlpha()},this.setClearAlpha=function(){ne.setClearAlpha.apply(ne,arguments)},this.clear=function(e,t,n){let r=0;(void 0===e||e)&&(r|=16384),(void 0===t||t)&&(r|=256),(void 0===n||n)&&(r|=1024),le.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",de,!1),t.removeEventListener("webglcontextrestored",fe,!1),Q.dispose(),ee.dispose(),G.dispose(),q.dispose(),Y.dispose(),oe.dispose(),he.dispose(),xe.stop()},this.renderBufferImmediate=function(e,t){oe.initAttributes();const n=G.get(e);e.hasPositions&&!n.position&&(n.position=le.createBuffer()),e.hasNormals&&!n.normal&&(n.normal=le.createBuffer()),e.hasUvs&&!n.uv&&(n.uv=le.createBuffer()),e.hasColors&&!n.color&&(n.color=le.createBuffer());const r=t.getAttributes();e.hasPositions&&(le.bindBuffer(34962,n.position),le.bufferData(34962,e.positionArray,35048),oe.enableAttribute(r.position),le.vertexAttribPointer(r.position,3,5126,!1,0,0)),e.hasNormals&&(le.bindBuffer(34962,n.normal),le.bufferData(34962,e.normalArray,35048),oe.enableAttribute(r.normal),le.vertexAttribPointer(r.normal,3,5126,!1,0,0)),e.hasUvs&&(le.bindBuffer(34962,n.uv),le.bufferData(34962,e.uvArray,35048),oe.enableAttribute(r.uv),le.vertexAttribPointer(r.uv,2,5126,!1,0,0)),e.hasColors&&(le.bindBuffer(34962,n.color),le.bufferData(34962,e.colorArray,35048),oe.enableAttribute(r.color),le.vertexAttribPointer(r.color,3,5126,!1,0,0)),oe.disableUnusedAttributes(),le.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,r,i,a){null===t&&(t=B);const s=i.isMesh&&i.matrixWorld.determinant()<0,o=Se(e,t,r,i);W.setMaterial(r,s);let l=n.index;const u=n.attributes.position;if(null===l){if(void 0===u||0===u.count)return}else if(0===l.count)return;let c,h=1;!0===r.wireframe&&(l=K.getWireframeAttribute(n),h=2),(r.morphTargets||r.morphNormals)&&re.update(i,n,r,o),oe.setup(i,r,o,n,l);let p=ie;null!==l&&(c=X.get(l),p=ae,p.setIndex(c));const d=null!==l?l.count:u.count,f=n.drawRange.start*h,m=n.drawRange.count*h,g=null!==a?a.start*h:0,y=null!==a?a.count*h:1/0,x=Math.max(f,g),v=Math.min(d,f+m,g+y)-1,b=Math.max(0,v-x+1);if(0!==b){if(i.isMesh)!0===r.wireframe?(W.setLineWidth(r.wireframeLinewidth*z()),p.setMode(1)):p.setMode(4);else if(i.isLine){let e=r.linewidth;void 0===e&&(e=1),W.setLineWidth(e*z()),i.isLineSegments?p.setMode(1):i.isLineLoop?p.setMode(2):p.setMode(3)}else i.isPoints?p.setMode(0):i.isSprite&&p.setMode(4);if(i.isInstancedMesh)p.renderInstances(x,b,i.count);else if(n.isInstancedBufferGeometry){const e=Math.min(n.instanceCount,n._maxInstanceCount);p.renderInstances(x,b,e)}else p.render(x,b)}},this.compile=function(e,t){p=ee.get(e),p.init(),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(p.pushLight(e),e.castShadow&&p.pushShadow(e))})),p.setupLights();const n=new WeakMap;e.traverse((function(t){const r=t.material;if(r)if(Array.isArray(r))for(let i=0;i<r.length;i++){const a=r[i];!1===n.has(a)&&(_e(a,e,t),n.set(a))}else!1===n.has(r)&&(_e(r,e,t),n.set(r))}))};let ye=null;const xe=new LL;function ve(e,t,n,r){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)p.pushLight(e),e.castShadow&&p.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||O.intersectsSprite(e)){r&&$.setFromMatrixPosition(e.matrixWorld).applyMatrix4(F);const t=Y.update(e),i=e.material;i.visible&&h.push(e,t,i,n,$.z,null)}}else if(e.isImmediateRenderObject)r&&$.setFromMatrixPosition(e.matrixWorld).applyMatrix4(F),h.push(e,null,e.material,n,$.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==H.render.frame&&(e.skeleton.update(),e.skeleton.frame=H.render.frame),!e.frustumCulled||O.intersectsObject(e))){r&&$.setFromMatrixPosition(e.matrixWorld).applyMatrix4(F);const t=Y.update(e),i=e.material;if(Array.isArray(i)){const r=t.groups;for(let a=0,s=r.length;a<s;a++){const s=r[a],o=i[s.materialIndex];o&&o.visible&&h.push(e,t,o,n,$.z,s)}}else i.visible&&h.push(e,t,i,n,$.z,null)}const i=e.children;for(let e=0,a=i.length;e<a;e++)ve(i[e],t,n,r)}function be(e,t,n){const r=!0===t.isScene?t.overrideMaterial:null;for(let i=0,a=e.length;i<a;i++){const a=e[i],s=a.object,o=a.geometry,l=null===r?a.material:r,u=a.group;if(n.isArrayCamera){const e=n.cameras;for(let n=0,r=e.length;n<r;n++){const r=e[n];s.layers.test(r.layers)&&(W.viewport(S.copy(r.viewport)),p.setupLightsView(r),we(s,t,r,o,l,u))}}else we(s,t,n,o,l,u)}}function we(e,t,n,r,i,a){if(e.onBeforeRender(f,t,n,r,i,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){const r=Se(n,t,i,e);W.setMaterial(i),oe.reset(),function(e,t){e.render((function(e){f.renderBufferImmediate(e,t)}))}(e,r)}else f.renderBufferDirect(n,t,r,i,e,a);e.onAfterRender(f,t,n,r,i,a)}function _e(e,t,n){!0!==t.isScene&&(t=B);const r=G.get(e),i=p.state.lights,a=p.state.shadowsArray,s=i.state.version,o=Z.getParameters(e,i.state,a,t,n),l=Z.getProgramCacheKey(o);let u=r.program,c=!0;if(r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=q.get(e.envMap||r.environment),void 0===u)e.addEventListener("dispose",me);else if(u.cacheKey!==l)ge(e);else if(r.lightsStateVersion!==s)c=!1;else{if(void 0!==o.shaderID)return;c=!1}c&&(o.uniforms=Z.getUniforms(e),e.onBeforeCompile(o,f),u=Z.acquireProgram(o,l),r.program=u,r.uniforms=o.uniforms,r.outputEncoding=o.outputEncoding);const h=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(r.numClippingPlanes=te.numPlanes,r.numIntersection=te.numIntersection,h.clippingPlanes=te.uniform),r.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),r.lightsStateVersion=s,r.needsLights&&(h.ambientLightColor.value=i.state.ambient,h.lightProbe.value=i.state.probe,h.directionalLights.value=i.state.directional,h.directionalLightShadows.value=i.state.directionalShadow,h.spotLights.value=i.state.spot,h.spotLightShadows.value=i.state.spotShadow,h.rectAreaLights.value=i.state.rectArea,h.ltc_1.value=i.state.rectAreaLTC1,h.ltc_2.value=i.state.rectAreaLTC2,h.pointLights.value=i.state.point,h.pointLightShadows.value=i.state.pointShadow,h.hemisphereLights.value=i.state.hemi,h.directionalShadowMap.value=i.state.directionalShadowMap,h.directionalShadowMatrix.value=i.state.directionalShadowMatrix,h.spotShadowMap.value=i.state.spotShadowMap,h.spotShadowMatrix.value=i.state.spotShadowMatrix,h.pointShadowMap.value=i.state.pointShadowMap,h.pointShadowMatrix.value=i.state.pointShadowMatrix);const d=r.program.getUniforms(),m=KO.seqWithValue(d.seq,h);r.uniformsList=m}function Se(e,t,n,r){!0!==t.isScene&&(t=B),j.resetTextureUnits();const i=t.fog,a=n.isMeshStandardMaterial?t.environment:null,s=null===v?f.outputEncoding:v.texture.encoding,o=q.get(n.envMap||a),l=G.get(n),u=p.state.lights;if(!0===P&&(!0===D||e!==_)){const t=e===_&&n.id===w;te.setState(n,e,t)}n.version===l.__version?n.fog&&l.fog!==i||l.environment!==a||l.needsLights&&l.lightsStateVersion!==u.state.version?_e(n,t,r):void 0===l.numClippingPlanes||l.numClippingPlanes===te.numPlanes&&l.numIntersection===te.numIntersection?(l.outputEncoding!==s||l.envMap!==o)&&_e(n,t,r):_e(n,t,r):(_e(n,t,r),l.__version=n.version);let c=!1,h=!1,d=!1;const m=l.program,g=m.getUniforms(),y=l.uniforms;if(W.useProgram(m.program)&&(c=!0,h=!0,d=!0),n.id!==w&&(w=n.id,h=!0),c||_!==e){if(g.setValue(le,"projectionMatrix",e.projectionMatrix),V.logarithmicDepthBuffer&&g.setValue(le,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),_!==e&&(_=e,h=!0,d=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const t=g.map.cameraPosition;void 0!==t&&t.setValue(le,$.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&g.setValue(le,"isOrthographic",!0===e.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&g.setValue(le,"viewMatrix",e.matrixWorldInverse)}if(n.skinning){g.setOptional(le,r,"bindMatrix"),g.setOptional(le,r,"bindMatrixInverse");const e=r.skeleton;if(e){const t=e.bones;if(V.floatVertexTextures){if(null===e.boneTexture){let n=Math.sqrt(4*t.length);n=qA.ceilPowerOfTwo(n),n=Math.max(n,4);const r=new Float32Array(n*n*4);r.set(e.boneMatrices);const i=new kL(r,n,n,1023,1015);e.boneMatrices=r,e.boneTexture=i,e.boneTextureSize=n}g.setValue(le,"boneTexture",e.boneTexture,j),g.setValue(le,"boneTextureSize",e.boneTextureSize)}else g.setOptional(le,e,"boneMatrices")}}var x,b;return(h||l.receiveShadow!==r.receiveShadow)&&(l.receiveShadow=r.receiveShadow,g.setValue(le,"receiveShadow",r.receiveShadow)),h&&(g.setValue(le,"toneMappingExposure",f.toneMappingExposure),l.needsLights&&(b=d,(x=y).ambientLightColor.needsUpdate=b,x.lightProbe.needsUpdate=b,x.directionalLights.needsUpdate=b,x.directionalLightShadows.needsUpdate=b,x.pointLights.needsUpdate=b,x.pointLightShadows.needsUpdate=b,x.spotLights.needsUpdate=b,x.spotLightShadows.needsUpdate=b,x.rectAreaLights.needsUpdate=b,x.hemisphereLights.needsUpdate=b),i&&n.fog&&J.refreshFogUniforms(y,i),J.refreshMaterialUniforms(y,n,I,C),KO.upload(le,l.uniformsList,y,j)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(KO.upload(le,l.uniformsList,y,j),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&g.setValue(le,"center",r.center),g.setValue(le,"modelViewMatrix",r.modelViewMatrix),g.setValue(le,"normalMatrix",r.normalMatrix),g.setValue(le,"modelMatrix",r.matrixWorld),m}xe.setAnimationLoop((function(e){he.isPresenting||ye&&ye(e)})),"undefined"!=typeof window&&xe.setContext(window),this.setAnimationLoop=function(e){ye=e,he.setAnimationLoop(e),null===e?xe.stop():xe.start()},this.render=function(e,t){let n,r;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),r=arguments[3]),void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===m)return;oe.resetDefaultState(),w=-1,_=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===he.enabled&&!0===he.isPresenting&&(t=he.getCamera(t)),!0===e.isScene&&e.onBeforeRender(f,e,t,n||v),p=ee.get(e,d.length),p.init(),d.push(p),F.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),O.setFromProjectionMatrix(F),D=this.localClippingEnabled,P=te.init(this.clippingPlanes,D,t),h=Q.get(e,t),h.init(),ve(e,t,0,f.sortObjects),h.finish(),!0===f.sortObjects&&h.sort(k,A),!0===P&&te.beginShadows();const i=p.state.shadowsArray;pe.render(i,e,t),p.setupLights(),p.setupLightsView(t),!0===P&&te.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),ne.render(h,e,t,r);const a=h.opaque,s=h.transparent;a.length>0&&be(a,e,t),s.length>0&&be(s,e,t),!0===e.isScene&&e.onAfterRender(f,e,t),null!==v&&(j.updateRenderTargetMipmap(v),j.updateMultisampleRenderTarget(v)),W.buffers.depth.setTest(!0),W.buffers.depth.setMask(!0),W.buffers.color.setMask(!0),W.setPolygonOffset(!1),d.pop(),p=d.length>0?d[d.length-1]:null,h=null},this.setFramebuffer=function(e){g!==e&&null===v&&le.bindFramebuffer(36160,e),g=e},this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return x},this.getRenderList=function(){return h},this.setRenderList=function(e){h=e},this.getRenderTarget=function(){return v},this.setRenderTarget=function(e,t=0,n=0){v=e,y=t,x=n,e&&void 0===G.get(e).__webglFramebuffer&&j.setupRenderTarget(e);let r=g,i=!1;if(e){const n=G.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(r=n[t],i=!0):r=e.isWebGLMultisampleRenderTarget?G.get(e).__webglMultisampledFramebuffer:n,S.copy(e.viewport),T.copy(e.scissor),E=e.scissorTest}else S.copy(N).multiplyScalar(I).floor(),T.copy(R).multiplyScalar(I).floor(),E=L;if(b!==r&&(le.bindFramebuffer(36160,r),b=r),W.viewport(S),W.scissor(T),W.setScissorTest(E),i){const r=G.get(e.texture);le.framebufferTexture2D(36160,36064,34069+t,r.__webglTexture,n)}},this.readRenderTargetPixels=function(e,t,n,r,i,a,s){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=G.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){let s=!1;o!==b&&(le.bindFramebuffer(36160,o),s=!0);try{const o=e.texture,l=o.format,u=o.type;if(1023!==l&&se.convert(l)!==le.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const c=1016===u&&(U.has("EXT_color_buffer_half_float")||V.isWebGL2&&U.has("EXT_color_buffer_float"));if(!(1009===u||se.convert(u)===le.getParameter(35738)||1015===u&&(V.isWebGL2||U.has("OES_texture_float")||U.has("WEBGL_color_buffer_float"))||c))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===le.checkFramebufferStatus(36160)?t>=0&&t<=e.width-r&&n>=0&&n<=e.height-i&&le.readPixels(t,n,r,i,se.convert(l),se.convert(u),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&le.bindFramebuffer(36160,b)}}},this.copyFramebufferToTexture=function(e,t,n=0){const r=Math.pow(2,-n),i=Math.floor(t.image.width*r),a=Math.floor(t.image.height*r),s=se.convert(t.format);j.setTexture2D(t,0),le.copyTexImage2D(3553,n,s,e.x,e.y,i,a,0),W.unbindTexture()},this.copyTextureToTexture=function(e,t,n,r=0){const i=t.image.width,a=t.image.height,s=se.convert(n.format),o=se.convert(n.type);j.setTexture2D(n,0),le.pixelStorei(37440,n.flipY),le.pixelStorei(37441,n.premultiplyAlpha),le.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?le.texSubImage2D(3553,r,e.x,e.y,i,a,s,o,t.image.data):t.isCompressedTexture?le.compressedTexSubImage2D(3553,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):le.texSubImage2D(3553,r,e.x,e.y,s,o,t.image),0===r&&n.generateMipmaps&&le.generateMipmap(3553),W.unbindTexture()},this.initTexture=function(e){j.setTexture2D(e,0),W.unbindTexture()},this.resetState=function(){W.reset(),oe.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function zP(e){BP.call(this,e)}OP.prototype=Object.assign(Object.create(EL.prototype),{constructor:OP,isArrayCamera:!0}),PP.prototype=Object.assign(Object.create(rR.prototype),{constructor:PP,isGroup:!0}),Object.assign(DP.prototype,{constructor:DP,getHandSpace:function(){return null===this._hand&&(this._hand=new PP,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new PP,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new PP,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(e,t,n){let r=null,i=null,a=null;const s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(l&&e.hand){a=!0;for(const r of e.hand.values()){const e=t.getJointPose(r,n);if(void 0===l.joints[r.jointName]){const e=new PP;e.matrixAutoUpdate=!1,e.visible=!1,l.joints[r.jointName]=e,l.add(e)}const i=l.joints[r.jointName];null!==e&&(i.matrix.fromArray(e.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.jointRadius=e.radius),i.visible=null!==e}const r=l.joints["index-finger-tip"],i=l.joints["thumb-tip"],s=r.position.distanceTo(i.position),o=.02,u=.005;l.inputState.pinching&&s>o+u?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&s<=o-u&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==s&&(r=t.getPose(e.targetRaySpace,n),null!==r&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale))),null!==o&&e.gripSpace&&(i=t.getPose(e.gripSpace,n),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale)));return null!==s&&(s.visible=null!==r),null!==o&&(o.visible=null!==i),null!==l&&(l.visible=null!==a),this}}),Object.assign(FP.prototype,HA.prototype),zP.prototype=Object.assign(Object.create(BP.prototype),{constructor:zP,isWebGL1Renderer:!0});class UP{constructor(e,t,n){Object.defineProperty(this,"isFog",{value:!0}),this.name="",this.color=new ER(e),this.near=void 0!==t?t:1,this.far=void 0!==n?n:1e3}clone(){return new UP(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class VP extends rR{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}function WP(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=qA.generateUUID()}Object.defineProperty(WP.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(WP.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(let r=0,i=this.stride;r<i;r++)this.array[e+r]=t.array[n+r];return this},set:function(e,t=0){return this.array.set(e,t),this},clone:function(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=qA.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new WP(new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),this.stride);return t.setUsage(this.usage),t},onUpload:function(e){return this.onUploadCallback=e,this},toJSON:function(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=qA.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const HP=new iN;function GP(e,t,n,r){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===r}function jP(e){IR.call(this),this.type="SpriteMaterial",this.color=new ER(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}let qP;Object.defineProperties(GP.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(e){this.data.needsUpdate=e}}}),Object.assign(GP.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(let t=0,n=this.data.count;t<n;t++)HP.x=this.getX(t),HP.y=this.getY(t),HP.z=this.getZ(t),HP.applyMatrix4(e),this.setXYZ(t,HP.x,HP.y,HP.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=i,this},clone:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return new RR(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new GP(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}),jP.prototype=Object.create(IR.prototype),jP.prototype.constructor=jP,jP.prototype.isSpriteMaterial=!0,jP.prototype.copy=function(e){return IR.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};const XP=new iN,KP=new iN,YP=new iN,ZP=new XA,JP=new XA,QP=new RN,eD=new iN,tD=new iN,nD=new iN,rD=new XA,iD=new XA,aD=new XA;function sD(e){if(rR.call(this),this.type="Sprite",void 0===qP){qP=new QR;const e=new WP(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);qP.setIndex([0,1,2,0,2,3]),qP.setAttribute("position",new GP(e,3,0,!1)),qP.setAttribute("uv",new GP(e,2,3,!1))}this.geometry=qP,this.material=void 0!==e?e:new jP,this.center=new XA(.5,.5)}function oD(e,t,n,r,i,a){ZP.subVectors(e,n).addScalar(.5).multiply(r),void 0!==i?(JP.x=a*ZP.x-i*ZP.y,JP.y=i*ZP.x+a*ZP.y):JP.copy(ZP),e.copy(t),e.x+=JP.x,e.y+=JP.y,e.applyMatrix4(QP)}sD.prototype=Object.assign(Object.create(rR.prototype),{constructor:sD,isSprite:!0,raycast:function(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),KP.setFromMatrixScale(this.matrixWorld),QP.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),YP.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&KP.multiplyScalar(-YP.z);const n=this.material.rotation;let r,i;0!==n&&(i=Math.cos(n),r=Math.sin(n));const a=this.center;oD(eD.set(-.5,-.5,0),YP,a,KP,r,i),oD(tD.set(.5,-.5,0),YP,a,KP,r,i),oD(nD.set(.5,.5,0),YP,a,KP,r,i),rD.set(0,0),iD.set(1,0),aD.set(1,1);let s=e.ray.intersectTriangle(eD,tD,nD,!1,XP);if(null===s&&(oD(tD.set(-.5,.5,0),YP,a,KP,r,i),iD.set(0,1),s=e.ray.intersectTriangle(eD,nD,tD,!1,XP),null===s))return;const o=e.ray.origin.distanceTo(XP);o<e.near||o>e.far||t.push({distance:o,point:XP.clone(),uv:xR.getUV(XP,eD,tD,nD,rD,iD,aD,new XA),face:null,object:this})},copy:function(e){return rR.prototype.copy.call(this,e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}});const lD=new iN,uD=new iN;function cD(){rR.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}cD.prototype=Object.assign(Object.create(rR.prototype),{constructor:cD,isLOD:!0,copy:function(e){rR.prototype.copy.call(this,e,!1);const t=e.levels;for(let e=0,n=t.length;e<n;e++){const n=t[e];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t=0){t=Math.abs(t);const n=this.levels;let r;for(r=0;r<n.length&&!(t<n[r].distance);r++);return n.splice(r,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){const t=this.levels;if(t.length>0){let n,r;for(n=1,r=t.length;n<r&&!(e<t[n].distance);n++);return t[n-1].object}return null},raycast:function(e,t){if(this.levels.length>0){lD.setFromMatrixPosition(this.matrixWorld);const n=e.ray.origin.distanceTo(lD);this.getObjectForDistance(n).raycast(e,t)}},update:function(e){const t=this.levels;if(t.length>1){lD.setFromMatrixPosition(e.matrixWorld),uD.setFromMatrixPosition(this.matrixWorld);const n=lD.distanceTo(uD)/e.zoom;let r,i;for(t[0].object.visible=!0,r=1,i=t.length;r<i&&n>=t[r].distance;r++)t[r-1].object.visible=!1,t[r].object.visible=!0;for(this._currentLevel=r-1;r<i;r++)t[r].object.visible=!1}},toJSON:function(e){const t=rR.prototype.toJSON.call(this,e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let e=0,r=n.length;e<r;e++){const r=n[e];t.object.levels.push({object:r.object.uuid,distance:r.distance})}return t}});const hD=new iN,pD=new tN,dD=new tN,fD=new iN,mD=new RN;function gD(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),yL.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new RN,this.bindMatrixInverse=new RN}function yD(){rR.call(this),this.type="Bone"}gD.prototype=Object.assign(Object.create(yL.prototype),{constructor:gD,isSkinnedMesh:!0,copy:function(e){return yL.prototype.copy.call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this},bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const e=new tN,t=this.geometry.attributes.skinWeight;for(let n=0,r=t.count;n<r;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){yL.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(e,t){const n=this.skeleton,r=this.geometry;pD.fromBufferAttribute(r.attributes.skinIndex,e),dD.fromBufferAttribute(r.attributes.skinWeight,e),hD.fromBufferAttribute(r.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){const r=dD.getComponent(e);if(0!==r){const i=pD.getComponent(e);mD.multiplyMatrices(n.bones[i].matrixWorld,n.boneInverses[i]),t.addScaledVector(fD.copy(hD).applyMatrix4(mD),r)}}return t.applyMatrix4(this.bindMatrixInverse)}}),yD.prototype=Object.assign(Object.create(rR.prototype),{constructor:yD,isBone:!0});const xD=new RN,vD=new RN;function bD(e=[],t=[]){this.uuid=qA.generateUUID(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}Object.assign(bD.prototype,{init:function(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new RN)}},calculateInverses:function(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const t=new RN;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}},pose:function(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}},update:function(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let r=0,i=e.length;r<i;r++){const i=e[r]?e[r].matrixWorld:vD;xD.multiplyMatrices(i,t[r]),xD.toArray(n,16*r)}null!==r&&(r.needsUpdate=!0)},clone:function(){return new bD(this.bones,this.boneInverses)},getBoneByName:function(e){for(let t=0,n=this.bones.length;t<n;t++){const n=this.bones[t];if(n.name===e)return n}},dispose:function(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)},fromJSON:function(e,t){this.uuid=e.uuid;for(let n=0,r=e.bones.length;n<r;n++){const r=e.bones[n];let i=t[r];void 0===i&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),i=new yD),this.bones.push(i),this.boneInverses.push((new RN).fromArray(e.boneInverses[n]))}return this.init(),this},toJSON:function(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let r=0,i=t.length;r<i;r++){const i=t[r];e.bones.push(i.uuid);const a=n[r];e.boneInverses.push(a.toArray())}return e}});const wD=new RN,_D=new RN,SD=[],TD=new yL;function ED(e,t,n){yL.call(this,e,t),this.instanceMatrix=new RR(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}function MD(e){IR.call(this),this.type="LineBasicMaterial",this.color=new ER(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}ED.prototype=Object.assign(Object.create(yL.prototype),{constructor:ED,isInstancedMesh:!0,copy:function(e){return yL.prototype.copy.call(this,e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this},getColorAt:function(e,t){t.fromArray(this.instanceColor.array,3*e)},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,16*e)},raycast:function(e,t){const n=this.matrixWorld,r=this.count;if(TD.geometry=this.geometry,TD.material=this.material,void 0!==TD.material)for(let i=0;i<r;i++){this.getMatrixAt(i,wD),_D.multiplyMatrices(n,wD),TD.matrixWorld=_D,TD.raycast(e,SD);for(let e=0,n=SD.length;e<n;e++){const n=SD[e];n.instanceId=i,n.object=this,t.push(n)}SD.length=0}},setColorAt:function(e,t){null===this.instanceColor&&(this.instanceColor=new RR(new Float32Array(3*this.count),3)),t.toArray(this.instanceColor.array,3*e)},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,16*e)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}}),MD.prototype=Object.create(IR.prototype),MD.prototype.constructor=MD,MD.prototype.isLineBasicMaterial=!0,MD.prototype.copy=function(e){return IR.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this};const CD=new iN,ID=new iN,kD=new RN,AD=new NN,ND=new SN;function RD(e=new QR,t=new MD){rR.call(this),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}RD.prototype=Object.assign(Object.create(rR.prototype),{constructor:RD,isLine:!0,copy:function(e){return rR.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[0];for(let e=1,r=t.count;e<r;e++)CD.fromBufferAttribute(t,e-1),ID.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=CD.distanceTo(ID);e.setAttribute("lineDistance",new UR(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this},raycast:function(e,t){const n=this.geometry,r=this.matrixWorld,i=e.params.Line.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),ND.copy(n.boundingSphere),ND.applyMatrix4(r),ND.radius+=i,!1===e.ray.intersectsSphere(ND))return;kD.copy(r).invert(),AD.copy(e.ray).applyMatrix4(kD);const a=i/((this.scale.x+this.scale.y+this.scale.z)/3),s=a*a,o=new iN,l=new iN,u=new iN,c=new iN,h=this.isLineSegments?2:1;if(n.isBufferGeometry){const r=n.index,i=n.attributes.position;if(null!==r){const n=r.array;for(let r=0,a=n.length-1;r<a;r+=h){const a=n[r],h=n[r+1];o.fromBufferAttribute(i,a),l.fromBufferAttribute(i,h);if(AD.distanceSqToSegment(o,l,c,u)>s)continue;c.applyMatrix4(this.matrixWorld);const p=e.ray.origin.distanceTo(c);p<e.near||p>e.far||t.push({distance:p,point:u.clone().applyMatrix4(this.matrixWorld),index:r,face:null,faceIndex:null,object:this})}}else for(let n=0,r=i.count-1;n<r;n+=h){o.fromBufferAttribute(i,n),l.fromBufferAttribute(i,n+1);if(AD.distanceSqToSegment(o,l,c,u)>s)continue;c.applyMatrix4(this.matrixWorld);const r=e.ray.origin.distanceTo(c);r<e.near||r>e.far||t.push({distance:r,point:u.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const LD=new iN,OD=new iN;function PD(e,t){RD.call(this,e,t),this.type="LineSegments"}function DD(e,t){RD.call(this,e,t),this.type="LineLoop"}function FD(e){IR.call(this),this.type="PointsMaterial",this.color=new ER(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}PD.prototype=Object.assign(Object.create(RD.prototype),{constructor:PD,isLineSegments:!0,computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[];for(let e=0,r=t.count;e<r;e+=2)LD.fromBufferAttribute(t,e),OD.fromBufferAttribute(t,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+LD.distanceTo(OD);e.setAttribute("lineDistance",new UR(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}),DD.prototype=Object.assign(Object.create(RD.prototype),{constructor:DD,isLineLoop:!0}),FD.prototype=Object.create(IR.prototype),FD.prototype.constructor=FD,FD.prototype.isPointsMaterial=!0,FD.prototype.copy=function(e){return IR.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};const $D=new RN,BD=new NN,zD=new SN,UD=new iN;function VD(e=new QR,t=new FD){rR.call(this),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}function WD(e,t,n,r,i,a,s){const o=BD.distanceSqToPoint(e);if(o<n){const n=new iN;BD.closestPointToPoint(e,n),n.applyMatrix4(r);const l=i.ray.origin.distanceTo(n);if(l<i.near||l>i.far)return;a.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:t,face:null,object:s})}}function HD(e,t,n,r,i,a,s,o,l){QA.call(this,e,t,n,r,i,a,s,o,l),this.format=void 0!==s?s:1022,this.minFilter=void 0!==a?a:1006,this.magFilter=void 0!==i?i:1006,this.generateMipmaps=!1;const u=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback((function t(){u.needsUpdate=!0,e.requestVideoFrameCallback(t)}))}function GD(e,t,n,r,i,a,s,o,l,u,c,h){QA.call(this,null,a,s,o,l,u,r,i,c,h),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}function jD(e,t,n,r,i,a,s,o,l){QA.call(this,e,t,n,r,i,a,s,o,l),this.needsUpdate=!0}function qD(e,t,n,r,i,a,s,o,l,u){if(1026!==(u=void 0!==u?u:1026)&&1027!==u)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&1026===u&&(n=1012),void 0===n&&1027===u&&(n=1020),QA.call(this,null,r,i,a,s,o,u,n,l),this.image={width:e,height:t},this.magFilter=void 0!==s?s:1003,this.minFilter=void 0!==o?o:1003,this.flipY=!1,this.generateMipmaps=!1}VD.prototype=Object.assign(Object.create(rR.prototype),{constructor:VD,isPoints:!0,copy:function(e){return rR.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},raycast:function(e,t){const n=this.geometry,r=this.matrixWorld,i=e.params.Points.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),zD.copy(n.boundingSphere),zD.applyMatrix4(r),zD.radius+=i,!1===e.ray.intersectsSphere(zD))return;$D.copy(r).invert(),BD.copy(e.ray).applyMatrix4($D);const a=i/((this.scale.x+this.scale.y+this.scale.z)/3),s=a*a;if(n.isBufferGeometry){const i=n.index,a=n.attributes.position;if(null!==i){const n=i.array;for(let i=0,o=n.length;i<o;i++){const o=n[i];UD.fromBufferAttribute(a,o),WD(UD,o,s,r,e,t,this)}}else for(let n=0,i=a.count;n<i;n++)UD.fromBufferAttribute(a,n),WD(UD,n,s,r,e,t,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),HD.prototype=Object.assign(Object.create(QA.prototype),{constructor:HD,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:!0,update:function(){const e=this.image;!1==="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),GD.prototype=Object.create(QA.prototype),GD.prototype.constructor=GD,GD.prototype.isCompressedTexture=!0,jD.prototype=Object.create(QA.prototype),jD.prototype.constructor=jD,jD.prototype.isCanvasTexture=!0,qD.prototype=Object.create(QA.prototype),qD.prototype.constructor=qD,qD.prototype.isDepthTexture=!0;new iN,new iN,new iN,new xR;const XD=function(e,t,n){n=n||2;const r=t&&t.length,i=r?t[0]*n:e.length;let a=KD(e,0,i,n,!0);const s=[];if(!a||a.next===a.prev)return s;let o,l,u,c,h,p,d;if(r&&(a=function(e,t,n,r){const i=[];let a,s,o,l,u;for(a=0,s=t.length;a<s;a++)o=t[a]*r,l=a<s-1?t[a+1]*r:e.length,u=KD(e,o,l,r,!1),u===u.next&&(u.steiner=!0),i.push(sF(u));for(i.sort(nF),a=0;a<i.length;a++)rF(i[a],n),n=YD(n,n.next);return n}(e,t,a,n)),e.length>80*n){o=u=e[0],l=c=e[1];for(let t=n;t<i;t+=n)h=e[t],p=e[t+1],h<o&&(o=h),p<l&&(l=p),h>u&&(u=h),p>c&&(c=p);d=Math.max(u-o,c-l),d=0!==d?1/d:0}return ZD(a,s,n,o,l,d),s};function KD(e,t,n,r,i){let a,s;if(i===function(e,t,n,r){let i=0;for(let a=t,s=n-r;a<n;a+=r)i+=(e[s]-e[a])*(e[a+1]+e[s+1]),s=a;return i}(e,t,n,r)>0)for(a=t;a<n;a+=r)s=gF(a,e[a],e[a+1],s);else for(a=n-r;a>=t;a-=r)s=gF(a,e[a],e[a+1],s);return s&&cF(s,s.next)&&(yF(s),s=s.next),s}function YD(e,t){if(!e)return e;t||(t=e);let n,r=e;do{if(n=!1,r.steiner||!cF(r,r.next)&&0!==uF(r.prev,r,r.next))r=r.next;else{if(yF(r),r=t=r.prev,r===r.next)break;n=!0}}while(n||r!==t);return t}function ZD(e,t,n,r,i,a,s){if(!e)return;!s&&a&&function(e,t,n,r){let i=e;do{null===i.z&&(i.z=aF(i.x,i.y,t,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,function(e){let t,n,r,i,a,s,o,l,u=1;do{for(n=e,e=null,a=null,s=0;n;){for(s++,r=n,o=0,t=0;t<u&&(o++,r=r.nextZ,r);t++);for(l=u;o>0||l>0&&r;)0!==o&&(0===l||!r||n.z<=r.z)?(i=n,n=n.nextZ,o--):(i=r,r=r.nextZ,l--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;n=r}a.nextZ=null,u*=2}while(s>1)}(i)}(e,r,i,a);let o,l,u=e;for(;e.prev!==e.next;)if(o=e.prev,l=e.next,a?QD(e,r,i,a):JD(e))t.push(o.i/n),t.push(e.i/n),t.push(l.i/n),yF(e),e=l.next,u=l.next;else if((e=l)===u){s?1===s?ZD(e=eF(YD(e),t,n),t,n,r,i,a,2):2===s&&tF(e,t,n,r,i,a):ZD(YD(e),t,n,r,i,a,1);break}}function JD(e){const t=e.prev,n=e,r=e.next;if(uF(t,n,r)>=0)return!1;let i=e.next.next;for(;i!==e.prev;){if(oF(t.x,t.y,n.x,n.y,r.x,r.y,i.x,i.y)&&uF(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function QD(e,t,n,r){const i=e.prev,a=e,s=e.next;if(uF(i,a,s)>=0)return!1;const o=i.x<a.x?i.x<s.x?i.x:s.x:a.x<s.x?a.x:s.x,l=i.y<a.y?i.y<s.y?i.y:s.y:a.y<s.y?a.y:s.y,u=i.x>a.x?i.x>s.x?i.x:s.x:a.x>s.x?a.x:s.x,c=i.y>a.y?i.y>s.y?i.y:s.y:a.y>s.y?a.y:s.y,h=aF(o,l,t,n,r),p=aF(u,c,t,n,r);let d=e.prevZ,f=e.nextZ;for(;d&&d.z>=h&&f&&f.z<=p;){if(d!==e.prev&&d!==e.next&&oF(i.x,i.y,a.x,a.y,s.x,s.y,d.x,d.y)&&uF(d.prev,d,d.next)>=0)return!1;if(d=d.prevZ,f!==e.prev&&f!==e.next&&oF(i.x,i.y,a.x,a.y,s.x,s.y,f.x,f.y)&&uF(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;d&&d.z>=h;){if(d!==e.prev&&d!==e.next&&oF(i.x,i.y,a.x,a.y,s.x,s.y,d.x,d.y)&&uF(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;f&&f.z<=p;){if(f!==e.prev&&f!==e.next&&oF(i.x,i.y,a.x,a.y,s.x,s.y,f.x,f.y)&&uF(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function eF(e,t,n){let r=e;do{const i=r.prev,a=r.next.next;!cF(i,a)&&hF(i,r,r.next,a)&&fF(i,a)&&fF(a,i)&&(t.push(i.i/n),t.push(r.i/n),t.push(a.i/n),yF(r),yF(r.next),r=e=a),r=r.next}while(r!==e);return YD(r)}function tF(e,t,n,r,i,a){let s=e;do{let e=s.next.next;for(;e!==s.prev;){if(s.i!==e.i&&lF(s,e)){let o=mF(s,e);return s=YD(s,s.next),o=YD(o,o.next),ZD(s,t,n,r,i,a),void ZD(o,t,n,r,i,a)}e=e.next}s=s.next}while(s!==e)}function nF(e,t){return e.x-t.x}function rF(e,t){if(t=function(e,t){let n=t;const r=e.x,i=e.y;let a,s=-1/0;do{if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){const e=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(e<=r&&e>s){if(s=e,e===r){if(i===n.y)return n;if(i===n.next.y)return n.next}a=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!a)return null;if(r===s)return a;const o=a,l=a.x,u=a.y;let c,h=1/0;n=a;do{r>=n.x&&n.x>=l&&r!==n.x&&oF(i<u?r:s,i,l,u,i<u?s:r,i,n.x,n.y)&&(c=Math.abs(i-n.y)/(r-n.x),fF(n,e)&&(c<h||c===h&&(n.x>a.x||n.x===a.x&&iF(a,n)))&&(a=n,h=c)),n=n.next}while(n!==o);return a}(e,t),t){const n=mF(t,e);YD(t,t.next),YD(n,n.next)}}function iF(e,t){return uF(e.prev,e,t.prev)<0&&uF(t.next,e,e.next)<0}function aF(e,t,n,r,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function sF(e){let t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function oF(e,t,n,r,i,a,s,o){return(i-s)*(t-o)-(e-s)*(a-o)>=0&&(e-s)*(r-o)-(n-s)*(t-o)>=0&&(n-s)*(a-o)-(i-s)*(r-o)>=0}function lF(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&hF(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(fF(e,t)&&fF(t,e)&&function(e,t){let n=e,r=!1;const i=(e.x+t.x)/2,a=(e.y+t.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(uF(e.prev,e,t.prev)||uF(e,t.prev,t))||cF(e,t)&&uF(e.prev,e,e.next)>0&&uF(t.prev,t,t.next)>0)}function uF(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function cF(e,t){return e.x===t.x&&e.y===t.y}function hF(e,t,n,r){const i=dF(uF(e,t,n)),a=dF(uF(e,t,r)),s=dF(uF(n,r,e)),o=dF(uF(n,r,t));return i!==a&&s!==o||(!(0!==i||!pF(e,n,t))||(!(0!==a||!pF(e,r,t))||(!(0!==s||!pF(n,e,r))||!(0!==o||!pF(n,t,r)))))}function pF(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function dF(e){return e>0?1:e<0?-1:0}function fF(e,t){return uF(e.prev,e,e.next)<0?uF(e,t,e.next)>=0&&uF(e,e.prev,t)>=0:uF(e,t,e.prev)<0||uF(e,e.next,t)<0}function mF(e,t){const n=new xF(e.i,e.x,e.y),r=new xF(t.i,t.x,t.y),i=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}function gF(e,t,n,r){const i=new xF(e,t,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function yF(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function xF(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const vF={area:function(e){const t=e.length;let n=0;for(let r=t-1,i=0;i<t;r=i++)n+=e[r].x*e[i].y-e[i].x*e[r].y;return.5*n},isClockWise:function(e){return vF.area(e)<0},triangulateShape:function(e,t){const n=[],r=[],i=[];bF(e),wF(n,e);let a=e.length;t.forEach(bF);for(let e=0;e<t.length;e++)r.push(a),a+=t[e].length,wF(n,t[e]);const s=XD(n,r);for(let e=0;e<s.length;e+=3)i.push(s.slice(e,e+3));return i}};function bF(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function wF(e,t){for(let n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}class _F extends QR{constructor(e,t){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,r=[],i=[];for(let t=0,n=e.length;t<n;t++){a(e[t])}function a(e){const a=[],s=void 0!==t.curveSegments?t.curveSegments:12,o=void 0!==t.steps?t.steps:1;let l=void 0!==t.depth?t.depth:100,u=void 0===t.bevelEnabled||t.bevelEnabled,c=void 0!==t.bevelThickness?t.bevelThickness:6,h=void 0!==t.bevelSize?t.bevelSize:c-2,p=void 0!==t.bevelOffset?t.bevelOffset:0,d=void 0!==t.bevelSegments?t.bevelSegments:3;const f=t.extrudePath,m=void 0!==t.UVGenerator?t.UVGenerator:SF;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=t.amount);let g,y,x,v,b,w=!1;f&&(g=f.getSpacedPoints(o),w=!0,u=!1,y=f.computeFrenetFrames(o,!1),x=new iN,v=new iN,b=new iN),u||(d=0,c=0,h=0,p=0);const _=e.extractPoints(s);let S=_.shape;const T=_.holes;if(!vF.isClockWise(S)){S=S.reverse();for(let e=0,t=T.length;e<t;e++){const t=T[e];vF.isClockWise(t)&&(T[e]=t.reverse())}}const E=vF.triangulateShape(S,T),M=S;for(let e=0,t=T.length;e<t;e++){const t=T[e];S=S.concat(t)}function C(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}const I=S.length,k=E.length;function A(e,t,n){let r,i,a;const s=e.x-t.x,o=e.y-t.y,l=n.x-e.x,u=n.y-e.y,c=s*s+o*o,h=s*u-o*l;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(c),p=Math.sqrt(l*l+u*u),d=t.x-o/h,f=t.y+s/h,m=((n.x-u/p-d)*u-(n.y+l/p-f)*l)/(s*u-o*l);r=d+s*m-e.x,i=f+o*m-e.y;const g=r*r+i*i;if(g<=2)return new XA(r,i);a=Math.sqrt(g/2)}else{let e=!1;s>Number.EPSILON?l>Number.EPSILON&&(e=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(u)&&(e=!0),e?(r=-o,i=s,a=Math.sqrt(c)):(r=s,i=o,a=Math.sqrt(c/2))}return new XA(r/a,i/a)}const N=[];for(let e=0,t=M.length,n=t-1,r=e+1;e<t;e++,n++,r++)n===t&&(n=0),r===t&&(r=0),N[e]=A(M[e],M[n],M[r]);const R=[];let L,O=N.concat();for(let e=0,t=T.length;e<t;e++){const t=T[e];L=[];for(let e=0,n=t.length,r=n-1,i=e+1;e<n;e++,r++,i++)r===n&&(r=0),i===n&&(i=0),L[e]=A(t[e],t[r],t[i]);R.push(L),O=O.concat(L)}for(let e=0;e<d;e++){const t=e/d,n=c*Math.cos(t*Math.PI/2),r=h*Math.sin(t*Math.PI/2)+p;for(let e=0,t=M.length;e<t;e++){const t=C(M[e],N[e],r);F(t.x,t.y,-n)}for(let e=0,t=T.length;e<t;e++){const t=T[e];L=R[e];for(let e=0,i=t.length;e<i;e++){const i=C(t[e],L[e],r);F(i.x,i.y,-n)}}}const P=h+p;for(let e=0;e<I;e++){const t=u?C(S[e],O[e],P):S[e];w?(v.copy(y.normals[0]).multiplyScalar(t.x),x.copy(y.binormals[0]).multiplyScalar(t.y),b.copy(g[0]).add(v).add(x),F(b.x,b.y,b.z)):F(t.x,t.y,0)}for(let e=1;e<=o;e++)for(let t=0;t<I;t++){const n=u?C(S[t],O[t],P):S[t];w?(v.copy(y.normals[e]).multiplyScalar(n.x),x.copy(y.binormals[e]).multiplyScalar(n.y),b.copy(g[e]).add(v).add(x),F(b.x,b.y,b.z)):F(n.x,n.y,l/o*e)}for(let e=d-1;e>=0;e--){const t=e/d,n=c*Math.cos(t*Math.PI/2),r=h*Math.sin(t*Math.PI/2)+p;for(let e=0,t=M.length;e<t;e++){const t=C(M[e],N[e],r);F(t.x,t.y,l+n)}for(let e=0,t=T.length;e<t;e++){const t=T[e];L=R[e];for(let e=0,i=t.length;e<i;e++){const i=C(t[e],L[e],r);w?F(i.x,i.y+g[o-1].y,g[o-1].x+n):F(i.x,i.y,l+n)}}}function D(e,t){let n=e.length;for(;--n>=0;){const r=n;let i=n-1;i<0&&(i=e.length-1);for(let e=0,n=o+2*d;e<n;e++){const n=I*e,a=I*(e+1);B(t+r+n,t+i+n,t+i+a,t+r+a)}}}function F(e,t,n){a.push(e),a.push(t),a.push(n)}function $(e,t,i){z(e),z(t),z(i);const a=r.length/3,s=m.generateTopUV(n,r,a-3,a-2,a-1);U(s[0]),U(s[1]),U(s[2])}function B(e,t,i,a){z(e),z(t),z(a),z(t),z(i),z(a);const s=r.length/3,o=m.generateSideWallUV(n,r,s-6,s-3,s-2,s-1);U(o[0]),U(o[1]),U(o[3]),U(o[1]),U(o[2]),U(o[3])}function z(e){r.push(a[3*e+0]),r.push(a[3*e+1]),r.push(a[3*e+2])}function U(e){i.push(e.x),i.push(e.y)}!function(){const e=r.length/3;if(u){let e=0,t=I*e;for(let e=0;e<k;e++){const n=E[e];$(n[2]+t,n[1]+t,n[0]+t)}e=o+2*d,t=I*e;for(let e=0;e<k;e++){const n=E[e];$(n[0]+t,n[1]+t,n[2]+t)}}else{for(let e=0;e<k;e++){const t=E[e];$(t[2],t[1],t[0])}for(let e=0;e<k;e++){const t=E[e];$(t[0]+I*o,t[1]+I*o,t[2]+I*o)}}n.addGroup(e,r.length/3-e,0)}(),function(){const e=r.length/3;let t=0;D(M,t),t+=M.length;for(let e=0,n=T.length;e<n;e++){const n=T[e];D(n,t),t+=n.length}n.addGroup(e,r.length/3-e,1)}()}this.setAttribute("position",new UR(r,3)),this.setAttribute("uv",new UR(i,2)),this.computeVertexNormals()}toJSON(){const e=QR.prototype.toJSON.call(this);return function(e,t,n){if(n.shapes=[],Array.isArray(e))for(let t=0,r=e.length;t<r;t++){const r=e[t];n.shapes.push(r.uuid)}else n.shapes.push(e.uuid);void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON());return n}(this.parameters.shapes,this.parameters.options,e)}}const SF={generateTopUV:function(e,t,n,r,i){const a=t[3*n],s=t[3*n+1],o=t[3*r],l=t[3*r+1],u=t[3*i],c=t[3*i+1];return[new XA(a,s),new XA(o,l),new XA(u,c)]},generateSideWallUV:function(e,t,n,r,i,a){const s=t[3*n],o=t[3*n+1],l=t[3*n+2],u=t[3*r],c=t[3*r+1],h=t[3*r+2],p=t[3*i],d=t[3*i+1],f=t[3*i+2],m=t[3*a],g=t[3*a+1],y=t[3*a+2];return Math.abs(o-c)<.01?[new XA(s,1-l),new XA(u,1-h),new XA(p,1-f),new XA(m,1-y)]:[new XA(o,1-l),new XA(c,1-h),new XA(d,1-f),new XA(g,1-y)]}};function TF(e,t,n){QR.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n};const r=[],i=[],a=[],s=[],o=1e-5,l=new iN,u=new iN,c=new iN,h=new iN,p=new iN;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const d=t+1;for(let r=0;r<=n;r++){const d=r/n;for(let n=0;n<=t;n++){const r=n/t;e(r,d,u),i.push(u.x,u.y,u.z),r-o>=0?(e(r-o,d,c),h.subVectors(u,c)):(e(r+o,d,c),h.subVectors(c,u)),d-o>=0?(e(r,d-o,c),p.subVectors(u,c)):(e(r,d+o,c),p.subVectors(c,u)),l.crossVectors(h,p).normalize(),a.push(l.x,l.y,l.z),s.push(r,d)}}for(let e=0;e<n;e++)for(let n=0;n<t;n++){const t=e*d+n,i=e*d+n+1,a=(e+1)*d+n+1,s=(e+1)*d+n;r.push(t,i,s),r.push(i,a,s)}this.setIndex(r),this.setAttribute("position",new UR(i,3)),this.setAttribute("normal",new UR(a,3)),this.setAttribute("uv",new UR(s,2))}TF.prototype=Object.create(QR.prototype),TF.prototype.constructor=TF;class EF extends QR{constructor(e,t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],r=[],i=[],a=[];let s=0,o=0;if(!1===Array.isArray(e))l(e);else for(let t=0;t<e.length;t++)l(e[t]),this.addGroup(s,o,t),s+=o,o=0;function l(e){const s=r.length/3,l=e.extractPoints(t);let u=l.shape;const c=l.holes;!1===vF.isClockWise(u)&&(u=u.reverse());for(let e=0,t=c.length;e<t;e++){const t=c[e];!0===vF.isClockWise(t)&&(c[e]=t.reverse())}const h=vF.triangulateShape(u,c);for(let e=0,t=c.length;e<t;e++){const t=c[e];u=u.concat(t)}for(let e=0,t=u.length;e<t;e++){const t=u[e];r.push(t.x,t.y,0),i.push(0,0,1),a.push(t.x,t.y)}for(let e=0,t=h.length;e<t;e++){const t=h[e],r=t[0]+s,i=t[1]+s,a=t[2]+s;n.push(r,i,a),o+=3}}this.setIndex(n),this.setAttribute("position",new UR(r,3)),this.setAttribute("normal",new UR(i,3)),this.setAttribute("uv",new UR(a,2))}toJSON(){const e=QR.prototype.toJSON.call(this);return function(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,r=e.length;n<r;n++){const r=e[n];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}}function MF(e){IR.call(this),this.type="ShadowMaterial",this.color=new ER(0),this.transparent=!0,this.setValues(e)}function CF(e){SL.call(this,e),this.type="RawShaderMaterial"}function IF(e){IR.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ER(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ER(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new XA(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}function kF(e){IF.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new XA(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=qA.clamp(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}function AF(e){IR.call(this),this.type="MeshPhongMaterial",this.color=new ER(16777215),this.specular=new ER(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ER(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new XA(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function NF(e){IR.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ER(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ER(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new XA(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function RF(e){IR.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new XA(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function LF(e){IR.call(this),this.type="MeshLambertMaterial",this.color=new ER(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ER(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function OF(e){IR.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ER(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new XA(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function PF(e){MD.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}MF.prototype=Object.create(IR.prototype),MF.prototype.constructor=MF,MF.prototype.isShadowMaterial=!0,MF.prototype.copy=function(e){return IR.prototype.copy.call(this,e),this.color.copy(e.color),this},CF.prototype=Object.create(SL.prototype),CF.prototype.constructor=CF,CF.prototype.isRawShaderMaterial=!0,IF.prototype=Object.create(IR.prototype),IF.prototype.constructor=IF,IF.prototype.isMeshStandardMaterial=!0,IF.prototype.copy=function(e){return IR.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this},kF.prototype=Object.create(IF.prototype),kF.prototype.constructor=kF,kF.prototype.isMeshPhysicalMaterial=!0,kF.prototype.copy=function(e){return IF.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new ER).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this},AF.prototype=Object.create(IR.prototype),AF.prototype.constructor=AF,AF.prototype.isMeshPhongMaterial=!0,AF.prototype.copy=function(e){return IR.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},NF.prototype=Object.create(IR.prototype),NF.prototype.constructor=NF,NF.prototype.isMeshToonMaterial=!0,NF.prototype.copy=function(e){return IR.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},RF.prototype=Object.create(IR.prototype),RF.prototype.constructor=RF,RF.prototype.isMeshNormalMaterial=!0,RF.prototype.copy=function(e){return IR.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},LF.prototype=Object.create(IR.prototype),LF.prototype.constructor=LF,LF.prototype.isMeshLambertMaterial=!0,LF.prototype.copy=function(e){return IR.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},OF.prototype=Object.create(IR.prototype),OF.prototype.constructor=OF,OF.prototype.isMeshMatcapMaterial=!0,OF.prototype.copy=function(e){return IR.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},PF.prototype=Object.create(MD.prototype),PF.prototype.constructor=PF,PF.prototype.isLineDashedMaterial=!0,PF.prototype.copy=function(e){return MD.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var DF=Object.freeze({__proto__:null,ShadowMaterial:MF,SpriteMaterial:jP,RawShaderMaterial:CF,ShaderMaterial:SL,PointsMaterial:FD,MeshPhysicalMaterial:kF,MeshStandardMaterial:IF,MeshPhongMaterial:AF,MeshToonMaterial:NF,MeshNormalMaterial:RF,MeshLambertMaterial:LF,MeshDepthMaterial:IP,MeshDistanceMaterial:kP,MeshBasicMaterial:kR,MeshMatcapMaterial:OF,LineDashedMaterial:PF,LineBasicMaterial:MD,Material:IR});const FF={arraySlice:function(e,t,n){return FF.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){const t=e.length,n=new Array(t);for(let e=0;e!==t;++e)n[e]=e;return n.sort((function(t,n){return e[t]-e[n]})),n},sortedArray:function(e,t,n){const r=e.length,i=new e.constructor(r);for(let a=0,s=0;s!==r;++a){const r=n[a]*t;for(let n=0;n!==t;++n)i[s++]=e[r+n]}return i},flattenJSON:function(e,t,n,r){let i=1,a=e[0];for(;void 0!==a&&void 0===a[r];)a=e[i++];if(void 0===a)return;let s=a[r];if(void 0!==s)if(Array.isArray(s))do{s=a[r],void 0!==s&&(t.push(a.time),n.push.apply(n,s)),a=e[i++]}while(void 0!==a);else if(void 0!==s.toArray)do{s=a[r],void 0!==s&&(t.push(a.time),s.toArray(n,n.length)),a=e[i++]}while(void 0!==a);else do{s=a[r],void 0!==s&&(t.push(a.time),n.push(s)),a=e[i++]}while(void 0!==a)},subclip:function(e,t,n,r,i=30){const a=e.clone();a.name=t;const s=[];for(let e=0;e<a.tracks.length;++e){const t=a.tracks[e],o=t.getValueSize(),l=[],u=[];for(let e=0;e<t.times.length;++e){const a=t.times[e]*i;if(!(a<n||a>=r)){l.push(t.times[e]);for(let n=0;n<o;++n)u.push(t.values[e*o+n])}}0!==l.length&&(t.times=FF.convertArray(l,t.times.constructor),t.values=FF.convertArray(u,t.values.constructor),s.push(t))}a.tracks=s;let o=1/0;for(let e=0;e<a.tracks.length;++e)o>a.tracks[e].times[0]&&(o=a.tracks[e].times[0]);for(let e=0;e<a.tracks.length;++e)a.tracks[e].shift(-1*o);return a.resetDuration(),a},makeClipAdditive:function(e,t=0,n=e,r=30){r<=0&&(r=30);const i=n.tracks.length,a=t/r;for(let t=0;t<i;++t){const r=n.tracks[t],i=r.ValueTypeName;if("bool"===i||"string"===i)continue;const s=e.tracks.find((function(e){return e.name===r.name&&e.ValueTypeName===i}));if(void 0===s)continue;let o=0;const l=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let u=0;const c=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=c/3);const h=r.times.length-1;let p;if(a<=r.times[0]){const e=o,t=l-o;p=FF.arraySlice(r.values,e,t)}else if(a>=r.times[h]){const e=h*l+o,t=e+l-o;p=FF.arraySlice(r.values,e,t)}else{const e=r.createInterpolant(),t=o,n=l-o;e.evaluate(a),p=FF.arraySlice(e.resultBuffer,t,n)}if("quaternion"===i){(new rN).fromArray(p).normalize().conjugate().toArray(p)}const d=s.times.length;for(let e=0;e<d;++e){const t=e*c+u;if("quaternion"===i)rN.multiplyQuaternionsFlat(s.values,t,p,0,s.values,t);else{const e=c-2*u;for(let n=0;n<e;++n)s.values[t+n]-=p[n]}}}return e.blendMode=2501,e}};function $F(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n}function BF(e,t,n,r){$F.call(this,e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function zF(e,t,n,r){$F.call(this,e,t,n,r)}function UF(e,t,n,r){$F.call(this,e,t,n,r)}function VF(e,t,n,r){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=FF.convertArray(t,this.TimeBufferType),this.values=FF.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}function WF(e,t,n){VF.call(this,e,t,n)}function HF(e,t,n,r){VF.call(this,e,t,n,r)}function GF(e,t,n,r){VF.call(this,e,t,n,r)}function jF(e,t,n,r){$F.call(this,e,t,n,r)}function qF(e,t,n,r){VF.call(this,e,t,n,r)}function XF(e,t,n,r){VF.call(this,e,t,n,r)}function KF(e,t,n,r){VF.call(this,e,t,n,r)}function YF(e,t=-1,n,r=2500){this.name=e,this.tracks=n,this.duration=t,this.blendMode=r,this.uuid=qA.generateUUID(),this.duration<0&&this.resetDuration()}function ZF(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return GF;case"vector":case"vector2":case"vector3":case"vector4":return KF;case"color":return HF;case"quaternion":return qF;case"bool":case"boolean":return WF;case"string":return XF}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){const t=[],n=[];FF.flattenJSON(e.keys,t,n,"value"),e.times=t,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}Object.assign($F.prototype,{evaluate:function(e){const t=this.parameterPositions;let n=this._cachedIndex,r=t[n],i=t[n-1];e:{t:{let a;n:{r:if(!(e<r)){for(let a=n+2;;){if(void 0===r){if(e<i)break r;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,i)}if(n===a)break;if(i=r,r=t[++n],e<r)break t}a=t.length;break n}if(e>=i)break e;{const s=t[1];e<s&&(n=2,i=s);for(let a=n-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(n===a)break;if(r=i,i=t[--n-1],e>=i)break t}a=n,n=0}}for(;n<a;){const r=n+a>>>1;e<t[r]?a=r:n=r+1}if(r=t[n],i=t[n-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(void 0===r)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,i,e)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,e,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r;for(let e=0;e!==r;++e)t[e]=n[i+e];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign($F.prototype,{beforeStart_:$F.prototype.copySampleValue_,afterEnd_:$F.prototype.copySampleValue_}),BF.prototype=Object.assign(Object.create($F.prototype),{constructor:BF,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(e,t,n){const r=this.parameterPositions;let i=e-2,a=e+1,s=r[i],o=r[a];if(void 0===s)switch(this.getSettings_().endingStart){case 2401:i=e,s=2*t-n;break;case 2402:i=r.length-2,s=t+r[i]-r[i+1];break;default:i=e,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case 2401:a=e,o=2*n-t;break;case 2402:a=1,o=n+r[1]-r[0];break;default:a=e-1,o=t}const l=.5*(n-t),u=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-n),this._offsetPrev=i*u,this._offsetNext=a*u},interpolate_:function(e,t,n,r){const i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,u=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,p=this._weightNext,d=(n-t)/(r-t),f=d*d,m=f*d,g=-h*m+2*h*f-h*d,y=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*d+1,x=(-1-p)*m+(1.5+p)*f+.5*d,v=p*m-p*f;for(let e=0;e!==s;++e)i[e]=g*a[u+e]+y*a[l+e]+x*a[o+e]+v*a[c+e];return i}}),zF.prototype=Object.assign(Object.create($F.prototype),{constructor:zF,interpolate_:function(e,t,n,r){const i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,u=(n-t)/(r-t),c=1-u;for(let e=0;e!==s;++e)i[e]=a[l+e]*c+a[o+e]*u;return i}}),UF.prototype=Object.assign(Object.create($F.prototype),{constructor:UF,interpolate_:function(e){return this.copySampleValue_(e-1)}}),Object.assign(VF,{toJSON:function(e){const t=e.constructor;let n;if(void 0!==t.toJSON)n=t.toJSON(e);else{n={name:e.name,times:FF.convertArray(e.times,Array),values:FF.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(n.interpolation=t)}return n.type=e.ValueTypeName,n}}),Object.assign(VF.prototype,{constructor:VF,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(e){return new UF(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new zF(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new BF(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){let t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]+=e}return this},scale:function(e){if(1!==e){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]*=e}return this},trim:function(e,t){const n=this.times,r=n.length;let i=0,a=r-1;for(;i!==r&&n[i]<e;)++i;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==i||a!==r){i>=a&&(a=Math.max(a,1),i=a-1);const e=this.getValueSize();this.times=FF.arraySlice(n,i,a),this.values=FF.arraySlice(this.values,i*e,a*e)}return this},validate:function(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let t=0;t!==i;t++){const r=n[t];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,r),e=!1;break}if(null!==a&&a>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,r,a),e=!1;break}a=r}if(void 0!==r&&FF.isTypedArray(r))for(let t=0,n=r.length;t!==n;++t){const n=r[t];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,n),e=!1;break}}return e},optimize:function(){const e=FF.arraySlice(this.times),t=FF.arraySlice(this.values),n=this.getValueSize(),r=2302===this.getInterpolation(),i=e.length-1;let a=1;for(let s=1;s<i;++s){let i=!1;const o=e[s];if(o!==e[s+1]&&(1!==s||o!==e[0]))if(r)i=!0;else{const e=s*n,r=e-n,a=e+n;for(let s=0;s!==n;++s){const n=t[e+s];if(n!==t[r+s]||n!==t[a+s]){i=!0;break}}}if(i){if(s!==a){e[a]=e[s];const r=s*n,i=a*n;for(let e=0;e!==n;++e)t[i+e]=t[r+e]}++a}}if(i>0){e[a]=e[i];for(let e=i*n,r=a*n,s=0;s!==n;++s)t[r+s]=t[e+s];++a}return a!==e.length?(this.times=FF.arraySlice(e,0,a),this.values=FF.arraySlice(t,0,a*n)):(this.times=e,this.values=t),this},clone:function(){const e=FF.arraySlice(this.times,0),t=FF.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}),WF.prototype=Object.assign(Object.create(VF.prototype),{constructor:WF,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),HF.prototype=Object.assign(Object.create(VF.prototype),{constructor:HF,ValueTypeName:"color"}),GF.prototype=Object.assign(Object.create(VF.prototype),{constructor:GF,ValueTypeName:"number"}),jF.prototype=Object.assign(Object.create($F.prototype),{constructor:jF,interpolate_:function(e,t,n,r){const i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(n-t)/(r-t);let l=e*s;for(let e=l+s;l!==e;l+=4)rN.slerpFlat(i,0,a,l-s,a,l,o);return i}}),qF.prototype=Object.assign(Object.create(VF.prototype),{constructor:qF,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(e){return new jF(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),XF.prototype=Object.assign(Object.create(VF.prototype),{constructor:XF,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),KF.prototype=Object.assign(Object.create(VF.prototype),{constructor:KF,ValueTypeName:"vector"}),Object.assign(YF,{parse:function(e){const t=[],n=e.tracks,r=1/(e.fps||1);for(let e=0,i=n.length;e!==i;++e)t.push(ZF(n[e]).scale(r));const i=new YF(e.name,e.duration,t,e.blendMode);return i.uuid=e.uuid,i},toJSON:function(e){const t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,r=n.length;e!==r;++e)t.push(VF.toJSON(n[e]));return r},CreateFromMorphTargetSequence:function(e,t,n,r){const i=t.length,a=[];for(let e=0;e<i;e++){let s=[],o=[];s.push((e+i-1)%i,e,(e+1)%i),o.push(0,1,0);const l=FF.getKeyframeOrder(s);s=FF.sortedArray(s,1,l),o=FF.sortedArray(o,1,l),r||0!==s[0]||(s.push(i),o.push(o[0])),a.push(new GF(".morphTargetInfluences["+t[e].name+"]",s,o).scale(1/n))}return new YF(e,-1,a)},findByName:function(e,t){let n=e;if(!Array.isArray(e)){const t=e;n=t.geometry&&t.geometry.animations||t.animations}for(let e=0;e<n.length;e++)if(n[e].name===t)return n[e];return null},CreateClipsFromMorphTargetSequences:function(e,t,n){const r={},i=/^([\w-]*?)([\d]+)$/;for(let t=0,n=e.length;t<n;t++){const n=e[t],a=n.name.match(i);if(a&&a.length>1){const e=a[1];let t=r[e];t||(r[e]=t=[]),t.push(n)}}const a=[];for(const e in r)a.push(YF.CreateFromMorphTargetSequence(e,r[e],t,n));return a},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(e,t,n,r,i){if(0!==n.length){const a=[],s=[];FF.flattenJSON(n,a,s,r),0!==a.length&&i.push(new e(t,a,s))}},r=[],i=e.name||"default",a=e.fps||30,s=e.blendMode;let o=e.length||-1;const l=e.hierarchy||[];for(let e=0;e<l.length;e++){const i=l[e].keys;if(i&&0!==i.length)if(i[0].morphTargets){const e={};let t;for(t=0;t<i.length;t++)if(i[t].morphTargets)for(let n=0;n<i[t].morphTargets.length;n++)e[i[t].morphTargets[n]]=-1;for(const n in e){const e=[],a=[];for(let r=0;r!==i[t].morphTargets.length;++r){const r=i[t];e.push(r.time),a.push(r.morphTarget===n?1:0)}r.push(new GF(".morphTargetInfluence["+n+"]",e,a))}o=e.length*(a||1)}else{const a=".bones["+t[e].name+"]";n(KF,a+".position",i,"pos",r),n(qF,a+".quaternion",i,"rot",r),n(KF,a+".scale",i,"scl",r)}}if(0===r.length)return null;return new YF(i,o,r,s)}}),Object.assign(YF.prototype,{resetDuration:function(){let e=0;for(let t=0,n=this.tracks.length;t!==n;++t){const n=this.tracks[t];e=Math.max(e,n.times[n.times.length-1])}return this.duration=e,this},trim:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new YF(this.name,this.duration,e,this.blendMode)},toJSON:function(){return YF.toJSON(this)}});const JF={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function QF(e,t,n){const r=this;let i,a=!1,s=0,o=0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,!1===a&&void 0!==r.onStart&&r.onStart(e,s,o),a=!0},this.itemEnd=function(e){s++,void 0!==r.onProgress&&r.onProgress(e,s,o),s===o&&(a=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return i?i(e):e},this.setURLModifier=function(e){return i=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){const t=l.indexOf(e);return-1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=l.length;t<n;t+=2){const n=l[t],r=l[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return r}return null}}const e$=new QF;function t$(e){this.manager=void 0!==e?e:e$,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(t$.prototype,{load:function(){},loadAsync:function(e,t){const n=this;return new Promise((function(r,i){n.load(e,r,t,i)}))},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});const n$={};function r$(e){t$.call(this,e)}function i$(e){t$.call(this,e)}function a$(e){t$.call(this,e)}function s$(e){t$.call(this,e)}function o$(e){t$.call(this,e)}function l$(e){t$.call(this,e)}function u$(e){t$.call(this,e)}function c$(){this.type="Curve",this.arcLengthDivisions=200}function h$(e,t,n,r,i,a,s,o){c$.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=n||1,this.yRadius=r||1,this.aStartAngle=i||0,this.aEndAngle=a||2*Math.PI,this.aClockwise=s||!1,this.aRotation=o||0}function p$(e,t,n,r,i,a){h$.call(this,e,t,n,n,r,i,a),this.type="ArcCurve"}function d$(){let e=0,t=0,n=0,r=0;function i(i,a,s,o){e=i,t=s,n=-3*i+3*a-2*s-o,r=2*i-2*a+s+o}return{initCatmullRom:function(e,t,n,r,a){i(t,n,a*(n-e),a*(r-t))},initNonuniformCatmullRom:function(e,t,n,r,a,s,o){let l=(t-e)/a-(n-e)/(a+s)+(n-t)/s,u=(n-t)/s-(r-t)/(s+o)+(r-n)/o;l*=s,u*=s,i(t,n,l,u)},calc:function(i){const a=i*i;return e+t*i+n*a+r*(a*i)}}}r$.prototype=Object.assign(Object.create(t$.prototype),{constructor:r$,load:function(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,a=JF.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout((function(){t&&t(a),i.manager.itemEnd(e)}),0),a;if(void 0!==n$[e])return void n$[e].push({onLoad:t,onProgress:n,onError:r});const s=e.match(/^data:(.*?)(;base64)?,(.*)$/);let o;if(s){const n=s[1],a=!!s[2];let o=s[3];o=decodeURIComponent(o),a&&(o=atob(o));try{let r;const a=(this.responseType||"").toLowerCase();switch(a){case"arraybuffer":case"blob":const e=new Uint8Array(o.length);for(let t=0;t<o.length;t++)e[t]=o.charCodeAt(t);r="blob"===a?new Blob([e.buffer],{type:n}):e.buffer;break;case"document":const t=new DOMParser;r=t.parseFromString(o,n);break;case"json":r=JSON.parse(o);break;default:r=o}setTimeout((function(){t&&t(r),i.manager.itemEnd(e)}),0)}catch(t){setTimeout((function(){r&&r(t),i.manager.itemError(e),i.manager.itemEnd(e)}),0)}}else{n$[e]=[],n$[e].push({onLoad:t,onProgress:n,onError:r}),o=new XMLHttpRequest,o.open("GET",e,!0),o.addEventListener("load",(function(t){const n=this.response,r=n$[e];if(delete n$[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),JF.add(e,n);for(let e=0,t=r.length;e<t;e++){const t=r[e];t.onLoad&&t.onLoad(n)}i.manager.itemEnd(e)}else{for(let e=0,n=r.length;e<n;e++){const n=r[e];n.onError&&n.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)}}),!1),o.addEventListener("progress",(function(t){const n=n$[e];for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onProgress&&r.onProgress(t)}}),!1),o.addEventListener("error",(function(t){const n=n$[e];delete n$[e];for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onError&&r.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)}),!1),o.addEventListener("abort",(function(t){const n=n$[e];delete n$[e];for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onError&&r.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)}),!1),void 0!==this.responseType&&(o.responseType=this.responseType),void 0!==this.withCredentials&&(o.withCredentials=this.withCredentials),o.overrideMimeType&&o.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const e in this.requestHeader)o.setRequestHeader(e,this.requestHeader[e]);o.send(null)}return i.manager.itemStart(e),o},setResponseType:function(e){return this.responseType=e,this},setMimeType:function(e){return this.mimeType=e,this}}),i$.prototype=Object.assign(Object.create(t$.prototype),{constructor:i$,load:function(e,t,n,r){const i=this,a=new r$(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(e,(function(n){try{t(i.parse(JSON.parse(n)))}catch(t){r?r(t):console.error(t),i.manager.itemError(e)}}),n,r)},parse:function(e){const t=[];for(let n=0;n<e.length;n++){const r=YF.parse(e[n]);t.push(r)}return t}}),a$.prototype=Object.assign(Object.create(t$.prototype),{constructor:a$,load:function(e,t,n,r){const i=this,a=[],s=new GD,o=new r$(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(i.withCredentials);let l=0;function u(u){o.load(e[u],(function(e){const n=i.parse(e,!0);a[u]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(s.minFilter=1006),s.image=a,s.format=n.format,s.needsUpdate=!0,t&&t(s))}),n,r)}if(Array.isArray(e))for(let t=0,n=e.length;t<n;++t)u(t);else o.load(e,(function(e){const n=i.parse(e,!0);if(n.isCubemap){const e=n.mipmaps.length/n.mipmapCount;for(let t=0;t<e;t++){a[t]={mipmaps:[]};for(let e=0;e<n.mipmapCount;e++)a[t].mipmaps.push(n.mipmaps[t*n.mipmapCount+e]),a[t].format=n.format,a[t].width=n.width,a[t].height=n.height}s.image=a}else s.image.width=n.width,s.image.height=n.height,s.mipmaps=n.mipmaps;1===n.mipmapCount&&(s.minFilter=1006),s.format=n.format,s.needsUpdate=!0,t&&t(s)}),n,r);return s}}),s$.prototype=Object.assign(Object.create(t$.prototype),{constructor:s$,load:function(e,t,n,r){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,a=JF.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout((function(){t&&t(a),i.manager.itemEnd(e)}),0),a;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),JF.add(e,this),t&&t(this),i.manager.itemEnd(e)}function l(t){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),r&&r(t),i.manager.itemError(e),i.manager.itemEnd(e)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),i.manager.itemStart(e),s.src=e,s}}),o$.prototype=Object.assign(Object.create(t$.prototype),{constructor:o$,load:function(e,t,n,r){const i=new CL,a=new s$(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let s=0;function o(n){a.load(e[n],(function(e){i.images[n]=e,s++,6===s&&(i.needsUpdate=!0,t&&t(i))}),void 0,r)}for(let t=0;t<e.length;++t)o(t);return i}}),l$.prototype=Object.assign(Object.create(t$.prototype),{constructor:l$,load:function(e,t,n,r){const i=this,a=new kL,s=new r$(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(i.withCredentials),s.load(e,(function(e){const n=i.parse(e);n&&(void 0!==n.image?a.image=n.image:void 0!==n.data&&(a.image.width=n.width,a.image.height=n.height,a.image.data=n.data),a.wrapS=void 0!==n.wrapS?n.wrapS:1001,a.wrapT=void 0!==n.wrapT?n.wrapT:1001,a.magFilter=void 0!==n.magFilter?n.magFilter:1006,a.minFilter=void 0!==n.minFilter?n.minFilter:1006,a.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(a.encoding=n.encoding),void 0!==n.flipY&&(a.flipY=n.flipY),void 0!==n.format&&(a.format=n.format),void 0!==n.type&&(a.type=n.type),void 0!==n.mipmaps&&(a.mipmaps=n.mipmaps,a.minFilter=1008),1===n.mipmapCount&&(a.minFilter=1006),a.needsUpdate=!0,t&&t(a,n))}),n,r),a}}),u$.prototype=Object.assign(Object.create(t$.prototype),{constructor:u$,load:function(e,t,n,r){const i=new QA,a=new s$(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,(function(n){i.image=n;const r=e.search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/);i.format=r?1022:1023,i.needsUpdate=!0,void 0!==t&&t(i)}),n,r),i}}),Object.assign(c$.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)},getPoints:function(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t},getSpacedPoints:function(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t},getLength:function(){const e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,r=this.getPoint(0),i=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),i+=n.distanceTo(r),t.push(i),r=n;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){const n=this.getLengths();let r=0;const i=n.length;let a;a=t||e*n[i-1];let s,o=0,l=i-1;for(;o<=l;)if(r=Math.floor(o+(l-o)/2),s=n[r]-a,s<0)o=r+1;else{if(!(s>0)){l=r;break}l=r-1}if(r=l,n[r]===a)return r/(i-1);const u=n[r];return(r+(a-u)/(n[r+1]-u))/(i-1)},getTangent:function(e,t){const n=1e-4;let r=e-n,i=e+n;r<0&&(r=0),i>1&&(i=1);const a=this.getPoint(r),s=this.getPoint(i),o=t||(a.isVector2?new XA:new iN);return o.copy(s).sub(a).normalize(),o},getTangentAt:function(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)},computeFrenetFrames:function(e,t){const n=new iN,r=[],i=[],a=[],s=new iN,o=new RN;for(let t=0;t<=e;t++){const n=t/e;r[t]=this.getTangentAt(n,new iN),r[t].normalize()}i[0]=new iN,a[0]=new iN;let l=Number.MAX_VALUE;const u=Math.abs(r[0].x),c=Math.abs(r[0].y),h=Math.abs(r[0].z);u<=l&&(l=u,n.set(1,0,0)),c<=l&&(l=c,n.set(0,1,0)),h<=l&&n.set(0,0,1),s.crossVectors(r[0],n).normalize(),i[0].crossVectors(r[0],s),a[0].crossVectors(r[0],i[0]);for(let t=1;t<=e;t++){if(i[t]=i[t-1].clone(),a[t]=a[t-1].clone(),s.crossVectors(r[t-1],r[t]),s.length()>Number.EPSILON){s.normalize();const e=Math.acos(qA.clamp(r[t-1].dot(r[t]),-1,1));i[t].applyMatrix4(o.makeRotationAxis(s,e))}a[t].crossVectors(r[t],i[t])}if(!0===t){let t=Math.acos(qA.clamp(i[0].dot(i[e]),-1,1));t/=e,r[0].dot(s.crossVectors(i[0],i[e]))>0&&(t=-t);for(let n=1;n<=e;n++)i[n].applyMatrix4(o.makeRotationAxis(r[n],t*n)),a[n].crossVectors(r[n],i[n])}return{tangents:r,normals:i,binormals:a}},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}),h$.prototype=Object.create(c$.prototype),h$.prototype.constructor=h$,h$.prototype.isEllipseCurve=!0,h$.prototype.getPoint=function(e,t){const n=t||new XA,r=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;const a=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=a?0:r),!0!==this.aClockwise||a||(i===r?i=-r:i-=r);const s=this.aStartAngle+e*i;let o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),n=o-this.aX,r=l-this.aY;o=n*e-r*t+this.aX,l=n*t+r*e+this.aY}return n.set(o,l)},h$.prototype.copy=function(e){return c$.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},h$.prototype.toJSON=function(){const e=c$.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e},h$.prototype.fromJSON=function(e){return c$.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},p$.prototype=Object.create(h$.prototype),p$.prototype.constructor=p$,p$.prototype.isArcCurve=!0;const f$=new iN,m$=new d$,g$=new d$,y$=new d$;function x$(e=[],t=!1,n="centripetal",r=.5){c$.call(this),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=r}function v$(e,t,n,r,i){const a=.5*(r-t),s=.5*(i-n),o=e*e;return(2*n-2*r+a+s)*(e*o)+(-3*n+3*r-2*a-s)*o+a*e+n}function b$(e,t,n,r){return function(e,t){const n=1-e;return n*n*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,n)+function(e,t){return e*e*t}(e,r)}function w$(e,t,n,r,i){return function(e,t){const n=1-e;return n*n*n*t}(e,t)+function(e,t){const n=1-e;return 3*n*n*e*t}(e,n)+function(e,t){return 3*(1-e)*e*e*t}(e,r)+function(e,t){return e*e*e*t}(e,i)}function _$(e=new XA,t=new XA,n=new XA,r=new XA){c$.call(this),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=r}function S$(e=new iN,t=new iN,n=new iN,r=new iN){c$.call(this),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=r}function T$(e=new XA,t=new XA){c$.call(this),this.type="LineCurve",this.v1=e,this.v2=t}function E$(e=new iN,t=new iN){c$.call(this),this.type="LineCurve3",this.v1=e,this.v2=t}function M$(e=new XA,t=new XA,n=new XA){c$.call(this),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}function C$(e=new iN,t=new iN,n=new iN){c$.call(this),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}function I$(e=[]){c$.call(this),this.type="SplineCurve",this.points=e}x$.prototype=Object.create(c$.prototype),x$.prototype.constructor=x$,x$.prototype.isCatmullRomCurve3=!0,x$.prototype.getPoint=function(e,t=new iN){const n=t,r=this.points,i=r.length,a=(i-(this.closed?0:1))*e;let s,o,l=Math.floor(a),u=a-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/i)+1)*i:0===u&&l===i-1&&(l=i-2,u=1),this.closed||l>0?s=r[(l-1)%i]:(f$.subVectors(r[0],r[1]).add(r[0]),s=f$);const c=r[l%i],h=r[(l+1)%i];if(this.closed||l+2<i?o=r[(l+2)%i]:(f$.subVectors(r[i-1],r[i-2]).add(r[i-1]),o=f$),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=Math.pow(s.distanceToSquared(c),e),n=Math.pow(c.distanceToSquared(h),e),r=Math.pow(h.distanceToSquared(o),e);n<1e-4&&(n=1),t<1e-4&&(t=n),r<1e-4&&(r=n),m$.initNonuniformCatmullRom(s.x,c.x,h.x,o.x,t,n,r),g$.initNonuniformCatmullRom(s.y,c.y,h.y,o.y,t,n,r),y$.initNonuniformCatmullRom(s.z,c.z,h.z,o.z,t,n,r)}else"catmullrom"===this.curveType&&(m$.initCatmullRom(s.x,c.x,h.x,o.x,this.tension),g$.initCatmullRom(s.y,c.y,h.y,o.y,this.tension),y$.initCatmullRom(s.z,c.z,h.z,o.z,this.tension));return n.set(m$.calc(u),g$.calc(u),y$.calc(u)),n},x$.prototype.copy=function(e){c$.prototype.copy.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},x$.prototype.toJSON=function(){const e=c$.prototype.toJSON.call(this);e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e},x$.prototype.fromJSON=function(e){c$.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new iN).fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},_$.prototype=Object.create(c$.prototype),_$.prototype.constructor=_$,_$.prototype.isCubicBezierCurve=!0,_$.prototype.getPoint=function(e,t=new XA){const n=t,r=this.v0,i=this.v1,a=this.v2,s=this.v3;return n.set(w$(e,r.x,i.x,a.x,s.x),w$(e,r.y,i.y,a.y,s.y)),n},_$.prototype.copy=function(e){return c$.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},_$.prototype.toJSON=function(){const e=c$.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},_$.prototype.fromJSON=function(e){return c$.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},S$.prototype=Object.create(c$.prototype),S$.prototype.constructor=S$,S$.prototype.isCubicBezierCurve3=!0,S$.prototype.getPoint=function(e,t=new iN){const n=t,r=this.v0,i=this.v1,a=this.v2,s=this.v3;return n.set(w$(e,r.x,i.x,a.x,s.x),w$(e,r.y,i.y,a.y,s.y),w$(e,r.z,i.z,a.z,s.z)),n},S$.prototype.copy=function(e){return c$.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},S$.prototype.toJSON=function(){const e=c$.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},S$.prototype.fromJSON=function(e){return c$.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},T$.prototype=Object.create(c$.prototype),T$.prototype.constructor=T$,T$.prototype.isLineCurve=!0,T$.prototype.getPoint=function(e,t=new XA){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n},T$.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},T$.prototype.getTangent=function(e,t){const n=t||new XA;return n.copy(this.v2).sub(this.v1).normalize(),n},T$.prototype.copy=function(e){return c$.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},T$.prototype.toJSON=function(){const e=c$.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},T$.prototype.fromJSON=function(e){return c$.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},E$.prototype=Object.create(c$.prototype),E$.prototype.constructor=E$,E$.prototype.isLineCurve3=!0,E$.prototype.getPoint=function(e,t=new iN){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n},E$.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},E$.prototype.copy=function(e){return c$.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},E$.prototype.toJSON=function(){const e=c$.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},E$.prototype.fromJSON=function(e){return c$.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},M$.prototype=Object.create(c$.prototype),M$.prototype.constructor=M$,M$.prototype.isQuadraticBezierCurve=!0,M$.prototype.getPoint=function(e,t=new XA){const n=t,r=this.v0,i=this.v1,a=this.v2;return n.set(b$(e,r.x,i.x,a.x),b$(e,r.y,i.y,a.y)),n},M$.prototype.copy=function(e){return c$.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},M$.prototype.toJSON=function(){const e=c$.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},M$.prototype.fromJSON=function(e){return c$.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},C$.prototype=Object.create(c$.prototype),C$.prototype.constructor=C$,C$.prototype.isQuadraticBezierCurve3=!0,C$.prototype.getPoint=function(e,t=new iN){const n=t,r=this.v0,i=this.v1,a=this.v2;return n.set(b$(e,r.x,i.x,a.x),b$(e,r.y,i.y,a.y),b$(e,r.z,i.z,a.z)),n},C$.prototype.copy=function(e){return c$.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},C$.prototype.toJSON=function(){const e=c$.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},C$.prototype.fromJSON=function(e){return c$.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},I$.prototype=Object.create(c$.prototype),I$.prototype.constructor=I$,I$.prototype.isSplineCurve=!0,I$.prototype.getPoint=function(e,t=new XA){const n=t,r=this.points,i=(r.length-1)*e,a=Math.floor(i),s=i-a,o=r[0===a?a:a-1],l=r[a],u=r[a>r.length-2?r.length-1:a+1],c=r[a>r.length-3?r.length-1:a+2];return n.set(v$(s,o.x,l.x,u.x,c.x),v$(s,o.y,l.y,u.y,c.y)),n},I$.prototype.copy=function(e){c$.prototype.copy.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}return this},I$.prototype.toJSON=function(){const e=c$.prototype.toJSON.call(this);e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}return e},I$.prototype.fromJSON=function(e){c$.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new XA).fromArray(n))}return this};var k$=Object.freeze({__proto__:null,ArcCurve:p$,CatmullRomCurve3:x$,CubicBezierCurve:_$,CubicBezierCurve3:S$,EllipseCurve:h$,LineCurve:T$,LineCurve3:E$,QuadraticBezierCurve:M$,QuadraticBezierCurve3:C$,SplineCurve:I$});function A$(){c$.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function N$(e){A$.call(this),this.type="Path",this.currentPoint=new XA,e&&this.setFromPoints(e)}function R$(e){N$.call(this,e),this.uuid=qA.generateUUID(),this.type="Shape",this.holes=[]}function L$(e,t=1){rR.call(this),this.type="Light",this.color=new ER(e),this.intensity=t}function O$(e,t,n){L$.call(this,e,n),this.type="HemisphereLight",this.position.copy(rR.DefaultUp),this.updateMatrix(),this.groundColor=new ER(t)}function P$(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new XA(512,512),this.map=null,this.mapPass=null,this.matrix=new RN,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new RL,this._frameExtents=new XA(1,1),this._viewportCount=1,this._viewports=[new tN(0,0,1,1)]}function D$(){P$.call(this,new EL(50,1,.5,500)),this.focus=1}function F$(e,t,n,r,i,a){L$.call(this,e,t),this.type="SpotLight",this.position.copy(rR.DefaultUp),this.updateMatrix(),this.target=new rR,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),this.distance=void 0!==n?n:0,this.angle=void 0!==r?r:Math.PI/3,this.penumbra=void 0!==i?i:0,this.decay=void 0!==a?a:1,this.shadow=new D$}function $$(){P$.call(this,new EL(90,1,.5,500)),this._frameExtents=new XA(4,2),this._viewportCount=6,this._viewports=[new tN(2,1,1,1),new tN(0,1,1,1),new tN(3,1,1,1),new tN(1,1,1,1),new tN(3,0,1,1),new tN(1,0,1,1)],this._cubeDirections=[new iN(1,0,0),new iN(-1,0,0),new iN(0,0,1),new iN(0,0,-1),new iN(0,1,0),new iN(0,-1,0)],this._cubeUps=[new iN(0,1,0),new iN(0,1,0),new iN(0,1,0),new iN(0,1,0),new iN(0,0,1),new iN(0,0,-1)]}function B$(e,t,n,r){L$.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),this.distance=void 0!==n?n:0,this.decay=void 0!==r?r:1,this.shadow=new $$}function z$(e=-1,t=1,n=1,r=-1,i=.1,a=2e3){TL.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=i,this.far=a,this.updateProjectionMatrix()}function U$(){P$.call(this,new z$(-5,5,5,-5,.5,500))}function V$(e,t){L$.call(this,e,t),this.type="DirectionalLight",this.position.copy(rR.DefaultUp),this.updateMatrix(),this.target=new rR,this.shadow=new U$}function W$(e,t){L$.call(this,e,t),this.type="AmbientLight"}function H$(e,t,n,r){L$.call(this,e,t),this.type="RectAreaLight",this.width=void 0!==n?n:10,this.height=void 0!==r?r:10}A$.prototype=Object.assign(Object.create(c$.prototype),{constructor:A$,add:function(e){this.curves.push(e)},closePath:function(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new T$(t,e))},getPoint:function(e){const t=e*this.getLength(),n=this.getCurveLengths();let r=0;for(;r<n.length;){if(n[r]>=t){const e=n[r]-t,i=this.curves[r],a=i.getLength(),s=0===a?0:1-e/a;return i.getPointAt(s)}r++}return null},getLength:function(){const e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e=12){const t=[];let n;for(let r=0,i=this.curves;r<i.length;r++){const a=i[r],s=a&&a.isEllipseCurve?2*e:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?e*a.points.length:e,o=a.getPoints(s);for(let e=0;e<o.length;e++){const r=o[e];n&&n.equals(r)||(t.push(r),n=r)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function(e){c$.prototype.copy.call(this,e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){const e=c$.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e},fromJSON:function(e){c$.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push((new k$[n.type]).fromJSON(n))}return this}}),N$.prototype=Object.assign(Object.create(A$.prototype),{constructor:N$,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){const n=new T$(this.currentPoint.clone(),new XA(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,n,r){const i=new M$(this.currentPoint.clone(),new XA(e,t),new XA(n,r));return this.curves.push(i),this.currentPoint.set(n,r),this},bezierCurveTo:function(e,t,n,r,i,a){const s=new _$(this.currentPoint.clone(),new XA(e,t),new XA(n,r),new XA(i,a));return this.curves.push(s),this.currentPoint.set(i,a),this},splineThru:function(e){const t=new I$([this.currentPoint.clone()].concat(e));return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,n,r,i,a){const s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,n,r,i,a),this},absarc:function(e,t,n,r,i,a){return this.absellipse(e,t,n,n,r,i,a),this},ellipse:function(e,t,n,r,i,a,s,o){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+l,t+u,n,r,i,a,s,o),this},absellipse:function(e,t,n,r,i,a,s,o){const l=new h$(e,t,n,r,i,a,s,o);if(this.curves.length>0){const e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);const u=l.getPoint(1);return this.currentPoint.copy(u),this},copy:function(e){return A$.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){const e=A$.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return A$.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}),R$.prototype=Object.assign(Object.create(N$.prototype),{constructor:R$,getPointsHoles:function(e){const t=[];for(let n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){N$.prototype.copy.call(this,e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push(n.clone())}return this},toJSON:function(){const e=N$.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e},fromJSON:function(e){N$.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push((new N$).fromJSON(n))}return this}}),L$.prototype=Object.assign(Object.create(rR.prototype),{constructor:L$,isLight:!0,copy:function(e){return rR.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){const t=rR.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}),O$.prototype=Object.assign(Object.create(L$.prototype),{constructor:O$,isHemisphereLight:!0,copy:function(e){return L$.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),Object.assign(P$.prototype,{_projScreenMatrix:new RN,_lightPositionWorld:new iN,_lookTarget:new iN,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){const t=this.camera,n=this.matrix,r=this._projScreenMatrix,i=this._lookTarget,a=this._lightPositionWorld;a.setFromMatrixPosition(e.matrixWorld),t.position.copy(a),i.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(i),t.updateMatrixWorld(),r.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(r),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}),D$.prototype=Object.assign(Object.create(P$.prototype),{constructor:D$,isSpotLightShadow:!0,updateMatrices:function(e){const t=this.camera,n=2*qA.RAD2DEG*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;n===t.fov&&r===t.aspect&&i===t.far||(t.fov=n,t.aspect=r,t.far=i,t.updateProjectionMatrix()),P$.prototype.updateMatrices.call(this,e)}}),F$.prototype=Object.assign(Object.create(L$.prototype),{constructor:F$,isSpotLight:!0,copy:function(e){return L$.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),$$.prototype=Object.assign(Object.create(P$.prototype),{constructor:$$,isPointLightShadow:!0,updateMatrices:function(e,t=0){const n=this.camera,r=this.matrix,i=this._lightPositionWorld,a=this._lookTarget,s=this._projScreenMatrix;i.setFromMatrixPosition(e.matrixWorld),n.position.copy(i),a.copy(n.position),a.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(a),n.updateMatrixWorld(),r.makeTranslation(-i.x,-i.y,-i.z),s.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(s)}}),B$.prototype=Object.assign(Object.create(L$.prototype),{constructor:B$,isPointLight:!0,copy:function(e){return L$.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),z$.prototype=Object.assign(Object.create(TL.prototype),{constructor:z$,isOrthographicCamera:!0,copy:function(e,t){return TL.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,n,r,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-e,a=n+e,s=r+t,o=r-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=e*this.view.offsetX,a=i+e*this.view.width,s-=t*this.view.offsetY,o=s-t*this.view.height}this.projectionMatrix.makeOrthographic(i,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(e){const t=rR.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}),U$.prototype=Object.assign(Object.create(P$.prototype),{constructor:U$,isDirectionalLightShadow:!0,updateMatrices:function(e){P$.prototype.updateMatrices.call(this,e)}}),V$.prototype=Object.assign(Object.create(L$.prototype),{constructor:V$,isDirectionalLight:!0,copy:function(e){return L$.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),W$.prototype=Object.assign(Object.create(L$.prototype),{constructor:W$,isAmbientLight:!0}),H$.prototype=Object.assign(Object.create(L$.prototype),{constructor:H$,isRectAreaLight:!0,copy:function(e){return L$.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){const t=L$.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});class G${constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new iN)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,r=e.y,i=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*r),t.addScaledVector(a[2],.488603*i),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],n*r*1.092548),t.addScaledVector(a[5],r*i*1.092548),t.addScaledVector(a[6],.315392*(3*i*i-1)),t.addScaledVector(a[7],n*i*1.092548),t.addScaledVector(a[8],.546274*(n*n-r*r)),t}getIrradianceAt(e,t){const n=e.x,r=e.y,i=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],1.023328*r),t.addScaledVector(a[2],1.023328*i),t.addScaledVector(a[3],1.023328*n),t.addScaledVector(a[4],.858086*n*r),t.addScaledVector(a[5],.858086*r*i),t.addScaledVector(a[6],.743125*i*i-.247708),t.addScaledVector(a[7],.858086*n*i),t.addScaledVector(a[8],.429043*(n*n-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(e,t+3*r);return this}toArray(e=[],t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(e,t+3*r);return e}static getBasisAt(e,t){const n=e.x,r=e.y,i=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*i,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*i,t[6]=.315392*(3*i*i-1),t[7]=1.092548*n*i,t[8]=.546274*(n*n-r*r)}}function j$(e,t){L$.call(this,void 0,t),this.type="LightProbe",this.sh=void 0!==e?e:new G$}function q$(e){t$.call(this,e),this.textures={}}j$.prototype=Object.assign(Object.create(L$.prototype),{constructor:j$,isLightProbe:!0,copy:function(e){return L$.prototype.copy.call(this,e),this.sh.copy(e.sh),this},fromJSON:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this},toJSON:function(e){const t=L$.prototype.toJSON.call(this,e);return t.object.sh=this.sh.toArray(),t}}),q$.prototype=Object.assign(Object.create(t$.prototype),{constructor:q$,load:function(e,t,n,r){const i=this,a=new r$(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(e,(function(n){try{t(i.parse(JSON.parse(n)))}catch(t){r?r(t):console.error(t),i.manager.itemError(e)}}),n,r)},parse:function(e){const t=this.textures;function n(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}const r=new DF[e.type];if(void 0!==e.uuid&&(r.uuid=e.uuid),void 0!==e.name&&(r.name=e.name),void 0!==e.color&&void 0!==r.color&&r.color.setHex(e.color),void 0!==e.roughness&&(r.roughness=e.roughness),void 0!==e.metalness&&(r.metalness=e.metalness),void 0!==e.sheen&&(r.sheen=(new ER).setHex(e.sheen)),void 0!==e.emissive&&void 0!==r.emissive&&r.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==r.specular&&r.specular.setHex(e.specular),void 0!==e.shininess&&(r.shininess=e.shininess),void 0!==e.clearcoat&&(r.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(r.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.fog&&(r.fog=e.fog),void 0!==e.flatShading&&(r.flatShading=e.flatShading),void 0!==e.blending&&(r.blending=e.blending),void 0!==e.combine&&(r.combine=e.combine),void 0!==e.side&&(r.side=e.side),void 0!==e.opacity&&(r.opacity=e.opacity),void 0!==e.transparent&&(r.transparent=e.transparent),void 0!==e.alphaTest&&(r.alphaTest=e.alphaTest),void 0!==e.depthTest&&(r.depthTest=e.depthTest),void 0!==e.depthWrite&&(r.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(r.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(r.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(r.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(r.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(r.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(r.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(r.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(r.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(r.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(r.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(r.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(r.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(r.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(r.rotation=e.rotation),1!==e.linewidth&&(r.linewidth=e.linewidth),void 0!==e.dashSize&&(r.dashSize=e.dashSize),void 0!==e.gapSize&&(r.gapSize=e.gapSize),void 0!==e.scale&&(r.scale=e.scale),void 0!==e.polygonOffset&&(r.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(r.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(r.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(r.skinning=e.skinning),void 0!==e.morphTargets&&(r.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(r.morphNormals=e.morphNormals),void 0!==e.dithering&&(r.dithering=e.dithering),void 0!==e.vertexTangents&&(r.vertexTangents=e.vertexTangents),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.toneMapped&&(r.toneMapped=e.toneMapped),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const t in e.uniforms){const i=e.uniforms[t];switch(r.uniforms[t]={},i.type){case"t":r.uniforms[t].value=n(i.value);break;case"c":r.uniforms[t].value=(new ER).setHex(i.value);break;case"v2":r.uniforms[t].value=(new XA).fromArray(i.value);break;case"v3":r.uniforms[t].value=(new iN).fromArray(i.value);break;case"v4":r.uniforms[t].value=(new tN).fromArray(i.value);break;case"m3":r.uniforms[t].value=(new KA).fromArray(i.value);break;case"m4":r.uniforms[t].value=(new RN).fromArray(i.value);break;default:r.uniforms[t].value=i.value}}if(void 0!==e.defines&&(r.defines=e.defines),void 0!==e.vertexShader&&(r.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(r.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(const t in e.extensions)r.extensions[t]=e.extensions[t];if(void 0!==e.shading&&(r.flatShading=1===e.shading),void 0!==e.size&&(r.size=e.size),void 0!==e.sizeAttenuation&&(r.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(r.map=n(e.map)),void 0!==e.matcap&&(r.matcap=n(e.matcap)),void 0!==e.alphaMap&&(r.alphaMap=n(e.alphaMap)),void 0!==e.bumpMap&&(r.bumpMap=n(e.bumpMap)),void 0!==e.bumpScale&&(r.bumpScale=e.bumpScale),void 0!==e.normalMap&&(r.normalMap=n(e.normalMap)),void 0!==e.normalMapType&&(r.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),r.normalScale=(new XA).fromArray(t)}return void 0!==e.displacementMap&&(r.displacementMap=n(e.displacementMap)),void 0!==e.displacementScale&&(r.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(r.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(r.roughnessMap=n(e.roughnessMap)),void 0!==e.metalnessMap&&(r.metalnessMap=n(e.metalnessMap)),void 0!==e.emissiveMap&&(r.emissiveMap=n(e.emissiveMap)),void 0!==e.emissiveIntensity&&(r.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(r.specularMap=n(e.specularMap)),void 0!==e.envMap&&(r.envMap=n(e.envMap)),void 0!==e.envMapIntensity&&(r.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(r.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(r.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(r.lightMap=n(e.lightMap)),void 0!==e.lightMapIntensity&&(r.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(r.aoMap=n(e.aoMap)),void 0!==e.aoMapIntensity&&(r.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(r.gradientMap=n(e.gradientMap)),void 0!==e.clearcoatMap&&(r.clearcoatMap=n(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(r.clearcoatNormalMap=n(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(r.clearcoatNormalScale=(new XA).fromArray(e.clearcoatNormalScale)),void 0!==e.transmission&&(r.transmission=e.transmission),void 0!==e.transmissionMap&&(r.transmissionMap=n(e.transmissionMap)),r},setTextures:function(e){return this.textures=e,this}});const X$=function(e){const t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)};function K$(){QR.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function Y$(e,t,n,r){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),RR.call(this,e,t,n),this.meshPerAttribute=r||1}function Z$(e){t$.call(this,e)}K$.prototype=Object.assign(Object.create(QR.prototype),{constructor:K$,isInstancedBufferGeometry:!0,copy:function(e){return QR.prototype.copy.call(this,e),this.instanceCount=e.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const e=QR.prototype.toJSON.call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}),Y$.prototype=Object.assign(Object.create(RR.prototype),{constructor:Y$,isInstancedBufferAttribute:!0,copy:function(e){return RR.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){const e=RR.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}),Z$.prototype=Object.assign(Object.create(t$.prototype),{constructor:Z$,load:function(e,t,n,r){const i=this,a=new r$(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(e,(function(n){try{t(i.parse(JSON.parse(n)))}catch(t){r?r(t):console.error(t),i.manager.itemError(e)}}),n,r)},parse:function(e){const t={},n={};function r(e,r){if(void 0!==t[r])return t[r];const i=e.interleavedBuffers[r],a=function(e,t){if(void 0!==n[t])return n[t];const r=e.arrayBuffers[t],i=new Uint32Array(r).buffer;return n[t]=i,i}(e,i.buffer),s=new WP(GR(i.type,a),i.stride);return s.uuid=i.uuid,t[r]=s,s}const i=e.isInstancedBufferGeometry?new K$:new QR,a=e.data.index;if(void 0!==a){const e=GR(a.type,a.array);i.setIndex(new RR(e,1))}const s=e.data.attributes;for(const t in s){const n=s[t];let a;if(n.isInterleavedBufferAttribute){a=new GP(r(e.data,n.data),n.itemSize,n.offset,n.normalized)}else{const e=GR(n.type,n.array);a=new(n.isInstancedBufferAttribute?Y$:RR)(e,n.itemSize,n.normalized)}void 0!==n.name&&(a.name=n.name),i.setAttribute(t,a)}const o=e.data.morphAttributes;if(o)for(const t in o){const n=o[t],a=[];for(let t=0,i=n.length;t<i;t++){const i=n[t];let s;if(i.isInterleavedBufferAttribute){s=new GP(r(e.data,i.data),i.itemSize,i.offset,i.normalized)}else{s=new RR(GR(i.type,i.array),i.itemSize,i.normalized)}void 0!==i.name&&(s.name=i.name),a.push(s)}i.morphAttributes[t]=a}e.data.morphTargetsRelative&&(i.morphTargetsRelative=!0);const l=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==l)for(let e=0,t=l.length;e!==t;++e){const t=l[e];i.addGroup(t.start,t.count,t.materialIndex)}const u=e.data.boundingSphere;if(void 0!==u){const e=new iN;void 0!==u.center&&e.fromArray(u.center),i.boundingSphere=new SN(e,u.radius)}return e.name&&(i.name=e.name),e.userData&&(i.userData=e.userData),i}});function J$(e){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),t$.call(this,e),this.options={premultiplyAlpha:"none"}}function Q$(){this.type="ShapePath",this.color=new ER,this.subPaths=[],this.currentPath=null}J$.prototype=Object.assign(Object.create(t$.prototype),{constructor:J$,isImageBitmapLoader:!0,setOptions:function(e){return this.options=e,this},load:function(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,a=JF.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout((function(){t&&t(a),i.manager.itemEnd(e)}),0),a;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",fetch(e,s).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,i.options)})).then((function(n){JF.add(e,n),t&&t(n),i.manager.itemEnd(e)})).catch((function(t){r&&r(t),i.manager.itemError(e),i.manager.itemEnd(e)})),i.manager.itemStart(e)}}),Object.assign(Q$.prototype,{moveTo:function(e,t){return this.currentPath=new N$,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,n,r){return this.currentPath.quadraticCurveTo(e,t,n,r),this},bezierCurveTo:function(e,t,n,r,i,a){return this.currentPath.bezierCurveTo(e,t,n,r,i,a),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function n(e){const t=[];for(let n=0,r=e.length;n<r;n++){const r=e[n],i=new R$;i.curves=r.curves,t.push(i)}return t}function r(e,t){const n=t.length;let r=!1;for(let i=n-1,a=0;a<n;i=a++){let n=t[i],s=t[a],o=s.x-n.x,l=s.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=t[a],o=-o,s=t[i],l=-l),e.y<n.y||e.y>s.y)continue;if(e.y===n.y){if(e.x===n.x)return!0}else{const t=l*(e.x-n.x)-o*(e.y-n.y);if(0===t)return!0;if(t<0)continue;r=!r}}else{if(e.y!==n.y)continue;if(s.x<=e.x&&e.x<=n.x||n.x<=e.x&&e.x<=s.x)return!0}}return r}const i=vF.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===t)return n(a);let s,o,l;const u=[];if(1===a.length)return o=a[0],l=new R$,l.curves=o.curves,u.push(l),u;let c=!i(a[0].getPoints());c=e?!c:c;const h=[],p=[];let d,f,m=[],g=0;p[g]=void 0,m[g]=[];for(let t=0,n=a.length;t<n;t++)o=a[t],d=o.getPoints(),s=i(d),s=e?!s:s,s?(!c&&p[g]&&g++,p[g]={s:new R$,p:d},p[g].s.curves=o.curves,c&&g++,m[g]=[]):m[g].push({h:o,p:d[0]});if(!p[0])return n(a);if(p.length>1){let e=!1;const t=[];for(let e=0,t=p.length;e<t;e++)h[e]=[];for(let n=0,i=p.length;n<i;n++){const i=m[n];for(let a=0;a<i.length;a++){const s=i[a];let o=!0;for(let i=0;i<p.length;i++)r(s.p,p[i].p)&&(n!==i&&t.push({froms:n,tos:i,hole:a}),o?(o=!1,h[i].push(s)):e=!0);o&&h[n].push(s)}}t.length>0&&(e||(m=h))}for(let e=0,t=p.length;e<t;e++){l=p[e].s,u.push(l),f=m[e];for(let e=0,t=f.length;e<t;e++)l.holes.push(f[e].h)}return u}});class eB{constructor(e){Object.defineProperty(this,"isFont",{value:!0}),this.type="Font",this.data=e}generateShapes(e,t=100){const n=[],r=function(e,t,n){const r=Array.from?Array.from(e):String(e).split(""),i=t/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*i,s=[];let o=0,l=0;for(let e=0;e<r.length;e++){const t=r[e];if("\n"===t)o=0,l-=a;else{const e=tB(t,i,o,l,n);o+=e.offsetX,s.push(e.path)}}return s}(e,t,this.data);for(let e=0,t=r.length;e<t;e++)Array.prototype.push.apply(n,r[e].toShapes());return n}}function tB(e,t,n,r,i){const a=i.glyphs[e]||i.glyphs["?"];if(!a)return void console.error('THREE.Font: character "'+e+'" does not exists in font family '+i.familyName+".");const s=new Q$;let o,l,u,c,h,p,d,f;if(a.o){const e=a._cachedOutline||(a._cachedOutline=a.o.split(" "));for(let i=0,a=e.length;i<a;){switch(e[i++]){case"m":o=e[i++]*t+n,l=e[i++]*t+r,s.moveTo(o,l);break;case"l":o=e[i++]*t+n,l=e[i++]*t+r,s.lineTo(o,l);break;case"q":u=e[i++]*t+n,c=e[i++]*t+r,h=e[i++]*t+n,p=e[i++]*t+r,s.quadraticCurveTo(h,p,u,c);break;case"b":u=e[i++]*t+n,c=e[i++]*t+r,h=e[i++]*t+n,p=e[i++]*t+r,d=e[i++]*t+n,f=e[i++]*t+r,s.bezierCurveTo(h,p,d,f,u,c)}}}return{offsetX:a.ha*t,path:s}}function nB(e){t$.call(this,e)}let rB;nB.prototype=Object.assign(Object.create(t$.prototype),{constructor:nB,load:function(e,t,n,r){const i=this,a=new r$(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(i.withCredentials),a.load(e,(function(e){let n;try{n=JSON.parse(e)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(e.substring(65,e.length-2))}const r=i.parse(n);t&&t(r)}),n,r)},parse:function(e){return new eB(e)}});const iB=function(){return void 0===rB&&(rB=new(window.AudioContext||window.webkitAudioContext)),rB};function aB(e){t$.call(this,e)}function sB(e,t,n){j$.call(this,void 0,n);const r=(new ER).set(e),i=(new ER).set(t),a=new iN(r.r,r.g,r.b),s=new iN(i.r,i.g,i.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(a).sub(s).multiplyScalar(l)}function oB(e,t){j$.call(this,void 0,t);const n=(new ER).set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}aB.prototype=Object.assign(Object.create(t$.prototype),{constructor:aB,load:function(e,t,n,r){const i=this,a=new r$(i.manager);a.setResponseType("arraybuffer"),a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(e,(function(n){try{const e=n.slice(0);iB().decodeAudioData(e,(function(e){t(e)}))}catch(t){r?r(t):console.error(t),i.manager.itemError(e)}}),n,r)}}),sB.prototype=Object.assign(Object.create(j$.prototype),{constructor:sB,isHemisphereLightProbe:!0,copy:function(e){return j$.prototype.copy.call(this,e),this},toJSON:function(e){return j$.prototype.toJSON.call(this,e)}}),oB.prototype=Object.assign(Object.create(j$.prototype),{constructor:oB,isAmbientLightProbe:!0,copy:function(e){return j$.prototype.copy.call(this,e),this},toJSON:function(e){return j$.prototype.toJSON.call(this,e)}});const lB=new RN,uB=new RN;Object.assign(function(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new EL,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new EL,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}.prototype,{update:function(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const n=e.projectionMatrix.clone(),r=t.eyeSep/2,i=r*t.near/t.focus,a=t.near*Math.tan(qA.DEG2RAD*t.fov*.5)/t.zoom;let s,o;uB.elements[12]=-r,lB.elements[12]=r,s=-a*t.aspect+i,o=a*t.aspect+i,n.elements[0]=2*t.near/(o-s),n.elements[8]=(o+s)/(o-s),this.cameraL.projectionMatrix.copy(n),s=-a*t.aspect-i,o=a*t.aspect-i,n.elements[0]=2*t.near/(o-s),n.elements[8]=(o+s)/(o-s),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(uB),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(lB)}});class cB extends rR{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}function hB(e,t,n){let r,i,a;switch(this.binding=e,this.valueSize=n,t){case"quaternion":r=this._slerp,i=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,i=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,i=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=i,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(hB.prototype,{accumulate:function(e,t){const n=this.buffer,r=this.valueSize,i=e*r+r;let a=this.cumulativeWeight;if(0===a){for(let e=0;e!==r;++e)n[i+e]=n[e];a=t}else{a+=t;const e=t/a;this._mixBufferRegion(n,i,0,e,r)}this.cumulativeWeight=a},accumulateAdditive:function(e){const t=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,n),this.cumulativeWeightAdditive+=e},apply:function(e){const t=this.valueSize,n=this.buffer,r=e*t+t,i=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,i<1){const e=t*this._origIndex;this._mixBufferRegion(n,r,e,1-i,t)}a>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*t,1,t);for(let e=t,i=t+t;e!==i;++e)if(n[e]!==n[e+t]){s.setValue(n,r);break}},saveOriginalState:function(){const e=this.binding,t=this.buffer,n=this.valueSize,r=n*this._origIndex;e.getValue(t,r);for(let e=n,i=r;e!==i;++e)t[e]=t[r+e%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)},_setAdditiveIdentityNumeric:function(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]},_select:function(e,t,n,r,i){if(r>=.5)for(let r=0;r!==i;++r)e[t+r]=e[n+r]},_slerp:function(e,t,n,r){rN.slerpFlat(e,t,e,t,e,n,r)},_slerpAdditive:function(e,t,n,r,i){const a=this._workIndex*i;rN.multiplyQuaternionsFlat(e,a,e,t,e,n),rN.slerpFlat(e,t,e,t,e,a,r)},_lerp:function(e,t,n,r,i){const a=1-r;for(let s=0;s!==i;++s){const i=t+s;e[i]=e[i]*a+e[n+s]*r}},_lerpAdditive:function(e,t,n,r,i){for(let a=0;a!==i;++a){const i=t+a;e[i]=e[i]+e[n+a]*r}}});const pB=new RegExp("[\\[\\]\\.:\\/]","g"),dB="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",fB=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),mB=/(WCOD+)?/.source.replace("WCOD",dB),gB=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),yB=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),xB=new RegExp("^"+fB+mB+gB+yB+"$"),vB=["material","materials","bones"];function bB(e,t,n){const r=n||wB.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}function wB(e,t,n){this.path=t,this.parsedPath=n||wB.parseTrackName(t),this.node=wB.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}Object.assign(bB.prototype,{getValue:function(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)},setValue:function(e,t){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(e,t)},bind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}),Object.assign(wB,{Composite:bB,create:function(e,t,n){return e&&e.isAnimationObjectGroup?new wB.Composite(e,t,n):new wB(e,t,n)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(pB,"")},parseTrackName:function(e){const t=xB.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const e=n.nodeName.substring(r+1);-1!==vB.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n},findNode:function(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){const n=function(e){for(let r=0;r<e.length;r++){const i=e[r];if(i.name===t||i.uuid===t)return i;const a=n(i.children);if(a)return a}return null},r=n(e.children);if(r)return r}return null}}),Object.assign(wB.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)e[t++]=n[r]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++]},function(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){let e=this.node;const t=this.parsedPath,n=t.objectName,r=t.propertyName;let i=t.propertyIndex;if(e||(e=wB.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let r=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===r){r=t;break}break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==r){if(void 0===e[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[r]}}const a=e[r];if(void 0===a){const n=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",e)}let s=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[i]&&(i=e.morphTargetDictionary[i])}o=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=i}else void 0!==a.fromArray&&void 0!==a.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(o=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=r;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][s]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(wB.prototype,{_getValue_unbound:wB.prototype.getValue,_setValue_unbound:wB.prototype.setValue}),Object.assign(function(){this.uuid=qA.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let t=0,n=arguments.length;t!==n;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}.prototype,{isAnimationObjectGroup:!0,add:function(){const e=this._objects,t=this._indicesByUUID,n=this._paths,r=this._parsedPaths,i=this._bindings,a=i.length;let s,o=e.length,l=this.nCachedObjects_;for(let u=0,c=arguments.length;u!==c;++u){const c=arguments[u],h=c.uuid;let p=t[h];if(void 0===p){p=o++,t[h]=p,e.push(c);for(let e=0,t=a;e!==t;++e)i[e].push(new wB(c,n[e],r[e]))}else if(p<l){s=e[p];const o=--l,u=e[o];t[u.uuid]=p,e[p]=u,t[h]=o,e[o]=c;for(let e=0,t=a;e!==t;++e){const t=i[e],a=t[o];let s=t[p];t[p]=a,void 0===s&&(s=new wB(c,n[e],r[e])),t[o]=s}}else e[p]!==s&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l},remove:function(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_;for(let a=0,s=arguments.length;a!==s;++a){const s=arguments[a],o=s.uuid,l=t[o];if(void 0!==l&&l>=i){const a=i++,u=e[a];t[u.uuid]=l,e[l]=u,t[o]=a,e[a]=s;for(let e=0,t=r;e!==t;++e){const t=n[e],r=t[a],i=t[l];t[l]=r,t[a]=i}}}this.nCachedObjects_=i},uncache:function(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_,a=e.length;for(let s=0,o=arguments.length;s!==o;++s){const o=arguments[s].uuid,l=t[o];if(void 0!==l)if(delete t[o],l<i){const s=--i,o=e[s],u=--a,c=e[u];t[o.uuid]=l,e[l]=o,t[c.uuid]=s,e[s]=c,e.pop();for(let e=0,t=r;e!==t;++e){const t=n[e],r=t[s],i=t[u];t[l]=r,t[s]=i,t.pop()}}else{const i=--a,s=e[i];i>0&&(t[s.uuid]=l),e[l]=s,e.pop();for(let e=0,t=r;e!==t;++e){const t=n[e];t[l]=t[i],t.pop()}}}this.nCachedObjects_=i},subscribe_:function(e,t){const n=this._bindingsIndicesByPath;let r=n[e];const i=this._bindings;if(void 0!==r)return i[r];const a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,u=this.nCachedObjects_,c=new Array(l);r=i.length,n[e]=r,a.push(e),s.push(t),i.push(c);for(let n=u,r=o.length;n!==r;++n){const r=o[n];c[n]=new wB(r,e,t)}return c},unsubscribe_:function(e){const t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){const r=this._paths,i=this._parsedPaths,a=this._bindings,s=a.length-1,o=a[s];t[e[s]]=n,a[n]=o,a.pop(),i[n]=i[s],i.pop(),r[n]=r[s],r.pop()}}});class _B{constructor(e,t,n=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=r;const i=t.tracks,a=i.length,s=new Array(a),o={endingStart:2400,endingEnd:2400};for(let e=0;e!==a;++e){const t=i[e].createInterpolant(null);s[e]=t,t.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const n=this._clip.duration,r=e._clip.duration,i=r/n,a=n/r;e.warp(1,i,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const r=this._mixer,i=r.time,a=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=r._lendControlInterpolant(),this._timeScaleInterpolant=s);const o=s.parameterPositions,l=s.sampleValues;return o[0]=i,o[1]=i+n,l[0]=e/a,l[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,r){if(!this.enabled)return void this._updateWeight(e);const i=this._startTime;if(null!==i){const r=(e-i)*n;if(r<0||0===n)return;this._startTime=null,t=n*r}t*=this._updateTimeScale(e);const a=this._updateTime(t),s=this._updateWeight(e);if(s>0){const e=this._interpolants,t=this._propertyBindings;if(2501===this.blendMode)for(let n=0,r=e.length;n!==r;++n)e[n].evaluate(a),t[n].accumulateAdditive(s);else for(let n=0,i=e.length;n!==i;++n)e[n].evaluate(a),t[n].accumulate(r,s)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(null!==n){const r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(null!==n){t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let r=this.time+e,i=this._loopCount;const a=2202===n;if(0===e)return-1===i?r:a&&1==(1&i)?t-r:r;if(2200===n){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else{if(!(r<0)){this.time=r;break e}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===i&&(e>=0?(i=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),r>=t||r<0){const n=Math.floor(r/t);r-=t*n,i+=Math.abs(n);const s=this.repetitions-i;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===s){const t=e<0;this._setEndings(t,!t,a)}else this._setEndings(!1,!1,a);this._loopCount=i,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=r;if(a&&1==(1&i))return t-r}return r}_setEndings(e,t,n){const r=this._interpolantSettings;n?(r.endingStart=2401,r.endingEnd=2401):(r.endingStart=e?this.zeroSlopeAtStart?2401:2400:2402,r.endingEnd=t?this.zeroSlopeAtEnd?2401:2400:2402)}_scheduleFading(e,t,n){const r=this._mixer,i=r.time;let a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);const s=a.parameterPositions,o=a.sampleValues;return s[0]=i,o[0]=t,s[1]=i+e,o[1]=n,this}}function SB(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}SB.prototype=Object.assign(Object.create(HA.prototype),{constructor:SB,_bindAction:function(e,t){const n=e._localRoot||this._root,r=e._clip.tracks,i=r.length,a=e._propertyBindings,s=e._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let u=l[o];void 0===u&&(u={},l[o]=u);for(let e=0;e!==i;++e){const i=r[e],l=i.name;let c=u[l];if(void 0!==c)a[e]=c;else{if(c=a[e],void 0!==c){null===c._cacheIndex&&(++c.referenceCount,this._addInactiveBinding(c,o,l));continue}const r=t&&t._propertyBindings[e].binding.parsedPath;c=new hB(wB.create(n,l,r),i.ValueTypeName,i.getValueSize()),++c.referenceCount,this._addInactiveBinding(c,o,l),a[e]=c}s[e].resultBuffer=c.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,t)}const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){const r=this._actions,i=this._actionsByClip;let a=i[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=a;else{const t=a.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[n]=e},_removeInactiveAction:function(e){const t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;const i=e._clip.uuid,a=this._actionsByClip,s=a[i],o=s.knownActions,l=o[o.length-1],u=e._byClipCacheIndex;l._byClipCacheIndex=u,o[u]=l,o.pop(),e._byClipCacheIndex=null;delete s.actionByRoot[(e._localRoot||this._root).uuid],0===o.length&&delete a[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0==--n.referenceCount&&this._removeInactiveBinding(n)}},_lendAction:function(e){const t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_takeBackAction:function(e){const t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_addInactiveBinding:function(e,t,n){const r=this._bindingsByRootAndName,i=this._bindings;let a=r[t];void 0===a&&(a={},r[t]=a),a[n]=e,e._cacheIndex=i.length,i.push(e)},_removeInactiveBinding:function(e){const t=this._bindings,n=e.binding,r=n.rootNode.uuid,i=n.path,a=this._bindingsByRootAndName,s=a[r],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete s[i],0===Object.keys(s).length&&delete a[r]},_lendBinding:function(e){const t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_takeBackBinding:function(e){const t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_lendControlInterpolant:function(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return void 0===n&&(n=new zF(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n},_takeBackControlInterpolant:function(e){const t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,i=t[r];e.__cacheIndex=r,t[r]=e,i.__cacheIndex=n,t[n]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t,n){const r=t||this._root,i=r.uuid;let a="string"==typeof e?YF.findByName(r,e):e;const s=null!==a?a.uuid:e,o=this._actionsByClip[s];let l=null;if(void 0===n&&(n=null!==a?a.blendMode:2500),void 0!==o){const e=o.actionByRoot[i];if(void 0!==e&&e.blendMode===n)return e;l=o.knownActions[0],null===a&&(a=l._clip)}if(null===a)return null;const u=new _B(this,a,t,n);return this._bindAction(u,l),this._addInactiveAction(u,s,i),u},existingAction:function(e,t){const n=t||this._root,r=n.uuid,i="string"==typeof e?YF.findByName(n,e):e,a=i?i.uuid:e,s=this._actionsByClip[a];return void 0!==s&&s.actionByRoot[r]||null},stopAllAction:function(){const e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this},update:function(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,r=this.time+=e,i=Math.sign(e),a=this._accuIndex^=1;for(let s=0;s!==n;++s){t[s]._update(r,e,i,a)}const s=this._bindings,o=this._nActiveBindings;for(let e=0;e!==o;++e)s[e].apply(a);return this},setTime:function(e){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){const t=this._actions,n=e.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){const e=i.knownActions;for(let n=0,r=e.length;n!==r;++n){const r=e[n];this._deactivateAction(r);const i=r._cacheIndex,a=t[t.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,a._cacheIndex=i,t[i]=a,t.pop(),this._removeInactiveBindingsForAction(r)}delete r[n]}},uncacheRoot:function(e){const t=e.uuid,n=this._actionsByClip;for(const e in n){const r=n[e].actionByRoot[t];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}const r=this._bindingsByRootAndName[t];if(void 0!==r)for(const e in r){const t=r[e];t.restoreOriginalState(),this._removeInactiveBinding(t)}},uncacheAction:function(e,t){const n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}});class TB{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new TB(void 0===this.value.clone?this.value:this.value.clone())}}function EB(e,t,n){WP.call(this,e,t),this.meshPerAttribute=n||1}function MB(e,t,n,r,i){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=r,this.count=i,this.version=0}function CB(e,t,n,r){this.ray=new NN(e,t),this.near=n||0,this.far=r||1/0,this.camera=null,this.layers=new WN,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function IB(e,t){return e.distance-t.distance}function kB(e,t,n,r){if(e.layers.test(t.layers)&&e.raycast(t,n),!0===r){const r=e.children;for(let e=0,i=r.length;e<i;e++)kB(r[e],t,n,!0)}}EB.prototype=Object.assign(Object.create(WP.prototype),{constructor:EB,isInstancedInterleavedBuffer:!0,copy:function(e){return WP.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},clone:function(e){const t=WP.prototype.clone.call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t},toJSON:function(e){const t=WP.prototype.toJSON.call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}),Object.defineProperty(MB.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(MB.prototype,{isGLBufferAttribute:!0,setBuffer:function(e){return this.buffer=e,this},setType:function(e,t){return this.type=e,this.elementSize=t,this},setItemSize:function(e){return this.itemSize=e,this},setCount:function(e){return this.count=e,this}}),Object.assign(CB.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)},intersectObject:function(e,t,n){const r=n||[];return kB(e,this,r,t),r.sort(IB),r},intersectObjects:function(e,t,n){const r=n||[];if(!1===Array.isArray(e))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),r;for(let n=0,i=e.length;n<i;n++)kB(e[n],this,r,t);return r.sort(IB),r}});class AB{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}clone(){return(new this.constructor).copy(this)}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){const e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(qA.clamp(t/this.radius,-1,1))),this}}const NB=new XA;function RB(e){rR.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}RB.prototype=Object.create(rR.prototype),RB.prototype.constructor=RB,RB.prototype.isImmediateRenderObject=!0;const LB=new iN,OB=new RN,PB=new RN;function DB(e){const t=[];e&&e.isBone&&t.push(e);for(let n=0;n<e.children.length;n++)t.push.apply(t,DB(e.children[n]));return t}class FB extends PD{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=new QR;n.setAttribute("position",new UR(t,3)),n.setAttribute("color",new UR([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(n,new MD({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}}const $B=new Float32Array(1),BB=(new Int32Array($B.buffer),Math.pow(2,8),[.125,.215,.35,.446,.526,.582]),zB=5+BB.length,UB=new kR({side:1,depthWrite:!1,depthTest:!1}),{_lodPlanes:VB,_sizeLods:WB,_sigmas:HB}=(new yL(new vL,UB),GB());Math.sqrt(5);function GB(){const e=[],t=[],n=[];let r=8;for(let i=0;i<zB;i++){const a=Math.pow(2,r);t.push(a);let s=1/a;i>4?s=BB[i-8+4-1]:0==i&&(s=0),n.push(s);const o=1/(a-1),l=-o/2,u=1+o/2,c=[l,l,u,l,u,u,l,l,u,u,l,u],h=6,p=6,d=3,f=2,m=1,g=new Float32Array(d*p*h),y=new Float32Array(f*p*h),x=new Float32Array(m*p*h);for(let e=0;e<h;e++){const t=e%3*2/3-1,n=e>2?0:-1,r=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];g.set(r,d*p*e),y.set(c,f*p*e);const i=[e,e,e,e,e,e];x.set(i,m*p*e)}const v=new QR;v.setAttribute("position",new RR(g,d)),v.setAttribute("uv",new RR(y,f)),v.setAttribute("faceIndex",new RR(x,m)),e.push(v),r>4&&r--}return{_lodPlanes:e,_sizeLods:t,_sigmas:n}}function jB(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),x$.call(this,e),this.type="catmullrom"}c$.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(c$.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Object.assign(N$.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}}),Object.create(x$.prototype),Object.create(x$.prototype),jB.prototype=Object.create(x$.prototype),Object.assign(jB.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),class extends PD{constructor(e=10,t=10,n=4473924,r=8947848){n=new ER(n),r=new ER(r);const i=t/2,a=e/t,s=e/2,o=[],l=[];for(let e=0,u=0,c=-s;e<=t;e++,c+=a){o.push(-s,0,c,s,0,c),o.push(c,0,-s,c,0,s);const t=e===i?n:r;t.toArray(l,u),u+=3,t.toArray(l,u),u+=3,t.toArray(l,u),u+=3,t.toArray(l,u),u+=3}const u=new QR;u.setAttribute("position",new UR(o,3)),u.setAttribute("color",new UR(l,3));super(u,new MD({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends PD{constructor(e){const t=DB(e),n=new QR,r=[],i=[],a=new ER(0,0,1),s=new ER(0,1,0);for(let e=0;e<t.length;e++){const n=t[e];n.parent&&n.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(a.r,a.g,a.b),i.push(s.r,s.g,s.b))}n.setAttribute("position",new UR(r,3)),n.setAttribute("color",new UR(i,3));super(n,new MD({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,r=n.getAttribute("position");PB.copy(this.root.matrixWorld).invert();for(let e=0,n=0;e<t.length;e++){const i=t[e];i.parent&&i.parent.isBone&&(OB.multiplyMatrices(PB,i.matrixWorld),LB.setFromMatrixPosition(OB),r.setXYZ(n,LB.x,LB.y,LB.z),OB.multiplyMatrices(PB,i.parent.matrixWorld),LB.setFromMatrixPosition(OB),r.setXYZ(n+1,LB.x,LB.y,LB.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(t$.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),X$(e)}}),t$.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(class{constructor(e,t){Object.defineProperty(this,"isBox2",{value:!0}),this.min=void 0!==e?e:new XA(1/0,1/0),this.max=void 0!==t?t:new XA(-1/0,-1/0)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=NB.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new XA),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new XA),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new XA),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new XA),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return NB.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(oN.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(SN.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),RL.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Object.assign(qA,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),qA.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),qA.ceilPowerOfTwo(e)}}),Object.assign(KA.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},getInverse:function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()}}),Object.assign(RN.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new iN).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,n,r,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,n,i,a)},getInverse:function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()}}),oR.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},Object.assign(rN.prototype,{multiplyVector3:function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},inverse:function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()}}),Object.assign(NN.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(xR.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}}),Object.assign(xR,{barycoordFromPoint:function(e,t,n,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),xR.getBarycoord(e,t,n,r,i)},normal:function(e,t,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),xR.getNormal(e,t,n,r)}}),Object.assign(R$.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new _F(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new EF(this,e)}}),Object.assign(XA.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(iN.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(tN.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(rR.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(rR.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(yL.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(yL.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(cD.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(bD.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),gD.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(c$.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),EL.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(L$.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(RR.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),35048===this.usage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(35048)}}}),Object.assign(RR.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?35048:35044),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(QR.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new RR(arguments[1],arguments[2])))},addDrawCall:function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(QR.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(K$.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=e}}}),Object.defineProperties(CB.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}}),Object.defineProperties(WP.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),35048===this.usage},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}}),Object.assign(WP.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?35048:35044),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(_F.prototype,{getArrays:function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")}}),Object.assign(VP.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}}),Object.defineProperties(TB.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(IR.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new ER}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(AF.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(kF.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(e){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=e}}}),Object.defineProperties(SL.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Object.assign(BP.prototype,{clearTarget:function(e,t,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,r)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(BP.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?3001:3e3}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(AP.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(nN.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Object.defineProperties(cB.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return(new aB).load(e,(function(e){t.setBuffer(e)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),ML.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},ML.prototype.clear=function(e,t,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,r)};ZA.crossOrigin=void 0,ZA.loadTexture=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new u$;i.setCrossOrigin(this.crossOrigin);const a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a},ZA.loadTextureCube=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new o$;i.setCrossOrigin(this.crossOrigin);const a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a},ZA.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},ZA.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"125"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="125");var qB=function(e,t){var n,r,i,a,s,o;void 0===t&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.enabled=!0,this.target=new iN,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:VA.ROTATE,MIDDLE:VA.DOLLY,RIGHT:VA.PAN},this.touches={ONE:WA.ROTATE,TWO:WA.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return m.phi},this.getAzimuthalAngle=function(){return m.theta},this.listenToKeyEvents=function(e){e.addEventListener("keydown",Y),this._domElementKeyEvents=e},this.saveState=function(){l.target0.copy(l.target),l.position0.copy(l.object.position),l.zoom0=l.object.zoom},this.reset=function(){l.target.copy(l.target0),l.object.position.copy(l.position0),l.object.zoom=l.zoom0,l.object.updateProjectionMatrix(),l.dispatchEvent(u),l.update(),d=p.NONE},this.update=(n=new iN,r=(new rN).setFromUnitVectors(e.up,new iN(0,1,0)),i=r.clone().invert(),a=new iN,s=new rN,o=2*Math.PI,function(){var e=l.object.position;n.copy(e).sub(l.target),n.applyQuaternion(r),m.setFromVector3(n),l.autoRotate&&d===p.NONE&&A(2*Math.PI/60/60*l.autoRotateSpeed),l.enableDamping?(m.theta+=g.theta*l.dampingFactor,m.phi+=g.phi*l.dampingFactor):(m.theta+=g.theta,m.phi+=g.phi);var t=l.minAzimuthAngle,c=l.maxAzimuthAngle;return isFinite(t)&&isFinite(c)&&(t<-Math.PI?t+=o:t>Math.PI&&(t-=o),c<-Math.PI?c+=o:c>Math.PI&&(c-=o),m.theta=t<=c?Math.max(t,Math.min(c,m.theta)):m.theta>(t+c)/2?Math.max(t,m.theta):Math.min(c,m.theta)),m.phi=Math.max(l.minPolarAngle,Math.min(l.maxPolarAngle,m.phi)),m.makeSafe(),m.radius*=y,m.radius=Math.max(l.minDistance,Math.min(l.maxDistance,m.radius)),!0===l.enableDamping?l.target.addScaledVector(x,l.dampingFactor):l.target.add(x),n.setFromSpherical(m),n.applyQuaternion(i),e.copy(l.target).add(n),l.object.lookAt(l.target),!0===l.enableDamping?(g.theta*=1-l.dampingFactor,g.phi*=1-l.dampingFactor,x.multiplyScalar(1-l.dampingFactor)):(g.set(0,0,0),x.set(0,0,0)),y=1,!!(v||a.distanceToSquared(l.object.position)>f||8*(1-s.dot(l.object.quaternion))>f)&&(l.dispatchEvent(u),a.copy(l.object.position),s.copy(l.object.quaternion),v=!1,!0)}),this.dispose=function(){l.domElement.removeEventListener("contextmenu",ee),l.domElement.removeEventListener("pointerdown",j),l.domElement.removeEventListener("wheel",K),l.domElement.removeEventListener("touchstart",Z),l.domElement.removeEventListener("touchend",Q),l.domElement.removeEventListener("touchmove",J),l.domElement.ownerDocument.removeEventListener("pointermove",q),l.domElement.ownerDocument.removeEventListener("pointerup",X),null!==l._domElementKeyEvents&&l._domElementKeyEvents.removeEventListener("keydown",Y)};var l=this,u={type:"change"},c={type:"start"},h={type:"end"},p={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},d=p.NONE,f=1e-6,m=new AB,g=new AB,y=1,x=new iN,v=!1,b=new XA,w=new XA,_=new XA,S=new XA,T=new XA,E=new XA,M=new XA,C=new XA,I=new XA;function k(){return Math.pow(.95,l.zoomSpeed)}function A(e){g.theta-=e}function N(e){g.phi-=e}var R,L=(R=new iN,function(e,t){R.setFromMatrixColumn(t,0),R.multiplyScalar(-e),x.add(R)}),O=function(){var e=new iN;return function(t,n){!0===l.screenSpacePanning?e.setFromMatrixColumn(n,1):(e.setFromMatrixColumn(n,0),e.crossVectors(l.object.up,e)),e.multiplyScalar(t),x.add(e)}}(),P=function(){var e=new iN;return function(t,n){var r=l.domElement;if(l.object.isPerspectiveCamera){var i=l.object.position;e.copy(i).sub(l.target);var a=e.length();a*=Math.tan(l.object.fov/2*Math.PI/180),L(2*t*a/r.clientHeight,l.object.matrix),O(2*n*a/r.clientHeight,l.object.matrix)}else l.object.isOrthographicCamera?(L(t*(l.object.right-l.object.left)/l.object.zoom/r.clientWidth,l.object.matrix),O(n*(l.object.top-l.object.bottom)/l.object.zoom/r.clientHeight,l.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),l.enablePan=!1)}}();function D(e){l.object.isPerspectiveCamera?y/=e:l.object.isOrthographicCamera?(l.object.zoom=Math.max(l.minZoom,Math.min(l.maxZoom,l.object.zoom*e)),l.object.updateProjectionMatrix(),v=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),l.enableZoom=!1)}function F(e){l.object.isPerspectiveCamera?y*=e:l.object.isOrthographicCamera?(l.object.zoom=Math.max(l.minZoom,Math.min(l.maxZoom,l.object.zoom/e)),l.object.updateProjectionMatrix(),v=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),l.enableZoom=!1)}function $(e){b.set(e.clientX,e.clientY)}function B(e){S.set(e.clientX,e.clientY)}function z(e){if(1==e.touches.length)b.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);b.set(t,n)}}function U(e){if(1==e.touches.length)S.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);S.set(t,n)}}function V(e){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,r=Math.sqrt(t*t+n*n);M.set(0,r)}function W(e){if(1==e.touches.length)w.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);w.set(t,n)}_.subVectors(w,b).multiplyScalar(l.rotateSpeed);var r=l.domElement;A(2*Math.PI*_.x/r.clientHeight),N(2*Math.PI*_.y/r.clientHeight),b.copy(w)}function H(e){if(1==e.touches.length)T.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);T.set(t,n)}E.subVectors(T,S).multiplyScalar(l.panSpeed),P(E.x,E.y),S.copy(T)}function G(e){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,r=Math.sqrt(t*t+n*n);C.set(0,r),I.set(0,Math.pow(C.y/M.y,l.zoomSpeed)),D(I.y),M.copy(C)}function j(e){if(!1!==l.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){var t;switch(e.preventDefault(),l.domElement.focus?l.domElement.focus():window.focus(),e.button){case 0:t=l.mouseButtons.LEFT;break;case 1:t=l.mouseButtons.MIDDLE;break;case 2:t=l.mouseButtons.RIGHT;break;default:t=-1}switch(t){case VA.DOLLY:if(!1===l.enableZoom)return;!function(e){M.set(e.clientX,e.clientY)}(e),d=p.DOLLY;break;case VA.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===l.enablePan)return;B(e),d=p.PAN}else{if(!1===l.enableRotate)return;$(e),d=p.ROTATE}break;case VA.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===l.enableRotate)return;$(e),d=p.ROTATE}else{if(!1===l.enablePan)return;B(e),d=p.PAN}break;default:d=p.NONE}d!==p.NONE&&(l.domElement.ownerDocument.addEventListener("pointermove",q),l.domElement.ownerDocument.addEventListener("pointerup",X),l.dispatchEvent(c))}(e)}}function q(e){if(!1!==l.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){if(!1===l.enabled)return;switch(e.preventDefault(),d){case p.ROTATE:if(!1===l.enableRotate)return;!function(e){w.set(e.clientX,e.clientY),_.subVectors(w,b).multiplyScalar(l.rotateSpeed);var t=l.domElement;A(2*Math.PI*_.x/t.clientHeight),N(2*Math.PI*_.y/t.clientHeight),b.copy(w),l.update()}(e);break;case p.DOLLY:if(!1===l.enableZoom)return;!function(e){C.set(e.clientX,e.clientY),I.subVectors(C,M),I.y>0?D(k()):I.y<0&&F(k()),M.copy(C),l.update()}(e);break;case p.PAN:if(!1===l.enablePan)return;!function(e){T.set(e.clientX,e.clientY),E.subVectors(T,S).multiplyScalar(l.panSpeed),P(E.x,E.y),S.copy(T),l.update()}(e)}}(e)}}function X(e){switch(e.pointerType){case"mouse":case"pen":!function(e){if(l.domElement.ownerDocument.removeEventListener("pointermove",q),l.domElement.ownerDocument.removeEventListener("pointerup",X),!1===l.enabled)return;l.dispatchEvent(h),d=p.NONE}()}}function K(e){!1===l.enabled||!1===l.enableZoom||d!==p.NONE&&d!==p.ROTATE||(e.preventDefault(),e.stopPropagation(),l.dispatchEvent(c),function(e){e.deltaY<0?F(k()):e.deltaY>0&&D(k()),l.update()}(e),l.dispatchEvent(h))}function Y(e){!1!==l.enabled&&!1!==l.enablePan&&function(e){var t=!1;switch(e.keyCode){case l.keys.UP:P(0,l.keyPanSpeed),t=!0;break;case l.keys.BOTTOM:P(0,-l.keyPanSpeed),t=!0;break;case l.keys.LEFT:P(l.keyPanSpeed,0),t=!0;break;case l.keys.RIGHT:P(-l.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),l.update())}(e)}function Z(e){if(!1!==l.enabled){switch(e.preventDefault(),e.touches.length){case 1:switch(l.touches.ONE){case WA.ROTATE:if(!1===l.enableRotate)return;z(e),d=p.TOUCH_ROTATE;break;case WA.PAN:if(!1===l.enablePan)return;U(e),d=p.TOUCH_PAN;break;default:d=p.NONE}break;case 2:switch(l.touches.TWO){case WA.DOLLY_PAN:if(!1===l.enableZoom&&!1===l.enablePan)return;!function(e){l.enableZoom&&V(e),l.enablePan&&U(e)}(e),d=p.TOUCH_DOLLY_PAN;break;case WA.DOLLY_ROTATE:if(!1===l.enableZoom&&!1===l.enableRotate)return;!function(e){l.enableZoom&&V(e),l.enableRotate&&z(e)}(e),d=p.TOUCH_DOLLY_ROTATE;break;default:d=p.NONE}break;default:d=p.NONE}d!==p.NONE&&l.dispatchEvent(c)}}function J(e){if(!1!==l.enabled)switch(e.preventDefault(),e.stopPropagation(),d){case p.TOUCH_ROTATE:if(!1===l.enableRotate)return;W(e),l.update();break;case p.TOUCH_PAN:if(!1===l.enablePan)return;H(e),l.update();break;case p.TOUCH_DOLLY_PAN:if(!1===l.enableZoom&&!1===l.enablePan)return;!function(e){l.enableZoom&&G(e),l.enablePan&&H(e)}(e),l.update();break;case p.TOUCH_DOLLY_ROTATE:if(!1===l.enableZoom&&!1===l.enableRotate)return;!function(e){l.enableZoom&&G(e),l.enableRotate&&W(e)}(e),l.update();break;default:d=p.NONE}}function Q(e){!1!==l.enabled&&(l.dispatchEvent(h),d=p.NONE)}function ee(e){!1!==l.enabled&&e.preventDefault()}l.domElement.addEventListener("contextmenu",ee),l.domElement.addEventListener("pointerdown",j),l.domElement.addEventListener("wheel",K),l.domElement.addEventListener("touchstart",Z),l.domElement.addEventListener("touchend",Q),l.domElement.addEventListener("touchmove",J),this.update()};(qB.prototype=Object.create(HA.prototype)).constructor=qB;var XB=function(e,t){qB.call(this,e,t),this.screenSpacePanning=!1,this.mouseButtons.LEFT=VA.PAN,this.mouseButtons.RIGHT=VA.ROTATE,this.touches.ONE=WA.PAN,this.touches.TWO=WA.DOLLY_ROTATE};(XB.prototype=Object.create(HA.prototype)).constructor=XB;var KB={};Object.defineProperty(KB,"__esModule",{value:!0});var YB,ZB=function(e,t,n,r,i,a,s){this.pointIndices=e,this.labelStrings=t,this.scaleFactors=n,this.useSceneOpacityFlags=r,this.defaultFontSize=i,this.fillColors=a,this.strokeColors=s};KB.LabelRenderParams=ZB,(YB=KB.CameraType||(KB.CameraType={}))[YB.Perspective=0]="Perspective",YB[YB.Orthographic=1]="Orthographic";var JB=function(e,t,n,r,i,a,s,o,l,u,c,h,p,d){this.camera=e,this.cameraType=t,this.cameraTarget=n,this.screenWidth=r,this.screenHeight=i,this.nearestCameraSpacePointZ=a,this.farthestCameraSpacePointZ=s,this.backgroundColor=o,this.pointColors=l,this.pointScaleFactors=u,this.labels=c,this.polylineColors=h,this.polylineOpacities=p,this.polylineWidths=d};KB.RenderContext=JB;var QB={};function ez(e,t){return void 0===t&&(t=!0),e.needsUpdate=t,e.minFilter=1006,e.generateMipmaps=!1,e.flipY=!1,e}Object.defineProperty(QB,"__esModule",{value:!0}),QB.vector3DToScreenCoords=function(e,t,n,r){var i=window.devicePixelRatio,a=(new iN).copy(r).project(e);return[(a.x+1)/2*t*i,-(a.y-1)/2*n*i]},QB.vector3FromPackedArray=function(e,t){var n=3*t;return new iN(e[n],e[n+1],e[n+2])},QB.getNearFarPoints=function(e,t,n){for(var r=1/0,i=0,a=(new iN).copy(n).sub(t),s=(new iN).copy(a).normalize(),o=e.length/3,l=0,u=new iN,c=new iN,h=0;h<o;h++){u.x=e[l],u.y=e[l+1],u.z=e[l+2],l+=3,c.copy(u).sub(t);var p=s.dot(c);p<0||(i=p>i?p:i,r=p<r?p:r)}return[r,i]},QB.createTextureFromCanvas=function(e){return ez(new QA(e))},QB.createTextureFromImage=function(e,t){var n=new QA(e);return e.complete?(n.needsUpdate=!0,t()):e.onload=function(){n.needsUpdate=!0,t()},ez(n,!1)},QB.hasWebGLSupport=function(){try{var e=document.createElement("canvas");return null!=(e.getContext("webgl")||e.getContext("experimental-webgl"))}catch(e){return!1}},QB.extent=function(e){for(var t=1/0,n=-1/0,r=0;r<e.length;r++){var i=e[r];i<t&&(t=i),i>n&&(n=i)}return[t,n]},QB.scaleLinear=function(e,t,n){var r=t[1]-t[0],i=n[1]-n[0];return(e-t[0])/r*i+n[0]},QB.scaleExponential=function(e,t,n){var r=Math.pow(t[1],Math.E)-Math.pow(t[0],Math.E),i=n[1]-n[0];return(Math.pow(e,Math.E)-t[0])/r*i+n[0]},QB.packRgbIntoUint8Array=function(e,t,n,r,i){e[3*t]=n,e[3*t+1]=r,e[3*t+2]=i},QB.styleRgbFromHexColor=function(e){var t=new ER(e);return[255*t.r|0,255*t.g|0,255*t.b|0]};var tz=function(e){return 100*e+"%"};QB.getDefaultPointInPolylineColor=function(e,t,n,r,i,a){var s="hsl("+(n+(r-n)*e/t)+", "+tz(i)+", "+tz(a)+")";return new ER(s)};var nz={};Object.defineProperty(nz,"__esModule",{value:!0});var rz=function(){function e(e,t,n){this.startCoordinates=[0,0],this.svgElement=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.svgElement.style.display="none",this.svgElement.style.height="100%",this.svgElement.style.width="100%",this.svgElement.style.position="absolute",e.insertAdjacentElement("afterbegin",this.svgElement),this.rectElement=document.createElementNS("http://www.w3.org/2000/svg","rect"),this.rectElement.style.stroke=n.select.stroke,this.rectElement.style.strokeDasharray=n.select.strokeDashArray,this.rectElement.style.strokeWidth=""+n.select.strokeWidth,this.rectElement.style.fill=n.select.fill,this.rectElement.style.fillOpacity=""+n.select.fillOpacity,this.svgElement.appendChild(this.rectElement),this.selectionCallback=t,this.isMouseDown=!1}return e.prototype.onMouseDown=function(e,t){this.isMouseDown=!0,this.rectElement.style.display="block",this.svgElement.style.display="block",this.startCoordinates=[e,t],this.lastBoundingBox={x:this.startCoordinates[0],y:this.startCoordinates[1],width:1,height:1}},e.prototype.onMouseMove=function(e,t){this.isMouseDown&&(this.lastBoundingBox.x=Math.min(e,this.startCoordinates[0]),this.lastBoundingBox.y=Math.max(t,this.startCoordinates[1]),this.lastBoundingBox.width=Math.max(e,this.startCoordinates[0])-this.lastBoundingBox.x,this.lastBoundingBox.height=this.lastBoundingBox.y-Math.min(t,this.startCoordinates[1]),this.rectElement.setAttribute("x",""+this.lastBoundingBox.x),this.rectElement.setAttribute("y",""+(this.lastBoundingBox.y-this.lastBoundingBox.height)),this.rectElement.setAttribute("width",""+this.lastBoundingBox.width),this.rectElement.setAttribute("height",""+this.lastBoundingBox.height))},e.prototype.onMouseUp=function(){this.isMouseDown=!1,this.svgElement.style.display="none",this.rectElement.style.display="none",this.rectElement.setAttribute("width","0"),this.rectElement.setAttribute("height","0"),this.selectionCallback(this.lastBoundingBox)},e}();nz.ScatterPlotRectangleSelector=rz;var iz=new iN(.45,.9,1.6),az=new iN(0,0,0),sz=new iN(0,0,4),oz=new iN(0,0,0),lz={mouseRotateSpeed:1,autoRotateSpeed:2,zoomSpeed:.125},uz=function(){function e(e,t){var n=this;this.clickCallback=function(){},this.hoverCallback=function(){},this.selectCallback=function(){},this.selectEnabled=!0,this.visualizers=new Map,this.onCameraMoveListeners=[],this.height=0,this.width=0,this.dimensions=3,this.interactionMode="PAN",this.pickingTexture=new nN(0,0),this.orbitAnimationOnNextCameraCreation=!1,this.orbitAnimationId=null,this.worldSpacePointPositions=new Float32Array(0),this.pointColors=new Float32Array(0),this.pointScaleFactors=new Float32Array(0),this.polylineColors={},this.polylineOpacities=new Float32Array(0),this.polylineWidths=new Float32Array(0),this.selecting=!1,this.nearestPoint=null,this.mouseIsDown=!1,this.isDragSequence=!1,this.lastHovered=null,this.container=e,this.styles=t.styles,this.setParameters(t),this.computeLayoutValues(),this.scene=new VP,this.renderer=new BP({alpha:!0,premultipliedAlpha:!1,antialias:!1}),this.renderer.setClearColor(this.styles.backgroundColor,1),this.container.appendChild(this.renderer.domElement),this.light=new B$(16772287,1,0),this.scene.add(this.light),this.orbitControlParams=BA(BA({},lz),t.orbitControlParams),this.rectangleSelector=new nz.ScatterPlotRectangleSelector(this.container,(function(e){n.selectBoundingBox(e)}),this.styles),this.addInteractionListeners(),this.setDimensions(3),this.makeCamera(t.camera),this.resize()}return e.prototype.setParameters=function(e){void 0!==e.onClick&&(this.clickCallback=e.onClick),void 0!==e.onHover&&(this.hoverCallback=e.onHover),void 0!==e.onSelect&&(this.selectCallback=e.onSelect),void 0!==e.selectEnabled&&(this.selectEnabled=e.selectEnabled)},e.prototype.addInteractionListeners=function(){this.container.addEventListener("pointermove",this.onMouseMove.bind(this)),this.container.addEventListener("pointerdown",this.onMouseDown.bind(this)),this.container.addEventListener("pointerup",this.onMouseUp.bind(this)),this.container.addEventListener("click",this.onClick.bind(this)),window.addEventListener("keydown",this.onKeyDown.bind(this),!1),window.addEventListener("keyup",this.onKeyUp.bind(this),!1)},e.prototype.addCameraControlsEventListeners=function(e){var t=this;e.addEventListener("start",(function(){t.stopOrbitAnimation(),t.onCameraMoveListeners.forEach((function(n){return n(t.camera.position,e.target)}))})),e.addEventListener("change",(function(){t.render()})),e.addEventListener("end",(function(){}))},e.prototype.makeOrbitControls=function(e,t){null!=this.orbitCameraControls&&this.orbitCameraControls.dispose();var n=new qB(e,this.renderer.domElement);n.zoomSpeed=this.orbitControlParams.zoomSpeed,n.enableRotate=t,n.autoRotate=!1,n.enableKeys=!1,n.rotateSpeed=this.orbitControlParams.mouseRotateSpeed,t?(n.mouseButtons.LEFT=VA.LEFT,n.mouseButtons.RIGHT=VA.RIGHT):(n.mouseButtons.LEFT=VA.RIGHT,n.mouseButtons.RIGHT=VA.LEFT),n.reset(),this.camera=e,this.orbitCameraControls=n,this.addCameraControlsEventListeners(this.orbitCameraControls)},e.prototype.makeCamera=function(e){void 0===e&&(e={});var t=this.makeDefaultCameraDef(this.dimensions,e);this.recreateCamera(t),3===this.dimensions&&this.styles.axesVisible?this.add3dAxes():this.remove3dAxesFromScene()},e.prototype.makeCamera3D=function(e,t,n){var r;(r=new EL(70,t/n,.01,100)).position.set(e.position[0],e.position[1],e.position[2]);var i=new iN(e.target[0],e.target[1],e.target[2]);r.lookAt(i),r.zoom=e.zoom,r.updateProjectionMatrix(),this.camera=r,this.makeOrbitControls(r,!0)},e.prototype.makeCamera2D=function(e,t,n){var r,i=new iN(e.target[0],e.target[1],e.target[2]),a=t/n,s=-1.2,o=1.2,l=-1.2,u=1.2;a>1?(s*=a,o*=a):(u/=a,l/=a),(r=new z$(s,o,u,l,-1e3,1e3)).position.set(e.position[0],e.position[1],e.position[2]),r.up=new iN(0,0,1),r.lookAt(i),r.zoom=e.zoom,r.updateProjectionMatrix(),this.camera=r,this.makeOrbitControls(r,!1)},e.prototype.makeDefaultCameraDef=function(e,t){void 0===t&&(t={});var n=2===e,r=n?sz:iz,i=n?oz:az,a={orthographic:n,zoom:1,position:[r.x,r.y,r.z],target:[i.x,i.y,i.z]};return t.zoom&&(a.zoom=t.zoom),t.position&&(a.position=t.position),t.target&&(a.target=t.target),a},e.prototype.recreateCamera=function(e){e.orthographic?this.makeCamera2D(e,this.width,this.height):this.makeCamera3D(e,this.width,this.height),this.orbitCameraControls.minDistance=.05,this.orbitCameraControls.maxDistance=10,this.orbitCameraControls.update(),this.orbitAnimationOnNextCameraCreation&&this.startOrbitAnimation()},e.prototype.setInteractionMode=function(e){this.interactionMode=e,"SELECT"===e?(this.selecting=!0,this.container.style.cursor="crosshair",this.orbitCameraControls.enabled=!1):(this.selecting=!1,this.container.style.cursor="default",this.orbitCameraControls.enabled=!0)},e.prototype.onClick=function(e,t){if(void 0===t&&(t=!0),!e||!this.selecting){if(!this.isDragSequence&&t){if(this.selectEnabled){var n=null!=this.nearestPoint?[this.nearestPoint]:[];this.selectCallback(n)}this.clickCallback(this.nearestPoint)}this.isDragSequence=!1,this.render()}},e.prototype.onMouseDown=function(e){this.isDragSequence=!1,this.mouseIsDown=!0,this.selecting?(this.rectangleSelector.onMouseDown(e.offsetX,e.offsetY),this.setNearestPointToMouse(e)):!e.ctrlKey&&this.sceneIs3D()&&this.orbitCameraControls.mouseButtons.ORBIT===VA.RIGHT?(this.orbitCameraControls.mouseButtons.ORBIT=VA.LEFT,this.orbitCameraControls.mouseButtons.PAN=VA.RIGHT):e.ctrlKey&&this.sceneIs3D()&&this.orbitCameraControls.mouseButtons.ORBIT===VA.LEFT&&(this.orbitCameraControls.mouseButtons.ORBIT=VA.RIGHT,this.orbitCameraControls.mouseButtons.PAN=VA.LEFT)},e.prototype.onMouseUp=function(e){this.selecting&&(this.rectangleSelector.onMouseUp(),this.render()),this.mouseIsDown=!1},e.prototype.onMouseMove=function(e){this.isDragSequence=this.mouseIsDown,this.selecting&&this.mouseIsDown?(this.rectangleSelector.onMouseMove(e.offsetX,e.offsetY),this.render()):this.mouseIsDown||(this.setNearestPointToMouse(e),this.nearestPoint!=this.lastHovered&&(this.lastHovered=this.nearestPoint,this.hoverCallback(this.nearestPoint)))},e.prototype.onKeyDown=function(e){"Control"===e.key&&this.sceneIs3D()&&(this.orbitCameraControls.mouseButtons.ORBIT=VA.RIGHT,this.orbitCameraControls.mouseButtons.PAN=VA.LEFT),"Shift"===e.key&&this.selectEnabled&&(this.selecting=!0,this.orbitCameraControls.enabled=!1,this.container.style.cursor="crosshair")},e.prototype.onKeyUp=function(e){"Control"===e.key&&this.sceneIs3D()&&(this.orbitCameraControls.mouseButtons.ORBIT=VA.LEFT,this.orbitCameraControls.mouseButtons.PAN=VA.RIGHT),"Shift"===e.key&&this.selectEnabled&&(this.selecting=!1,this.orbitCameraControls.enabled=!0,this.container.style.cursor="default",this.render())},e.prototype.getPointIndicesFromBoundingBox=function(e){if(null==this.worldSpacePointPositions)return[];this.camera.updateMatrixWorld();var t=window.devicePixelRatio||1,n=Math.floor(e.x*t),r=Math.floor(e.y*t),i=Math.max(Math.floor(e.width*t),1),a=Math.max(Math.floor(e.height*t),1);if(i<=2&&a<=2)return this.getPointIndicesFromBoundingBoxPickingTexture(e);for(var s=this.renderer.domElement,o=s.width,l=s.height,u=[],c=new iN,h=0;h<this.worldSpacePointPositions.length;h++){var p=3*h,d=zA(this.worldSpacePointPositions.slice(p,p+3),3),f=d[0],m=d[1],g=d[2];c.x=f,c.y=m,c.z=g;var y=c.project(this.camera),x=(y.x+1)*o/2,v=-(y.y-1)*l/2;x>=n&&x<=n+i&&v<=r&&v>=r-a&&u.push(h)}return u},e.prototype.getPointIndicesFromBoundingBoxPickingTexture=function(e){if(null==this.worldSpacePointPositions)return[];var t=this.worldSpacePointPositions.length/3,n=window.devicePixelRatio||1,r=Math.floor(e.x*n),i=Math.floor(e.y*n),a=Math.max(Math.floor(e.width*n),1),s=Math.max(Math.floor(e.height*n),1),o=new Uint8Array(a*s*4);this.renderer.readRenderTargetPixels(this.pickingTexture,r,this.pickingTexture.height-i,a,s,o);for(var l=new Uint8Array(this.worldSpacePointPositions.length),u=0;u<a*s;u++){var c=o[4*u]<<16|o[4*u+1]<<8|o[4*u+2];16777215!==c&&c<t&&(l[c]=1)}var h=[];for(u=0;u<l.length;u++)1===l[u]&&h.push(u);return h},e.prototype.selectBoundingBox=function(e){var t=this.getPointIndicesFromBoundingBox(e);this.selectCallback(t)},e.prototype.setNearestPointToMouse=function(e){if(null!=this.pickingTexture){var t={x:e.offsetX,y:e.offsetY,width:1,height:1},n=this.getPointIndicesFromBoundingBoxPickingTexture(t);this.nearestPoint=n.length?n[0]:null}else this.nearestPoint=null},e.prototype.computeLayoutValues=function(){return this.width=this.container.offsetWidth,this.height=Math.max(1,this.container.offsetHeight),[this.width,this.height]},e.prototype.sceneIs3D=function(){return 3===this.dimensions},e.prototype.remove3dAxesFromScene=function(){var e=this.scene.getObjectByName("axes");return null!=e&&this.scene.remove(e),e},e.prototype.add3dAxes=function(){var e=new FB;e.name="axes",this.scene.add(e)},e.prototype.setDimensions=function(e){if(2!==e&&3!==e)throw new RangeError("dimensions must be 2 or 3");this.dimensions!==e&&(this.dimensions=e,this.makeCamera())},e.prototype.getCameraPosition=function(){var e=this.camera.position;return[e.x,e.y,e.z]},e.prototype.getCameraTarget=function(){var e=this.orbitCameraControls.target;return[e.x,e.y,e.z]},e.prototype.setCameraPositionAndTarget=function(e,t){this.stopOrbitAnimation(),this.camera.position.set(e[0],e[1],e[2]),this.orbitCameraControls.target.set(t[0],t[1],t[2]),this.orbitCameraControls.update(),this.render()},e.prototype.startOrbitAnimation=function(){this.sceneIs3D()&&(null!=this.orbitAnimationId&&this.stopOrbitAnimation(),this.orbitCameraControls.autoRotate=!0,this.orbitCameraControls.autoRotateSpeed=this.orbitControlParams.autoRotateSpeed,this.updateOrbitAnimation())},e.prototype.orbitIsAnimating=function(){return null!=this.orbitAnimationId},e.prototype.updateOrbitAnimation=function(){var e=this;this.orbitCameraControls.update(),this.orbitAnimationId=requestAnimationFrame((function(){return e.updateOrbitAnimation()}))},e.prototype.stopOrbitAnimation=function(){this.orbitCameraControls.autoRotate=!1,this.orbitCameraControls.rotateSpeed=this.orbitControlParams.mouseRotateSpeed,null!=this.orbitAnimationId&&(cancelAnimationFrame(this.orbitAnimationId),this.orbitAnimationId=null)},e.prototype.setActiveVisualizers=function(e){var t,n,r,i,a=new Set(e.map((function(e){return e.id})));try{for(var s=UA(this.visualizers.values()),o=s.next();!o.done;o=s.next()){var l=o.value;a.has(l.id)||(l.dispose(),this.visualizers.delete(l.id))}}catch(e){t={error:e}}finally{try{o&&!o.done&&(n=s.return)&&n.call(s)}finally{if(t)throw t.error}}try{for(var u=UA(e),c=u.next();!c.done;c=u.next()){l=c.value;this.visualizers.set(l.id,l),l.setScene(this.scene),l.onResize(this.width,this.height),this.worldSpacePointPositions&&l.onPointPositionsChanged(this.worldSpacePointPositions)}}catch(e){r={error:e}}finally{try{c&&!c.done&&(i=u.return)&&i.call(u)}finally{if(r)throw r.error}}},e.prototype.disposeAllVisualizers=function(){this.visualizers.forEach((function(e){return e.dispose()})),this.visualizers.clear()},e.prototype.setPointPositions=function(e){this.worldSpacePointPositions=e,this.visualizers.forEach((function(t){return t.onPointPositionsChanged(e)}))},e.prototype.render=function(){var e=this.camera.position.clone();e.x+=1,e.y+=1,this.light.position.set(e.x,e.y,e.z);var t=this.camera instanceof EL?KB.CameraType.Perspective:KB.CameraType.Orthographic,n=[0,0];null!=this.worldSpacePointPositions&&(n=QB.getNearFarPoints(this.worldSpacePointPositions,this.camera.position,this.orbitCameraControls.target));var r=new KB.RenderContext(this.camera,t,this.orbitCameraControls.target,this.width,this.height,n[0],n[1],this.styles.backgroundColor,this.pointColors,this.pointScaleFactors,this.labels,this.polylineColors,this.polylineOpacities,this.polylineWidths);this.visualizers.forEach((function(e){return e.onPickingRender(r)}));var i=this.remove3dAxesFromScene();this.renderer.setRenderTarget(this.pickingTexture),this.renderer.render(this.scene,this.camera),null!=i&&this.scene.add(i),this.visualizers.forEach((function(e){return e.onRender(r)})),this.renderer.setRenderTarget(null),this.renderer.render(this.scene,this.camera)},e.prototype.setPointColors=function(e){this.pointColors=e},e.prototype.setPointScaleFactors=function(e){this.pointScaleFactors=e},e.prototype.setLabels=function(e){this.labels=e},e.prototype.setPolylineColors=function(e){this.polylineColors=e},e.prototype.setPolylineOpacities=function(e){this.polylineOpacities=e},e.prototype.setPolylineWidths=function(e){this.polylineWidths=e},e.prototype.resetZoom=function(){this.recreateCamera(this.makeDefaultCameraDef(this.dimensions)),this.render()},e.prototype.setDayNightMode=function(e){for(var t=this.container.querySelectorAll("canvas"),n=e?"invert(100%)":"",r=0;r<t.length;r++)t[r].style.filter=n},e.prototype.resize=function(e){void 0===e&&(e=!0);var t=zA([this.width,this.height],2),n=t[0],r=t[1],i=zA(this.computeLayoutValues(),2),a=i[0],s=i[1];if(3===this.dimensions){(o=this.camera).aspect=a/s,o.updateProjectionMatrix()}else{var o=this.camera,l=a/n,u=s/r,c=(o.right-o.left)*l/2,h=(o.top-o.bottom)*u/2;o.top=h,o.bottom=-h,o.left=-c,o.right=c,o.updateProjectionMatrix()}var p=window.devicePixelRatio||1;this.renderer.setPixelRatio(p),this.renderer.setSize(a,s);var d=new XA;this.renderer.getSize(d);var f=this.renderer.getPixelRatio();this.pickingTexture=new nN(d.width*f,d.height*f),this.pickingTexture.texture.minFilter=1006,this.visualizers.forEach((function(e){return e.onResize(a,s)})),e&&this.render()},e.prototype.onCameraMove=function(e){this.onCameraMoveListeners.push(e)},e.prototype.clickOnPoint=function(e){this.nearestPoint=e,this.onClick(null,!1)},e}();$A.ScatterPlot=uz;var cz={},hz=cz&&cz.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,a=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)s.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return s};Object.defineProperty(cz,"__esModule",{value:!0});var pz=new Map,dz=/^(rgba|hsla)\((\d+),\s*(\d+%?),\s*(\d+%?)(?:,\s*(\d+(?:\.\d+)?))?\)$/;cz.parseColor=function(e){if(pz.has(e))return pz.get(e);var t=function(e){var t=dz.exec(e);if(t){var n=hz(t,6),r=(n[0],n[1]),i=n[2],a=n[3],s=n[4],o=n[5];return{colorString:r.replace("a","")+"("+i+","+a+","+s+")",opacity:parseFloat(o)}}return{colorString:e,opacity:1}}(e),n=t.colorString,r=t.opacity,i=new ER(n),a={r:i.r,g:i.g,b:i.b,opacity:r};return pz.set(e,a),a};var fz={},mz=fz&&fz.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(fz,"__esModule",{value:!0});var gz=function(){function e(e,t){var n,r;void 0===t&&(t=[]),this.points=e,this.metadata=t;var i=e[0].length;if(2!==i&&3!==i)throw new Error("Points must be an array of either 2 or 3 dimensional number arrays");try{for(var a=mz(e),s=a.next();!s.done;s=a.next()){if(i!==s.value.length)throw new Error("Points must be an array of either 2 or 3 dimensional number arrays")}}catch(e){n={error:e}}finally{try{s&&!s.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}this.dimensions=i}return e.prototype.setSpriteMetadata=function(e){this.spriteMetadata=e},e}();fz.Dataset=gz;var yz={};Object.defineProperty(yz,"__esModule",{value:!0});yz.makeStyles=function(e){var t={backgroundColor:"#ffffff",axesVisible:!0,fog:{color:"#ffffff",enabled:!0,threshold:5e3},label:{fontSize:10,scaleDefault:1,scaleLarge:2,fillColorSelected:"#000000",fillColorHover:"#000000",strokeColorSelected:"#ffffff",strokeColorHover:"#ffffff",strokeWidth:3,fillWidth:6},label3D:{fontSize:80,scale:2.2,color:"black",backgroundColor:"#ffffff",colorUnselected:"#ffffff",colorNoSelection:"#ffffff"},point:{colorUnselected:"rgba(227, 227, 227, 0.7)",colorNoSelection:"rgba(117, 117, 217, 0.7)",colorSelected:"rgba(250, 102, 102, 0.7)",colorHover:"rgba(118, 11, 79, 0.7)",scaleDefault:1,scaleSelected:1.2,scaleHover:1.2},polyline:{startHue:60,endHue:360,saturation:1,lightness:.3,defaultOpacity:.2,defaultLineWidth:2,selectedOpacity:.9,selectedLineWidth:3,deselectedOpacity:.05},select:{fill:"#dddddd",fillOpacity:.2,stroke:"#aaaaaa",strokeWidth:2,strokeDashArray:"10 5"},sprites:{minPointSize:5,imageSize:30,colorUnselected:"#ffffff",colorNoSelection:"#ffffff"}};if(void 0===e)return t;for(var n in t){var r=n;"object"==typeof t[r]&&"object"==typeof e[r]?t[r]=Object.assign(t[r],e[r]):void 0!==e[r]&&(t[r]=e[r])}return t};var xz={};Object.defineProperty(xz,"__esModule",{value:!0}),xz.RGB_NUM_ELEMENTS=3,xz.RGBA_NUM_ELEMENTS=4,xz.XYZ_NUM_ELEMENTS=3,xz.UV_NUM_ELEMENTS=2,xz.INDEX_NUM_ELEMENTS=1,xz.SCATTER_PLOT_CUBE_LENGTH=2;var vz={};Object.defineProperty(vz,"__esModule",{value:!0});var bz=function(e,t){return"\n      attribute vec2 posObj;\n      attribute vec4 color;\n      varying vec2 vUv;\n      varying vec4 vColor;\n\n      void main() {\n        vUv = uv;\n        vColor = color;\n\n        // Rotate label to face camera.\n\n        vec4 vRight = vec4(\n          modelViewMatrix[0][0], modelViewMatrix[1][0], modelViewMatrix[2][0], 0);\n\n        vec4 vUp = vec4(\n          modelViewMatrix[0][1], modelViewMatrix[1][1], modelViewMatrix[2][1], 0);\n\n        vec4 vAt = -vec4(\n          modelViewMatrix[0][2], modelViewMatrix[1][2], modelViewMatrix[2][2], 0);\n\n        mat4 pointToCamera = mat4(vRight, vUp, vAt, vec4(0, 0, 0, 1));\n\n        vec2 scaledPos = posObj * "+1/e+" * "+t+";\n\n        vec4 posRotated = pointToCamera * vec4(scaledPos, 0, 1);\n        vec4 mvPosition = modelViewMatrix * (vec4(position, 0) + posRotated);\n        gl_Position = projectionMatrix * mvPosition;\n      }"},wz=function(){function e(e){this.styles=e,this.id="3D_LABELS",this.labelStrings=[],this.worldSpacePointPositions=new Float32Array(0),this.pickingColors=new Float32Array(0),this.renderColors=new Float32Array(0),this.uniforms={},this.totalVertexCount=0,this.labelVertexMap=[]}return e.prototype.createGlyphTexture=function(){var e=this.styles.label3D,t=e.fontSize,n=e.backgroundColor,r=e.color,i=document.createElement("canvas");i.width=8192,i.height=t;var a=i.getContext("2d");a.font="bold "+t+"px roboto",a.textBaseline="top",a.fillStyle=n,a.rect(0,0,i.width,i.height),a.fill(),a.fillStyle=r;for(var s=a.measureText(" ").width,o=new Float32Array(256),l=new Float32Array(256),u=0,c=0;c<256;c++){var h=" "+String.fromCharCode(c),p=a.measureText(h).width;o[c]=p-s,l[c]=u,a.fillText(h,u-s,0),u+=p}return{texture:QB.createTextureFromCanvas(i),lengths:o,offsets:l}},e.prototype.processLabelVerts=function(e){var t=0;this.labelVertexMap=[];for(var n=0;n<e;n++){for(var r=this.labelStrings[n],i=[],a=0;a<r.length;a++){for(var s=0;s<6;s++)i.push(6*t+s);t++}this.labelVertexMap.push(i)}this.totalVertexCount=6*t},e.prototype.createColorBuffers=function(e){var t=this;this.pickingColors=new Float32Array(this.totalVertexCount*xz.RGB_NUM_ELEMENTS),this.renderColors=new Float32Array(this.totalVertexCount*xz.RGB_NUM_ELEMENTS);for(var n=function(e){var n=new ER(e);r.labelVertexMap[e].forEach((function(e){t.pickingColors[xz.RGB_NUM_ELEMENTS*e]=n.r,t.pickingColors[xz.RGB_NUM_ELEMENTS*e+1]=n.g,t.pickingColors[xz.RGB_NUM_ELEMENTS*e+2]=n.b,t.renderColors[xz.RGB_NUM_ELEMENTS*e]=1,t.renderColors[xz.RGB_NUM_ELEMENTS*e+1]=1,t.renderColors[xz.RGB_NUM_ELEMENTS*e+2]=1}))},r=this,i=0;i<e;i++)n(i)},e.prototype.createLabels=function(){var e=this,t=this.styles.label3D,n=t.fontSize,r=t.scale;if(null!=this.labelStrings&&null!=this.worldSpacePointPositions){var i=this.worldSpacePointPositions.length/xz.XYZ_NUM_ELEMENTS;if(i===this.labelStrings.length){this.glyphTexture=this.createGlyphTexture(),this.uniforms={glyphTexture:{value:null},picking:{value:!1}},this.material=new SL({uniforms:this.uniforms,transparent:!0,vertexShader:bz(n,r),fragmentShader:"\n      uniform sampler2D glyphTexture;\n      uniform bool picking;\n      varying vec2 vUv;\n      varying vec4 vColor;\n\n      void main() {\n        if (picking) {\n          gl_FragColor = vColor;\n        } else {\n          vec4 fromTexture = texture(glyphTexture, vUv);\n          gl_FragColor = vColor * fromTexture;\n        }\n      }"}),this.processLabelVerts(i),this.createColorBuffers(i);var a=new Float32Array(this.totalVertexCount*xz.XYZ_NUM_ELEMENTS);this.positions=new RR(a,xz.XYZ_NUM_ELEMENTS);var s=new Float32Array(this.totalVertexCount*xz.XYZ_NUM_ELEMENTS),o=new Float32Array(this.totalVertexCount*xz.UV_NUM_ELEMENTS),l=new Float32Array(this.totalVertexCount*xz.RGB_NUM_ELEMENTS),u=new RR(s,2),c=new RR(o,xz.UV_NUM_ELEMENTS),h=new RR(l,xz.RGB_NUM_ELEMENTS);this.geometry=new QR,this.geometry.setAttribute("posObj",u),this.geometry.setAttribute("position",this.positions),this.geometry.setAttribute("uv",c),this.geometry.setAttribute("color",h);for(var p=0,d=0;d<i;d++){for(var f=this.labelStrings[d],m=0,g=0;g<f.length;g++){var y=f.charCodeAt(g);m+=this.glyphTexture.lengths[y]}m/=-2;for(g=0;g<f.length;g++){y=f.charCodeAt(g);var x=this.glyphTexture.lengths[y],v=(m+x)/n,b=m/n,w=n/n;u.setXY(6*p+0,b,0),u.setXY(6*p+1,v,0),u.setXY(6*p+2,b,w),u.setXY(6*p+3,b,w),u.setXY(6*p+4,v,0),u.setXY(6*p+5,v,w);var _=this.glyphTexture.offsets[y],S=this.glyphTexture.offsets[y]+x;_/=8192,S/=8192;c.setXY(6*p+0,_,1),c.setXY(6*p+1,S,1),c.setXY(6*p+2,_,0),c.setXY(6*p+3,_,0),c.setXY(6*p+4,S,1),c.setXY(6*p+5,S,0),p++,m+=x}}var T=function(t){var n=QB.vector3FromPackedArray(E.worldSpacePointPositions,t);E.labelVertexMap[t].forEach((function(t){e.positions.setXYZ(t,n.x,n.y,n.z)}))},E=this;for(d=0;d<i;d++)T(d);this.labelsMesh=new yL(this.geometry,this.material),this.labelsMesh.frustumCulled=!1,this.scene.add(this.labelsMesh)}}},e.prototype.colorLabels=function(e){if(null!=this.labelStrings&&null!=this.geometry&&null!=e){var t=this.geometry.getAttribute("color");t.array=this.renderColors;for(var n=e.length/xz.RGBA_NUM_ELEMENTS,r=0,i=0;i<n;++i){for(var a=new ER(e[r],e[r+1],e[r+2]),s=this.labelVertexMap[i].length,o=0;o<s;++o)t.setXYZ(this.labelVertexMap[i][o],a.r,a.g,a.b);r+=xz.RGBA_NUM_ELEMENTS}t.needsUpdate=!0}},e.prototype.setScene=function(e){this.scene=e},e.prototype.dispose=function(){this.labelsMesh&&(this.scene&&this.scene.remove(this.labelsMesh),this.labelsMesh=null),this.geometry&&(this.geometry.dispose(),this.geometry=null),null!=this.glyphTexture&&null!=this.glyphTexture.texture&&(this.glyphTexture.texture.dispose(),this.glyphTexture.texture=null)},e.prototype.onPickingRender=function(e){if(null!=this.geometry){this.material.uniforms.glyphTexture.value=this.glyphTexture.texture,this.material.uniforms.picking.value=!0;var t=this.geometry.getAttribute("color");t.array=this.pickingColors,t.needsUpdate=!0}else this.createLabels()},e.prototype.onRender=function(e){if(null!=this.geometry){this.colorLabels(e.pointColors),this.material.uniforms.glyphTexture.value=this.glyphTexture.texture,this.material.uniforms.picking.value=!1;var t=this.geometry.getAttribute("color");t.array=this.renderColors,t.needsUpdate=!0}else this.createLabels()},e.prototype.onPointPositionsChanged=function(e){this.worldSpacePointPositions=e,this.dispose()},e.prototype.setLabelStrings=function(e){this.labelStrings=e,this.dispose()},e.prototype.onResize=function(e,t){},e}();vz.ScatterPlotVisualizer3DLabels=wz;var _z={};Object.defineProperty(_z,"__esModule",{value:!0});var Sz=function(e){return"\n    // Index of the specific vertex (passed in as bufferAttribute), and the\n    // variable that will be used to pass it to the fragment shader.\n    attribute float spriteIndex;\n    attribute vec4 color;\n    attribute float scaleFactor;\n\n    varying vec2 xyIndex;\n    varying vec4 vColor;\n\n    uniform bool sizeAttenuation;\n    uniform float pointSize;\n    uniform float spritesPerRow;\n    uniform float spritesPerColumn;\n\n    varying float fogDepth;\n\n    void main() {\n      // Pass index and color values to fragment shader.\n      vColor = color;\n      xyIndex = vec2(mod(spriteIndex, spritesPerRow),\n                floor(spriteIndex / spritesPerColumn));\n\n      // Transform current vertex by modelViewMatrix (model world position and\n      // camera world position matrix).\n      vec4 cameraSpacePos = modelViewMatrix * vec4(position, 1.0);\n\n      // Project vertex in camera-space to screen coordinates using the camera's\n      // projection matrix.\n      gl_Position = projectionMatrix * cameraSpacePos;\n\n      // Create size attenuation (if we're in 3D mode) by making the size of\n      // each point inversly proportional to its distance to the camera.\n      float outputPointSize = pointSize;\n      if (sizeAttenuation) {\n        outputPointSize = -pointSize / cameraSpacePos.z;\n        fogDepth = pointSize / outputPointSize * 1.2;\n      } else {  // Create size attenuation (if we're in 2D mode)\n        const float PI = 3.1415926535897932384626433832795;\n        const float minScale = 0.1;  // minimum scaling factor\n        const float outSpeed = 2.0;  // shrink speed when zooming out\n        const float outNorm = (1. - minScale) / atan(outSpeed);\n        const float maxScale = 15.0;  // maximum scaling factor\n        const float inSpeed = 0.02;  // enlarge speed when zooming in\n        const float zoomOffset = 0.3;  // offset zoom pivot\n        float zoom = projectionMatrix[0][0] + zoomOffset;  // zoom pivot\n        float scale = zoom < 1. ? 1. + outNorm * atan(outSpeed * (zoom - 1.)) :\n                      1. + 2. / PI * (maxScale - 1.) * atan(inSpeed * (zoom - 1.));\n        outputPointSize = pointSize * scale;\n      }\n\n      gl_PointSize =\n        max(outputPointSize * scaleFactor, "+e.toFixed(1)+");\n    }"},Tz="\n    bool point_in_unit_circle(vec2 spriteCoord) {\n      vec2 centerToP = spriteCoord - vec2(0.5, 0.5);\n      return dot(centerToP, centerToP) < (0.5 * 0.5);\n    }\n\n    bool point_in_unit_equilateral_triangle(vec2 spriteCoord) {\n      vec3 v0 = vec3(0, 1, 0);\n      vec3 v1 = vec3(0.5, 0, 0);\n      vec3 v2 = vec3(1, 1, 0);\n      vec3 p = vec3(spriteCoord, 0);\n      float p_in_v0_v1 = cross(v1 - v0, p - v0).z;\n      float p_in_v1_v2 = cross(v2 - v1, p - v1).z;\n      return (p_in_v0_v1 > 0.0) && (p_in_v1_v2 > 0.0);\n    }\n\n    bool point_in_unit_square(vec2 spriteCoord) {\n      return true;\n    }\n  ",Ez="\n    varying vec2 xyIndex;\n    varying vec4 vColor;\n\n    uniform sampler2D spriteTexture;\n    uniform float spritesPerRow;\n    uniform float spritesPerColumn;\n    uniform bool isImage;\n\n    "+DL.common+"\n    "+Tz+"\n    uniform vec3 fogColor;\n    varying float fogDepth;\n\t\tuniform float fogNear;\n    uniform float fogFar;\n\n    void main() {\n      if (isImage) {\n        // Coordinates of the vertex within the entire sprite image.\n        vec2 coords =\n          (gl_PointCoord + xyIndex) / vec2(spritesPerRow, spritesPerColumn);\n        gl_FragColor = vColor * texture(spriteTexture, coords);\n      } else {\n        bool inside = point_in_unit_circle(gl_PointCoord);\n        if (!inside) {\n          discard;\n        }\n        gl_FragColor = vColor;\n      }\n      float fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n      gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n    }",Mz=function(){function e(e,t){this.styles=e,this.id="SPRITES",this.isSpriteSheetMode=!1,this.spritesPerRow=0,this.spritesPerColumn=0,this.spriteDimensions=[0,0],this.worldSpacePointPositions=new Float32Array(0),this.pickingColors=new Float32Array(0),this.renderColors=new Float32Array(0),this.standinTextureForPoints=QB.createTextureFromCanvas(document.createElement("canvas")),t&&(this.spriteSheetParams=t,this.setSpriteSheet(t),this.isSpriteSheetMode=!0),this.renderMaterial=this.createRenderMaterial(),this.pickingMaterial=this.createPickingMaterial()}return e.prototype.createUniforms=function(){return{spriteTexture:{type:"t"},spritesPerRow:{type:"f"},spritesPerColumn:{type:"f"},fogColor:{type:"c"},fogNear:{type:"f"},fogFar:{type:"f"},isImage:{type:"bool"},sizeAttenuation:{type:"bool"},pointSize:{type:"f"}}},e.prototype.createRenderMaterial=function(){this.isSpriteSheetMode;return new SL({uniforms:this.createUniforms(),vertexShader:Sz(this.styles.sprites.minPointSize),fragmentShader:Ez,transparent:!0,depthFunc:2,fog:this.styles.fog.enabled,blending:1})},e.prototype.createPickingMaterial=function(){return new SL({uniforms:this.createUniforms(),vertexShader:Sz(this.styles.sprites.minPointSize),fragmentShader:"\n    varying vec2 xyIndex;\n    varying vec4 vColor;\n    uniform bool isImage;\n\n    \n    bool point_in_unit_circle(vec2 spriteCoord) {\n      vec2 centerToP = spriteCoord - vec2(0.5, 0.5);\n      return dot(centerToP, centerToP) < (0.5 * 0.5);\n    }\n\n    bool point_in_unit_equilateral_triangle(vec2 spriteCoord) {\n      vec3 v0 = vec3(0, 1, 0);\n      vec3 v1 = vec3(0.5, 0, 0);\n      vec3 v2 = vec3(1, 1, 0);\n      vec3 p = vec3(spriteCoord, 0);\n      float p_in_v0_v1 = cross(v1 - v0, p - v0).z;\n      float p_in_v1_v2 = cross(v2 - v1, p - v1).z;\n      return (p_in_v0_v1 > 0.0) && (p_in_v1_v2 > 0.0);\n    }\n\n    bool point_in_unit_square(vec2 spriteCoord) {\n      return true;\n    }\n  \n\n    varying float fogDepth;\n\n    void main() {\n      xyIndex; // Silence 'unused variable' warning.\n      fogDepth; // Silence 'unused variable' warning.\n      if (isImage) {\n        gl_FragColor = vColor;\n      } else {\n        bool inside = point_in_unit_circle(gl_PointCoord);\n        if (!inside) {\n          discard;\n        }\n        gl_FragColor = vColor;\n      }\n    }",transparent:!0,depthTest:!0,depthWrite:!0,fog:!1,blending:1})},e.prototype.createPointSprites=function(e,t){var n=null!=t?t.length/xz.XYZ_NUM_ELEMENTS:0,r=this.createGeometry(n);this.fog=new UP(16777215),this.points=new VD(r,this.renderMaterial),this.points.frustumCulled=!1,null!=this.spriteIndexBufferAttribute&&this.points.geometry.setAttribute("spriteIndex",this.spriteIndexBufferAttribute),e.add(this.points)},e.prototype.calculatePointSize=function(e){var t=this.styles.sprites.imageSize;if(this.texture)return e?t:this.spriteDimensions[0];var n=null!=this.worldSpacePointPositions?this.worldSpacePointPositions.length/xz.XYZ_NUM_ELEMENTS:1,r=200/Math.log(n)/Math.log(8);return e?r:r/1.5},e.prototype.createGeometry=function(e){var t=e;this.pickingColors=new Float32Array(t*xz.RGBA_NUM_ELEMENTS);for(var n=0,r=0;r<t;r++){var i=new ER(r);this.pickingColors[n++]=i.r,this.pickingColors[n++]=i.g,this.pickingColors[n++]=i.b,this.pickingColors[n++]=1}var a=new QR;return a.setAttribute("position",new RR(new Float32Array([]),xz.XYZ_NUM_ELEMENTS)),a.setAttribute("color",new RR(new Float32Array([]),xz.RGBA_NUM_ELEMENTS)),a.setAttribute("scaleFactor",new RR(new Float32Array([]),xz.INDEX_NUM_ELEMENTS)),a.computeVertexNormals(),a},e.prototype.setFogDistances=function(e,t,n){var r=this.styles.fog,i=r.threshold,a=r.enabled;if(e&&a){this.fog.near=t;var s=t-n;this.fog.far=t-i*s}else this.fog.near=1/0,this.fog.far=1/0},e.prototype.dispose=function(){this.disposeGeometry(),this.disposeSpriteSheet()},e.prototype.disposeGeometry=function(){null!=this.points&&(this.scene.remove(this.points),this.points.geometry.dispose(),this.points=null,this.worldSpacePointPositions=null)},e.prototype.disposeSpriteSheet=function(){this.texture&&this.texture.dispose(),this.texture=null,this.renderMaterial=null,this.pickingMaterial=null,this.spriteSheetImage=null},e.prototype.setScene=function(e){this.scene=e},e.prototype.setSpriteSheet=function(e){var t=this,n=e.spriteDimensions,r=e.onImageLoad,i=e.spritesheetImage;if("string"==typeof i){var a=i;(i=new Image).src=a}this.spriteSheetImage=i,this.texture=QB.createTextureFromImage(this.spriteSheetImage,(function(){t.spritesPerRow=t.spriteSheetImage.width/n[0],t.spritesPerColumn=t.spriteSheetImage.height/n[1],r()})),this.spriteDimensions=n,this.setSpriteIndexBuffer()},e.prototype.setSpriteIndexBuffer=function(){var e=this.spriteSheetParams.spriteIndices;this.spriteIndexBufferAttribute=new RR(e,xz.INDEX_NUM_ELEMENTS),null!=this.points&&this.points.geometry.setAttribute("spriteIndex",this.spriteIndexBufferAttribute)},e.prototype.onPointPositionsChanged=function(e){null!=this.points&&this.worldSpacePointPositions.length!==e.length&&this.disposeGeometry(),this.worldSpacePointPositions=e,null==this.points&&this.createPointSprites(this.scene,e),this.spriteSheetParams&&this.setSpriteIndexBuffer(),this.renderMaterial=this.createRenderMaterial(),this.pickingMaterial=this.createPickingMaterial();var t=this.points.geometry.getAttribute("position");t.array=e,t.count=e.length/xz.XYZ_NUM_ELEMENTS,t.needsUpdate=!0},e.prototype.onPickingRender=function(e){var t=e.cameraType===KB.CameraType.Perspective;this.pickingMaterial.uniforms.spritesPerRow.value=this.spritesPerRow,this.pickingMaterial.uniforms.spritesPerRow.value=this.spritesPerColumn,this.pickingMaterial.uniforms.sizeAttenuation.value=t,this.pickingMaterial.uniforms.pointSize.value=this.calculatePointSize(t),this.points.material=this.pickingMaterial;var n=this.points.geometry.getAttribute("color");n.array=this.pickingColors,n.count=this.pickingColors.length/xz.RGBA_NUM_ELEMENTS,n.needsUpdate=!0;var r=this.points.geometry.getAttribute("scaleFactor");r.array=e.pointScaleFactors,r.count=e.pointScaleFactors.length,r.count=e.pointScaleFactors.length/xz.INDEX_NUM_ELEMENTS,r.needsUpdate=!0},e.prototype.onRender=function(e){var t=e.camera instanceof EL;this.setFogDistances(t,e.nearestCameraSpacePointZ,e.farthestCameraSpacePointZ),this.scene.fog=this.fog,this.scene.fog.color=new ER(e.backgroundColor),this.renderMaterial.uniforms.fogColor.value=this.scene.fog.color,this.renderMaterial.uniforms.fogNear.value=this.fog.near,this.renderMaterial.uniforms.fogFar.value=this.fog.far,this.renderMaterial.uniforms.spritesPerRow.value=this.spritesPerRow,this.renderMaterial.uniforms.spritesPerColumn.value=this.spritesPerColumn,this.renderMaterial.uniforms.isImage.value=null!=this.texture,this.renderMaterial.uniforms.spriteTexture.value=null!=this.texture?this.texture:this.standinTextureForPoints,this.renderMaterial.uniforms.sizeAttenuation.value=t,this.renderMaterial.uniforms.pointSize.value=this.calculatePointSize(t),this.points.material=this.renderMaterial;var n=this.points.geometry.getAttribute("color");this.renderColors=e.pointColors,n.array=this.renderColors,n.count=this.renderColors.length/xz.RGBA_NUM_ELEMENTS,n.needsUpdate=!0;var r=this.points.geometry.getAttribute("scaleFactor");r.array=e.pointScaleFactors,r.count=e.pointScaleFactors.length/xz.INDEX_NUM_ELEMENTS,r.needsUpdate=!0},e.prototype.onResize=function(e,t){},e}();_z.ScatterPlotVisualizerSprites=Mz;var Cz={},Iz=Cz&&Cz.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,a=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)s.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return s};Object.defineProperty(Cz,"__esModule",{value:!0});var kz={};Object.defineProperty(kz,"__esModule",{value:!0});var Az=function(){function e(e,t,n){this.bound=e,this.cellWidth=t,this.cellHeight=n,this.numHorizCells=Math.ceil(this.boundWidth(e)/t),this.numVertCells=Math.ceil(this.boundHeight(e)/n),this.grid=new Array(this.numHorizCells*this.numVertCells)}return e.prototype.boundWidth=function(e){return e.hiX-e.loX},e.prototype.boundHeight=function(e){return e.hiY-e.loY},e.prototype.boundsIntersect=function(e,t){return!(e.loX>t.hiX||e.loY>t.hiY||e.hiX<t.loX||e.hiY<t.loY)},e.prototype.insert=function(e,t){if(void 0===t&&(t=!1),e.hiX<this.bound.loX||e.loX>this.bound.hiX||e.hiY<this.bound.loY||e.loY>this.bound.hiY)return!1;for(var n=this.getCellX(e.loX),r=this.getCellX(e.hiX),i=this.getCellY(e.loY),a=this.getCellY(e.hiY),s=i*this.numHorizCells+n,o=s,l=i;l<=a;l++){for(var u=n;u<=r;u++){var c=this.grid[o++];if(c)for(var h=0;h<c.length;h++)if(this.boundsIntersect(e,c[h]))return!1}o+=this.numHorizCells-(r-n+1)}if(t)return!0;o=s;for(l=i;l<=a;l++){for(u=n;u<=r;u++)this.grid[o]?this.grid[o].push(e):this.grid[o]=[e],o++;o+=this.numHorizCells-(r-n+1)}return!0},e.prototype.getCellX=function(e){return Math.floor((e-this.bound.loX)/this.cellWidth)},e.prototype.getCellY=function(e){return Math.floor((e-this.bound.loY)/this.cellHeight)},e}();kz.CollisionGrid=Az;var Nz=function(){function e(e,t){this.styles=t,this.id="CANVAS_LABELS",this.worldSpacePointPositions=new Float32Array(0),this.labelsActive=!0,this.canvas=document.createElement("canvas"),e.appendChild(this.canvas),this.gc=this.canvas.getContext("2d"),this.canvas.style.position="absolute",this.canvas.style.left="0",this.canvas.style.top="0",this.canvas.style.pointerEvents="none"}return e.prototype.removeAllLabels=function(){var e=this.canvas.width*window.devicePixelRatio,t=this.canvas.height*window.devicePixelRatio;this.gc.clearRect(0,0,e,t)},e.prototype.makeLabels=function(e){if(null!=e.labels&&0!==e.labels.pointIndices.length&&null!=this.worldSpacePointPositions){var t,n=e.labels,r=e.cameraType===KB.CameraType.Perspective,i=parseInt(this.gc.font,10),a=window.devicePixelRatio,s=this.canvas.width*a,o=this.canvas.height*a,l={loX:0,hiX:s,loY:0,hiY:o};t=new kz.CollisionGrid(l,s/25,o/50);var u=[e.farthestCameraSpacePointZ,e.nearestCameraSpacePointZ],c=function(e){return QB.scaleExponential(e,u,[.1,1])},h=e.camera.position,p=h.clone().sub(e.cameraTarget),d=new iN;this.gc.textBaseline="middle",this.gc.miterLimit=2;for(var f=Math.min(1e4,n.pointIndices.length),m=0;m<f;++m){var g,y=n.pointIndices[m];if(g=QB.vector3FromPackedArray(this.worldSpacePointPositions,y),d.copy(h).sub(g),!(p.dot(d)<0)){var x=Iz(QB.vector3DToScreenCoords(e.camera,e.screenWidth,e.screenHeight,g),2),v=x[0],b=x[1],w={loX:(v+=4)-2,hiX:v+1+2,loY:b-i/2-2,hiY:b+i/2+2};if(t.insert(w,!0)){var _=n.labelStrings[m],S=n.defaultFontSize*n.scaleFactors[m]*a;if(this.gc.font=S+"px roboto",w.hiX+=this.gc.measureText(_).width-1,t.insert(w)){var T=1;r&&1===n.useSceneOpacityFlags[m]&&(T=c(d.length())),this.gc.fillStyle=this.styleStringFromPackedRgba(n.fillColors,m,T),this.gc.strokeStyle=this.styleStringFromPackedRgba(n.strokeColors,m,T),this.gc.lineWidth=this.styles.label.strokeWidth,this.gc.strokeText(_,v,b),this.gc.lineWidth=this.styles.label.fillWidth,this.gc.fillText(_,v,b)}}}}}},e.prototype.styleStringFromPackedRgba=function(e,t,n){var r=3*t;return"rgba("+e[r]+","+e[r+1]+","+e[r+2]+","+n+")"},e.prototype.onResize=function(e,t){var n=window.devicePixelRatio;this.canvas.width=e*n,this.canvas.height=t*n,this.canvas.style.width=e+"px",this.canvas.style.height=t+"px"},e.prototype.dispose=function(){this.removeAllLabels()},e.prototype.onPointPositionsChanged=function(e){this.worldSpacePointPositions=e,this.removeAllLabels()},e.prototype.onRender=function(e){this.labelsActive&&(this.removeAllLabels(),this.makeLabels(e))},e.prototype.setScene=function(e){},e.prototype.onPickingRender=function(e){},e}();Cz.ScatterPlotVisualizerCanvasLabels=Nz;var Rz={},Lz=Rz&&Rz.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(Rz,"__esModule",{value:!0});var Oz=function(){function e(){this.id="POLYLINES",this.sequences=[],this.polylines=[],this.polylinePositionBuffer={},this.polylineColorBuffer={},this.pointSequenceIndices=new Map}return e.prototype.getPointSequenceIndex=function(e){return this.pointSequenceIndices.get(e)},e.prototype.updateSequenceIndices=function(){for(var e=0;e<this.sequences.length;e++)for(var t=this.sequences[e],n=0;n<t.indices.length-1;n++){var r=t.indices[n];this.pointSequenceIndices.set(r,e),this.pointSequenceIndices.set(r+1,e)}},e.prototype.createPolylines=function(){var e,t;this.updateSequenceIndices();try{for(var n=Lz(this.polylines),r=n.next();!r.done;r=n.next()){var i=r.value;this.scene.remove(i),i.geometry.dispose()}}catch(t){e={error:t}}finally{try{r&&!r.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}this.polylines=[];for(var a=0;a<this.sequences.length;a++){var s=new QR;s.addAttribute("position",this.polylinePositionBuffer[a]),s.addAttribute("color",this.polylineColorBuffer[a]),(i=new PD(s,new MD({linewidth:1,opacity:1,transparent:!0,vertexColors:!0}))).frustumCulled=!1,this.polylines.push(i),this.scene.add(i)}},e.prototype.dispose=function(){var e,t;try{for(var n=Lz(this.polylines),r=n.next();!r.done;r=n.next()){var i=r.value;this.scene.remove(i),i.geometry.dispose()}}catch(t){e={error:t}}finally{try{r&&!r.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}this.polylines=[],this.polylinePositionBuffer={},this.polylineColorBuffer={}},e.prototype.setScene=function(e){this.scene=e},e.prototype.setSequences=function(e){this.sequences=e},e.prototype.onPointPositionsChanged=function(e){if(null==e&&this.dispose(),null!=e&&0!==this.sequences.length){for(var t=0;t<this.sequences.length;t++){var n=2*((a=this.sequences[t]).indices.length-1),r=new Float32Array(n*xz.XYZ_NUM_ELEMENTS);this.polylinePositionBuffer[t]=new RR(r,xz.XYZ_NUM_ELEMENTS);var i=new Float32Array(n*xz.RGBA_NUM_ELEMENTS);this.polylineColorBuffer[t]=new RR(i,xz.RGBA_NUM_ELEMENTS)}for(t=0;t<this.sequences.length;t++){for(var a=this.sequences[t],s=0,o=0;o<a.indices.length-1;o++){var l=a.indices[o],u=a.indices[o+1],c=QB.vector3FromPackedArray(e,l),h=QB.vector3FromPackedArray(e,u);this.polylinePositionBuffer[t].setXYZ(s,c.x,c.y,c.z),this.polylinePositionBuffer[t].setXYZ(s+1,h.x,h.y,h.z),s+=2}this.polylinePositionBuffer[t].needsUpdate=!0}this.createPolylines()}},e.prototype.onRender=function(e){for(var t=0;t<this.polylines.length;t++){var n=this.polylines[t].material;n.opacity=e.polylineOpacities[t],n.linewidth=e.polylineWidths[t],this.polylineColorBuffer[t].array=e.polylineColors[t],this.polylineColorBuffer[t].needsUpdate=!0}},e.prototype.onPickingRender=function(e){},e.prototype.onResize=function(e,t){},e}();Rz.ScatterPlotVisualizerPolylines=Oz;var Pz=function(){function e(e,t){var n=this;void 0===t&&(t={}),this.pointColorer=null,this.sequences=[],this.renderMode="POINT",this.rotateOnStart=!0,this.selectEnabled=!0,this.showLabelsOnHover=!0,this.hoverPointIndex=null,this.selectedPointIndices=new Set,this.clickCallback=function(){},this.hoverCallback=function(){},this.selectCallback=function(){},this.cameraMoveCallback=function(){},this.onHover=function(e){n.hoverCallback(e),n.hoverPointIndex=e,n.updateScatterPlotAttributes(),n.renderScatterPlot()},this.onClick=function(e){n.clickCallback(e)},this.select=function(e){n.selectEnabled&&(n.selectedPointIndices=new Set(e),n.updateScatterPlotAttributes(),n.renderScatterPlot())},this.onSelect=function(e){n.selectEnabled&&(n.selectCallback(e),n.select(e))},this.containerElement=e,this.styles=yz.makeStyles(t.styles),this.setParameters(t),this.scatterPlot=new $A.ScatterPlot(e,{camera:t.camera,onClick:this.onClick,onHover:this.onHover,onSelect:this.onSelect,selectEnabled:this.selectEnabled,styles:this.styles,orbitControlParams:t.orbitControls}),this.scatterPlot.onCameraMove(this.cameraMoveCallback)}return e.prototype.setParameters=function(e){void 0!==e.onClick&&(this.clickCallback=e.onClick),void 0!==e.onHover&&(this.hoverCallback=e.onHover),void 0!==e.onSelect&&(this.selectCallback=e.onSelect),void 0!==e.onCameraMove&&(this.cameraMoveCallback=e.onCameraMove),void 0!==e.pointColorer&&(this.pointColorer=e.pointColorer),void 0!==e.renderMode&&(this.renderMode=e.renderMode),void 0!==e.rotateOnStart&&(this.rotateOnStart=e.rotateOnStart),void 0!==e.selectEnabled&&(this.selectEnabled=e.selectEnabled),void 0!==e.showLabelsOnHover&&(this.showLabelsOnHover=e.showLabelsOnHover)},e.prototype.render=function(e){this.updateDataset(e),this.clearVisualizers(),this.setVisualizers(),this.rotateOnStart&&this.scatterPlot.startOrbitAnimation()},e.prototype.clearVisualizers=function(){this.canvasLabelsVisualizer=void 0,this.labels3DVisualizer=void 0,this.pointVisualizer=void 0,this.polylineVisualizer=void 0,this.spritesheetVisualizer=void 0,this.scatterPlot.disposeAllVisualizers()},e.prototype.renderScatterPlot=function(){this.dataset&&this.scatterPlot.render()},e.prototype.resetZoom=function(){this.scatterPlot.resetZoom()},e.prototype.setRenderMode=function(e){this.renderMode=e,this.setVisualizers(),this.updateScatterPlotAttributes(),this.updateScatterPlotPositions()},e.prototype.setTextRenderMode=function(){this.setRenderMode("TEXT"),this.renderScatterPlot()},e.prototype.setPointRenderMode=function(){this.setRenderMode("POINT"),this.renderScatterPlot()},e.prototype.setSpriteRenderMode=function(){this.dataset&&this.dataset.spriteMetadata&&(this.setRenderMode("SPRITE"),this.renderScatterPlot())},e.prototype.setSequences=function(e){this.sequences=e,this.updatePolylineAttributes(),this.setVisualizers(),this.renderScatterPlot()},e.prototype.setPanMode=function(){this.scatterPlot.setInteractionMode("PAN")},e.prototype.setSelectMode=function(){this.scatterPlot.setInteractionMode("SELECT")},e.prototype.setDimensions=function(e){var t=e<2||e>3,n=this.dataset&&e>this.dataset.dimensions;if(t||n)throw new RangeError("Setting invalid dimensionality");this.scatterPlot.setDimensions(e),this.renderScatterPlot()},e.prototype.setPointColorer=function(e){this.pointColorer=e,this.updateScatterPlotAttributes(),this.renderScatterPlot()},e.prototype.callPointColorer=function(e,t){return e(t,this.selectedPointIndices,this.hoverPointIndex)},e.prototype.setHoverPointIndex=function(e){this.hoverPointIndex=e,this.updateScatterPlotAttributes(),this.scatterPlot.orbitIsAnimating()||this.renderScatterPlot()},e.prototype.resize=function(){this.scatterPlot.resize()},e.prototype.updateDataset=function(e){this.setDataset(e),this.scatterPlot.setDimensions(e.dimensions),this.updateScatterPlotAttributes(),this.updateScatterPlotPositions(),this.renderScatterPlot()},e.prototype.isOrbiting=function(){return this.scatterPlot.orbitIsAnimating()},e.prototype.startOrbitAnimation=function(){this.scatterPlot.startOrbitAnimation()},e.prototype.stopOrbitAnimation=function(){this.scatterPlot.stopOrbitAnimation()},e.prototype.setDataset=function(e){this.dataset=e,this.labels3DVisualizer&&this.labels3DVisualizer.setLabelStrings(this.generate3DLabelsArray())},e.prototype.updateScatterPlotPositions=function(){var e=this.dataset;if(e){var t=this.generatePointPositionArray(e);this.scatterPlot.setPointPositions(t)}},e.prototype.updateScatterPlotAttributes=function(){var e=this.dataset;if(e){var t=this.generatePointColorArray(e),n=this.generatePointScaleFactorArray(e),r=this.generateVisibleLabelRenderParams();this.scatterPlot.setPointColors(t),this.scatterPlot.setPointScaleFactors(n),this.scatterPlot.setLabels(r)}},e.prototype.updatePolylineAttributes=function(){var e=this.dataset;if(e){var t=this.generateLineSegmentColorMap(e),n=this.generateLineSegmentOpacityArray(e),r=this.generateLineSegmentWidthArray(e);this.scatterPlot.setPolylineColors(t),this.scatterPlot.setPolylineOpacities(n),this.scatterPlot.setPolylineWidths(r)}},e.prototype.generatePointPositionArray=function(e){var t,n,r=[0,0];t=QB.extent(e.points.map((function(e){return e[0]}))),n=QB.extent(e.points.map((function(e){return e[1]}))),3===e.dimensions&&(r=QB.extent(e.points.map((function(e){return e[2]}))));var i=function(e){return Math.abs(e[1]-e[0])},a=i(t),s=i(n),o=i(r),l=Math.max(a,s,o),u=xz.SCATTER_PLOT_CUBE_LENGTH/2,c=function(e,t){return[e/l*-t,t*(e/l)]},h=c(a,u),p=c(s,u),d=c(o,u),f=new Float32Array(3*e.points.length),m=0;return e.points.forEach((function(i,a){var s=e.points[a];f[m++]=QB.scaleLinear(s[0],t,h),f[m++]=QB.scaleLinear(s[1],n,p),3===e.dimensions?f[m++]=QB.scaleLinear(s[2],r,d):f[m++]=0})),f},e.prototype.generateVisibleLabelRenderParams=function(){var e=this,t=e.hoverPointIndex,n=e.selectedPointIndices,r=e.styles,i=null!==t?1:0,a=new Uint32Array(i),s=new Float32Array(i),o=new Int8Array(i),l=new Uint8Array(3*i),u=new Uint8Array(3*i),c=[];s.fill(r.label.scaleDefault),o.fill(1);var h=0;if(null!==t){c.push(this.getLabelText(t)),a[h]=t,s[h]=r.label.scaleLarge,o[h]=0;var p=QB.styleRgbFromHexColor(r.label.fillColorHover);QB.packRgbIntoUint8Array(l,h,p[0],p[1],p[2]);var d=QB.styleRgbFromHexColor(r.label.strokeColorHover);QB.packRgbIntoUint8Array(u,h,d[0],d[1],d[1]),++h}p=QB.styleRgbFromHexColor(r.label.fillColorSelected),d=QB.styleRgbFromHexColor(r.label.strokeColorSelected);if(1===n.size){var f=DA(n)[0];c.push(this.getLabelText(f)),a[h]=f,s[h]=r.label.scaleLarge,o[h]=0,QB.packRgbIntoUint8Array(l,h,p[0],p[1],p[2]),QB.packRgbIntoUint8Array(u,h,d[0],d[1],d[2])}return new KB.LabelRenderParams(new Float32Array(a),c,s,o,r.label.fontSize,l,u)},e.prototype.generatePointScaleFactorArray=function(e){var t,n,r=this,i=r.hoverPointIndex,a=r.selectedPointIndices,s=r.styles.point,o=s.scaleDefault,l=s.scaleSelected,u=s.scaleHover,c=new Float32Array(e.points.length);c.fill(o);a.size;try{for(var h=FA(a.values()),p=h.next();!p.done;p=h.next()){c[p.value]=l}}catch(e){t={error:e}}finally{try{p&&!p.done&&(n=h.return)&&n.call(h)}finally{if(t)throw t.error}}return null!=i&&(c[i]=u),c},e.prototype.generatePointColorArray=function(e){var t,n,r=this,i=r.hoverPointIndex,a=r.pointColorer,s=r.selectedPointIndices,o=r.styles.point,l=o.colorHover,u=o.colorNoSelection,c=o.colorSelected,h=o.colorUnselected,p=new Float32Array(e.points.length*xz.RGBA_NUM_ELEMENTS),d=h,f=u;"TEXT"===this.renderMode&&(d=this.styles.label3D.colorUnselected,f=this.styles.label3D.colorNoSelection),"SPRITE"===this.renderMode&&(d=this.styles.sprites.colorUnselected,f=this.styles.sprites.colorNoSelection);var m=e.points.length,g=this.selectedPointIndices.size;if(a)for(var y=0,x=0;x<m;++x){var v=cz.parseColor(this.callPointColorer(a,x)||f);p[y++]=v.r,p[y++]=v.g,p[y++]=v.b,p[y++]=v.opacity}else{for(y=0,v=g>0?cz.parseColor(d):cz.parseColor(f),x=0;x<m;++x)p[y++]=v.r,p[y++]=v.g,p[y++]=v.b,p[y++]=v.opacity;v=cz.parseColor(c);try{for(var b=FA(s.values()),w=b.next();!w.done;w=b.next()){var _=w.value*xz.RGBA_NUM_ELEMENTS;p[_++]=v.r,p[_++]=v.g,p[_++]=v.b,p[_++]=v.opacity}}catch(e){t={error:e}}finally{try{w&&!w.done&&(n=b.return)&&n.call(b)}finally{if(t)throw t.error}}if(null!=i){var S=cz.parseColor(l),T=i*xz.RGBA_NUM_ELEMENTS;p[T++]=S.r,p[T++]=S.g,p[T++]=S.b,p[T++]=S.opacity}}return p},e.prototype.generate3DLabelsArray=function(){var e=this.dataset;if(!e)return[];for(var t=[],n=e.points.length,r=0;r<n;++r)t.push(this.getLabelText(r));return t},e.prototype.generateLineSegmentColorMap=function(e){for(var t=this.pointColorer,n=this.styles,r={},i=0;i<this.sequences.length;i++){var a=this.sequences[i],s=new Float32Array(2*(a.indices.length-1)*3),o=0;if(t)for(var l=0;l<a.indices.length-1;l++){var u=cz.parseColor(this.callPointColorer(t,a.indices[l])),c=cz.parseColor(this.callPointColorer(t,a.indices[l+1]));s[o++]=u.r,s[o++]=u.g,s[o++]=u.b,s[o++]=c.r,s[o++]=c.g,s[o++]=c.b}else for(l=0;l<a.indices.length-1;l++){u=QB.getDefaultPointInPolylineColor(l,a.indices.length,n.polyline.startHue,n.polyline.endHue,n.polyline.saturation,n.polyline.lightness),c=QB.getDefaultPointInPolylineColor(l+1,a.indices.length,n.polyline.startHue,n.polyline.endHue,n.polyline.saturation,n.polyline.lightness);s[o++]=u.r,s[o++]=u.g,s[o++]=u.b,s[o++]=c.r,s[o++]=c.g,s[o++]=c.b}r[i]=s}return r},e.prototype.generateLineSegmentOpacityArray=function(e){var t=this.selectedPointIndices,n=this.styles,r=new Float32Array(this.sequences.length);if(t.size>0){r.fill(n.polyline.deselectedOpacity);var i=this.polylineVisualizer.getPointSequenceIndex(DA(t)[0]);void 0!==i&&(r[i]=n.polyline.selectedOpacity)}else r.fill(n.polyline.defaultOpacity);return r},e.prototype.generateLineSegmentWidthArray=function(e){var t=this.selectedPointIndices,n=this.styles,r=new Float32Array(this.sequences.length);if(r.fill(n.polyline.defaultLineWidth),t.size>0){var i=this.polylineVisualizer.getPointSequenceIndex(DA(t)[0]);void 0!==i&&(r[i]=n.polyline.selectedLineWidth)}return r},e.prototype.getLabelText=function(e){var t=this.dataset;if(!t)return"";var n=t.metadata[e];return n&&null!=n.label?""+n.label:""},e.prototype.initializeCanvasLabelsVisualizer=function(){return this.canvasLabelsVisualizer||(this.canvasLabelsVisualizer=new Cz.ScatterPlotVisualizerCanvasLabels(this.containerElement,this.styles)),this.canvasLabelsVisualizer},e.prototype.initialize3DLabelsVisualizer=function(){return this.labels3DVisualizer||(this.labels3DVisualizer=new vz.ScatterPlotVisualizer3DLabels(this.styles)),this.labels3DVisualizer.setLabelStrings(this.generate3DLabelsArray()),this.labels3DVisualizer},e.prototype.initializePointVisualizer=function(){return this.pointVisualizer||(this.pointVisualizer=new _z.ScatterPlotVisualizerSprites(this.styles)),this.pointVisualizer},e.prototype.initializeSpritesheetVisualizer=function(){var e=this,t=this.styles,n=this.dataset,r=n.spriteMetadata;if(!this.spritesheetVisualizer&&r){if(!r.spriteImage||!r.singleSpriteSize)return;var i=n.points.length,a=void 0;if(r.spriteIndices)a=new Float32Array(r.spriteIndices);else{a=new Float32Array(i);for(var s=0;s<i;++s)a[s]=s}var o=new _z.ScatterPlotVisualizerSprites(t,{spritesheetImage:r.spriteImage,spriteDimensions:r.singleSpriteSize,spriteIndices:a,onImageLoad:function(){return e.renderScatterPlot()}});o.id="SPRITE_SHEET_VISUALIZER",this.spritesheetVisualizer=o}return this.spritesheetVisualizer},e.prototype.initializePolylineVisualizer=function(){return this.polylineVisualizer||(this.polylineVisualizer=new Rz.ScatterPlotVisualizerPolylines),this.polylineVisualizer.setSequences(this.sequences),this.polylineVisualizer},e.prototype.setVisualizers=function(){var e=this.dataset,t=this.renderMode,n=[];if("TEXT"===t){var r=this.initialize3DLabelsVisualizer();n.push(r)}else if("POINT"===t){r=this.initializePointVisualizer();n.push(r)}else if("SPRITE"===t&&e.spriteMetadata){(r=this.initializeSpritesheetVisualizer())&&n.push(r)}if(this.sequences.length>0){r=this.initializePolylineVisualizer();n.push(r)}if(("POINT"===t||"SPRITE"===t)&&this.showLabelsOnHover){r=this.initializeCanvasLabelsVisualizer();n.push(r)}this.scatterPlot.setActiveVisualizers(n)},e.Dataset=fz.Dataset,e}();OA.ScatterGL=Pz,LA.ScatterGL=OA.ScatterGL,LA.Dataset=fz.Dataset;const Dz={"640 X 480":{width:640,height:480},"640 X 360":{width:640,height:360},"360 X 270":{width:360,height:270}},Fz={camera:{targetFPS:60,sizeOption:"640 X 480"},backend:"mediapipe-gpu",model:Pk.BlazePose,flags:{},isModelChanged:!1,modelConfig:{maxPoses:1,type:"full",scoreThreshold:.65,render3D:!1}},$z={WEBGL_VERSION:[1,2],WASM_HAS_SIMD_SUPPORT:[!0,!1],WASM_HAS_MULTITHREAD_SUPPORT:[!0,!1],WEBGL_CPU_FORWARD:[!0,!1],WEBGL_PACK:[!0,!1],WEBGL_FORCE_F16_TEXTURES:[!0,!1],WEBGL_RENDER_FLOAT32_CAPABLE:[!0,!1],WEBGL_FLUSH_THRESHOLD:[-1,0,.25,.5,.75,1,1.25,1.5,1.75,2],CHECK_COMPUTATION_FOR_ERRORS:[!0,!1]};Pk.PoseNet,Pk.MoveNet,Pk.BlazePose;function Bz(){return/Android/i.test(navigator.userAgent)||/iPhone|iPad|iPod/i.test(navigator.userAgent)}async function zz(e){const t=wu();if(!(e in t.registryFactory))throw new Error(`${e} backend is not registed.`);if(e in t.registry){const t=(n=e,hn.findBackendFactory(n));!function(e){hn.removeBackend(e)}(e),Mu(e,t)}var n;await function(e){return hn.setBackend(e)}(e)}async function Uz(e,t){if(null==e)return;if("object"!=typeof e)throw new Error(`An object is expected, while a(n) ${typeof e} is found.`);for(const t in e){if(!(t in $z))throw new Error(`${t} is not a tunable or valid environment flag.`);if(-1===$z[t].indexOf(e[t]))throw new Error(`${t} value is expected to be in the range [${$z[t]}], while ${e[t]} is found.`)}se().setFlags(e);const[n,r]=t.split("-");"tfjs"===n&&await zz(r)}const Vz=[[0,0,0],[0,1,0],[-1,0,0],[-1,-1,0]],Wz=["#ffffff","#800000","#469990","#e6194b","#42d4f4","#fabed4","#aaffc3","#9a6324","#000075","#f58231","#4363d8","#ffd8b1","#dcbeff","#808000","#ffe119","#911eb4","#bfef45","#f032e6","#3cb44b","#a9a9a9"];class Hz{video=document.querySelector("video");canvas=document.querySelector("#output");ctx=this.canvas?.getContext("2d");scatterGLEl=document.querySelector("#scatter-gl-container");scatterGL=new LA.ScatterGL(this.scatterGLEl,{rotateOnStart:!0,selectEnabled:!1,styles:{polyline:{defaultOpacity:1,deselectedOpacity:1}}});scatterGLHasInitialized=!1;static async setupCamera(e){if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new Error("Browser API navigator.mediaDevices.getUserMedia not available");const{targetFPS:t,sizeOption:n}=e,r=Dz[n],i={audio:!1,video:{facingMode:"user",width:Bz()?Dz["360 X 270"].width:r.width,height:Bz()?Dz["360 X 270"].height:r.height,frameRate:{ideal:t}}},a=await navigator.mediaDevices.getUserMedia(i),s=new Hz;s.video.srcObject=a,await new Promise((e=>{s.video.onloadedmetadata=()=>{e(1)}})),s.video.play();const o=s.video.videoWidth,l=s.video.videoHeight;s.video.width=o,s.video.height=l,s.canvas.width=o,s.canvas.height=l;return document.querySelector(".canvas-wrapper").style=`width: ${o}px; height: ${l}px`,s.ctx.translate(s.video.videoWidth,0),s.ctx.scale(-1,1),s.scatterGLEl.style=`width: ${o}px; height: ${l}px;`,s.scatterGL.resize(),s.scatterGLEl.style.display=Fz.modelConfig.render3D?"inline-block":"none",s}drawCtx(){this.ctx.drawImage(this.video,0,0,this.video.videoWidth,this.video.videoHeight)}clearCtx(){this.ctx.clearRect(0,0,this.video.videoWidth,this.video.videoHeight)}drawResults(e){for(const t of e)this.drawResult(t)}drawResult(e){null!=e.keypoints&&(this.drawKeypoints(e.keypoints),this.drawSkeleton(e.keypoints,e.id)),null!=e.keypoints3D&&Fz.modelConfig.render3D&&this.drawKeypoints3D(e.keypoints3D)}drawKeypoints(e){const t=Uk.getKeypointIndexBySide(Fz.model);this.ctx.fillStyle="Red",this.ctx.strokeStyle="White",this.ctx.lineWidth=2;for(const n of t.middle)this.drawKeypoint(e[n]);this.ctx.fillStyle="Green";for(const n of t.left)this.drawKeypoint(e[n]);this.ctx.fillStyle="Orange";for(const n of t.right)this.drawKeypoint(e[n])}drawKeypoint(e){if((null!=e.score?e.score:1)>=(Fz.modelConfig.scoreThreshold||0)){const t=new Path2D;t.arc(e.x,e.y,4,0,2*Math.PI),this.ctx.fill(t),this.ctx.stroke(t)}}drawSkeleton(e,t){const n=Fz.modelConfig.enableTracking&&null!=t?Wz[t%20]:"White";this.ctx.fillStyle=n,this.ctx.strokeStyle=n,this.ctx.lineWidth=2,Uk.getAdjacentPairs(Fz.model).forEach((([t,n])=>{const r=e[t],i=e[n],a=null!=r.score?r.score:1,s=null!=i.score?i.score:1,o=Fz.modelConfig.scoreThreshold||0;a>=o&&s>=o&&(this.ctx.beginPath(),this.ctx.moveTo(r.x,r.y),this.ctx.lineTo(i.x,i.y),this.ctx.stroke())}))}drawKeypoints3D(e){const t=Fz.modelConfig.scoreThreshold||0,n=e.map((e=>[-e.x,-e.y,-e.z])),r=new LA.ScatterGL.Dataset([...n,...Vz]),i=Uk.getKeypointIndexBySide(Fz.model);this.scatterGL.setPointColorer((n=>null==e[n]||e[n].score<t?"#ffffff":0===n?"#ff0000":i.left.indexOf(n)>-1?"#00ff00":i.right.indexOf(n)>-1?"#ffa500":void 0)),this.scatterGLHasInitialized?this.scatterGL.updateDataset(r):this.scatterGL.render(r);const a=Uk.getAdjacentPairs(Fz.model).map((e=>({indices:e})));this.scatterGL.setSequences(a),this.scatterGLHasInitialized=!0}}let Gz,jz,qz,Xz=[!1,!1],Kz=0,Yz=0,Zz=[!1,!1],Jz=document.querySelector("#sound-correct"),Qz={question:""};function eU(e){const t=e[0].keypoints,n=t[15],r=t[16],i=n.score>=.8,a=r.score>=.8;Xz[0]===i&&Xz[1]===a||(Xz=[i,a],Kz=Date.now()),0===Yz&&tU(),Yz<Date.now()&&Kz+300<Date.now()&&Zz[0]===Xz[0]&&Zz[1]===Xz[1]&&(Jz.pause(),Jz.currentTime=0,Jz.play(),tU())}function tU(){const e=Math.random(),t=Math.random();e<.5?t<.7?(Zz[0]=!Zz[0],Qz.question=Zz[0]?"しろあげて":"しろさげて",Yz=Date.now()):(Math.random()<.5?Qz.question=Zz[0]?"しろさげない":"しろあげない":Qz.question=Zz[0]?"しろさげないで":"しろあげないで",Qz.question=Zz[0]?"しろさげないで":"しろあげないで",Yz=Date.now()+1500):t<.7?(Zz[1]=!Zz[1],Qz.question=Zz[1]?"あかあげて":"あかさげて",Yz=Date.now()):(Math.random()<.5?Qz.question=Zz[1]?"あかさげない":"あかあげない":Qz.question=Zz[1]?"あかさげないで":"あかあげないで",Yz=Date.now()+1500);const n=new SpeechSynthesisUtterance(Qz.question);n.lang="ja",speechSynthesis.speak(n)}async function nU(){Gz.video.readyState<2&&await new Promise((e=>{Gz.video.onloadeddata=()=>{e(1)}}));let e=null;if(null!=jz)try{e=await jz.estimatePoses(Gz.video,{maxPoses:Fz.modelConfig.maxPoses,flipHorizontal:!1})}catch(e){jz.dispose(),jz=void 0,alert(e)}Gz.drawCtx(),e&&e.length>0&&!Fz.isModelChanged&&(Gz.drawResults(e),console.log(eU(e)))}async function rU(){await nU();const e=document.querySelector("#question");e.textContent!==Qz.question&&(e.textContent=Qz.question),qz=requestAnimationFrame(rU)}!function(e,t=!1){if(vM)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)yM=e;else{xM=e;const t=mM.filter((e=>null==xM[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}bM=t}("https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@3.20.0/dist/"),async function(){Gz=await Hz.setupCamera(Fz.camera),await Uz(Fz.flags,Fz.backend),jz=await async function(){const e=Fz.backend.split("-")[0];return"mediapipe"===e?RA(Fz.model,{runtime:e,modelType:Fz.modelConfig.type,solutionPath:`https://cdn.jsdelivr.net/npm/@mediapipe/pose@${G_.VERSION}`}):"tfjs"===e?RA(Fz.model,{runtime:e,modelType:Fz.modelConfig.type}):void 0}(),rU()}();
//# sourceMappingURL=index.2d16b106.js.map
